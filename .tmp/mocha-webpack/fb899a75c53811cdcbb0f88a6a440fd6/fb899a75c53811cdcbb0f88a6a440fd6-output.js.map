{"version":3,"file":"fb899a75c53811cdcbb0f88a6a440fd6-output.js","sources":["webpack:///webpack/bootstrap 78a6897e9300551053dc","webpack:///lib/util.js","webpack:///external \"react\"","webpack:///external \"chai\"","webpack:///external \"prop-types\"","webpack:///external \"assert\"","webpack:///lib/board.js","webpack:///lib/constants.js","webpack:///lib/block.js","webpack:///lib/data.js","webpack:///external \"seedrandom\"","webpack:///lib/block-component.jsx","webpack:///lib/data-component.jsx","webpack:///external \"react-measure\"","webpack:///external \"core-js\"","webpack:///external \"events\"","webpack:///lib/block-configs.js","webpack:///lib/io-component.jsx","webpack:///stages/calc03.js","webpack:///stages/conditional01.js","webpack:///stages/conditional02.js","webpack:///stages/conditional03.js","webpack:///stages/factorial.js","webpack:///stages/parity.js","webpack:///stages/fibonacci.js","webpack:///stages/power-hard.js","webpack:///stages/gcd.js","webpack:///stages/lcm.js","webpack:///stages/sqrt-easy.js","webpack:///stages/sqrt-hard.js","webpack:///stages/msd.js","webpack:///stages/mod3-hard.js","webpack:///stages/the-fifth-max.js","webpack:///stages/repeat-self.js","webpack:///stages/fibonacci-hard.js","webpack:///stages/factorization.js","webpack:///stages/spaceship.js","webpack:///stages/10000th-digit.js","webpack:///.tmp/mocha-webpack/fb899a75c53811cdcbb0f88a6a440fd6-entry.js","webpack:////home/travis/build/tsg-ut/mnemo/test/unit nonrecursive object Object","webpack:///test/unit/block-component.jsx","webpack:///external \"regenerator-runtime/runtime\"","webpack:///external \"react-gsap-enhancer\"","webpack:///external \"gsap\"","webpack:////home/travis/build/tsg-ut/mnemo/test/unit/block.ls","webpack:///lib/pass-event.js","webpack:///test/unit/board-component.jsx","webpack:///lib/board-component.jsx","webpack:///external \"react-hammerjs\"","webpack:///external \"hammerjs\"","webpack:///external \"svg-path-generator\"","webpack:////home/travis/build/tsg-ut/mnemo/test/unit/board.ls","webpack:///test/unit/data-component.jsx","webpack:///test/unit/io-component.jsx","webpack:///test/unit/panel-component.jsx","webpack:///external \"enzyme\"","webpack:///external \"chai-enzyme\"","webpack:///lib/panel-component.jsx","webpack:////home/travis/build/tsg-ut/mnemo/test/unit/stages.ls","webpack:///external \"chai-things\"","webpack:///external \"mathjs\"","webpack:////home/travis/build/tsg-ut/mnemo/test/unit/util.ls","webpack:////home/travis/build/tsg-ut/mnemo/test/unit/validator.ls","webpack:///lib/validator.js","webpack:///stages/index.js","webpack:///stages/wire01.js","webpack:///stages/calc01.js","webpack:///stages/calc02.js","webpack:///stages/calc04.js","webpack:///stages/calc05.js","webpack:///stages/calc06.js","webpack:///stages/make-minus-one-easy.js","webpack:///stages/division-easy.js","webpack:///stages/sixth-power.js","webpack:///stages/remainder.js","webpack:///stages/plus-32.js","webpack:///stages/bivariation01.js","webpack:///stages/power-easy.js","webpack:///stages/division-hard.js","webpack:///stages/make-minus-one-med.js","webpack:///stages/make-minus-one-hard.js","webpack:///stages/complement-of-2.js","webpack:///stages/binarian-easy.js","webpack:///stages/perfect-number.js","webpack:///stages/reversal.js","webpack:///stages/seq01.js","webpack:///stages/seq02.js","webpack:///stages/max.js","webpack:///stages/100.js","webpack:///stages/100-again.js","webpack:///stages/1000.js","webpack:///stages/plus-32-hard.js","webpack:///stages/xor.js","webpack:///stages/2017.js","webpack:///stages/addition-med.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 78a6897e9300551053dc","require('regenerator-runtime/runtime');\n\n// Check the equality of two arrays *as sets*\nmodule.exports.arrayEquals = (arrayA, arrayB) => {\n\tconst setA = new Set(arrayA);\n\tconst setB = new Set(arrayB);\n\n\tif (setA.size !== setB.size) {\n\t\treturn false;\n\t}\n\n\tfor (const item of setA) {\n\t\tif (!setB.has(item)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nmodule.exports.toCSS = (coordinate) => ({\n\tleft: `${coordinate.x}px`,\n\ttop: `${coordinate.y}px`,\n});\n\n// Promisified setTimeout\nmodule.exports.wait = (time) => (\n\tnew Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve();\n\t\t}, time);\n\t})\n);\n\n// https://gist.github.com/bellbind/353819de43bf694fba3b\nmodule.exports.zip = function* (...values) {\n\tconst iterators = Array.from(values, (value) => value[Symbol.iterator]());\n\tlet nexts = iterators.map((iterator) => iterator.next());\n\n\twhile (nexts.every((next) => !next.done)) {\n\t\tyield nexts.map((next) => next.value);\n\t\tnexts = iterators.map((iterator) => iterator.next());\n\t}\n};\n\nmodule.exports.log = (a, b) => {\n\tif (a <= 0 || a === 1 || b <= 0 || (a === Infinity && b === Infinity)) {\n\t\treturn NaN;\n\t}\n\n\tlet lower = 0;\n\tlet upper = b;\n\n\twhile (upper - lower > 1) {\n\t\tconst mid = Math.floor((lower + upper) / 2);\n\t\tif (Math.pow(a, mid) <= b) {\n\t\t\tlower = mid;\n\t\t} else {\n\t\t\tupper = mid;\n\t\t}\n\t}\n\treturn lower;\n};\n\nmodule.exports.translateDateFromUnixTime = (unixtime) => {\n\tconst date = new Date(unixtime);\n\tconst year = date.getFullYear().toString().padStart(4, '0');\n\tconst month = (date.getMonth() + 1).toString().padStart(2, '0');\n\tconst day = date.getDate().toString().padStart(2, '0');\n\tconst hour = date.getHours().toString().padStart(2, '0');\n\tconst minute = date.getMinutes().toString().padStart(2, '0');\n\tconst seconds = date.getSeconds().toString().padStart(2, '0');\n\treturn `${year}-${month}-${day} ${hour}:${minute}:${seconds}`;\n};\n\nmodule.exports.floorTowardsZero = (decimal) =>\n\t(0 < decimal) ? Math.floor(decimal) : Math.ceil(decimal);\n\n// http://stackoverflow.com/a/9039885\nmodule.exports.isiOS = () => navigator.userAgent.match(/iPad|iPhone|iPod/) && !window.MSStream;\n\n// http://stackoverflow.com/a/11752084\nmodule.exports.isMac = () => navigator.platform.toLowerCase().startsWith('mac');\n\n// https://stackoverflow.com/a/3540295\nmodule.exports.isMobile = () => navigator.userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i);\n\n// eslint-disable-next-line no-empty-function\nmodule.exports.noop = () => {};\n\n// Assign unique ids for native objects\n// Works like id() of python\n// http://stackoverflow.com/a/43963612\nmodule.exports.id = (() => {\n\tlet currentId = 0;\n\tconst map = new WeakMap();\n\n\treturn (object) => {\n\t\tif (!map.has(object)) {\n\t\t\tmap.set(object, ++currentId);\n\t\t}\n\n\t\treturn map.get(object);\n\t};\n})();\n\n// eslint-disable-next-line no-empty-function\nmodule.exports.nop = () => {};\n\nmodule.exports.normalizeStageInput = (inputs) => (\n\tinputs.map((input) => {\n\t\tlet inputDataArrays = input;\n\n\t\tif (!Array.isArray(inputDataArrays)) {\n\t\t\tinputDataArrays = [inputDataArrays];\n\t\t}\n\n\t\treturn inputDataArrays.map((inputData) => {\n\t\t\tlet inputDataArray = inputData;\n\n\t\t\tif (!Array.isArray(inputDataArray)) {\n\t\t\t\tinputDataArray = [inputDataArray];\n\t\t\t}\n\n\t\t\treturn inputDataArray;\n\t\t});\n\t})\n);\n\nmodule.exports.sum = (array) => (\n\tarray.reduce((previous, current) => previous + current, 0)\n);\n\nmodule.exports.trimAfter = (string, length) => {\n\tconst chars = Array.from(string);\n\n\tif (chars.length > length) {\n\t\treturn `${chars.slice(0, length).join('')}…`;\n\t}\n\n\treturn chars;\n};\n\n\n\n// WEBPACK FOOTER //\n// lib/util.js","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"assert\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"assert\"\n// module id = 4\n// module chunks = 0","const Block = require('./block');\nconst Data = require('./data');\nconst blockConfigs = require('./block-configs');\nconst {nop} = require('./util');\nconst EventEmitter = require('events');\nconst seedrandom = require('seedrandom');\n\nclass Board extends EventEmitter {\n\tconstructor(config) {\n\t\tsuper();\n\n\t\tthis.height = config.height;\n\t\tthis.width = config.width;\n\t\tthis.clockLimit = config.clockLimit;\n\n\t\tthis.status = 'stop';\n\t\tthis.clock = 0;\n\t\tthis.outputValue = null;\n\n\t\tthis.blocks = [];\n\t\tfor (let i = 0; i < this.height; i++) {\n\t\t\tconst row = [];\n\t\t\tthis.blocks.push(row);\n\n\t\t\tfor (let j = 0; j < this.width; j++) {\n\t\t\t\trow.push(null);\n\t\t\t}\n\t\t}\n\n\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\tfor (let y = 0; y < this.height; y++) {\n\t\t\t\tthis.placeBlock({x, y, type: 'empty'});\n\t\t\t}\n\t\t}\n\n\t\tif (typeof config.inputX === 'number') {\n\t\t\tthis.inputBlockX = [config.inputX];\n\t\t} else {\n\t\t\tthis.inputBlockX = config.inputX;\n\t\t}\n\t\tthis.inputBlockY = 0;\n\t\tthis.outputBlockX = config.outputX;\n\t\tthis.outputBlockY = config.height - 1;\n\t}\n\n\tget inputBlock() {\n\t\treturn this.inputBlockX.map((x) => this.blocks[this.inputBlockY][x]);\n\t}\n\n\tget outputBlock() {\n\t\treturn this.blocks[this.outputBlockY][this.outputBlockX];\n\t}\n\n\tget blockCount() {\n\t\tlet count = 0;\n\n\t\tthis.forBlocks((block) => {\n\t\t\tif (block.config.name !== 'empty') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t}\n\n\tget weighedBlockCount() {\n\t\tlet count = 0;\n\n\t\tthis.forBlocks((block) => {\n\t\t\tif (block.config.name !== 'empty') {\n\t\t\t\tcount += block.config.weight;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t}\n\n\tget dataCount() {\n\t\tlet count = 0;\n\n\t\tthis.forBlocks((block) => {\n\t\t\tfor (const queue of block.inputQueues.values()) {\n\t\t\t\tcount += queue.length;\n\t\t\t}\n\t\t\tfor (const queue of block.outputQueues.values()) {\n\t\t\t\tcount += queue.length;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t}\n\n\tget dataExists() {\n\t\tlet res = false;\n\t\tthis.forBlocks((block) => {\n\t\t\tif (res === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const queue of block.inputQueues.values()) {\n\t\t\t\tif (queue.length > 0) {\n\t\t\t\t\tres = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const queue of block.outputQueues.values()) {\n\t\t\t\tif (queue.length > 0) {\n\t\t\t\t\tres = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t// Generate the JSON serializable board data that can be exchanged between API\n\tget boardData() {\n\t\tconst blocks = [];\n\n\t\tthis.forBlocks((block, x, y) => {\n\t\t\tif (block.config.name !== 'empty') {\n\t\t\t\tblocks.push({\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\ttype: block.config.name,\n\t\t\t\t\trotate: block.rotate,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn blocks;\n\t}\n\n\tgetBlock(x, y) {\n\t\treturn this.blocks[y][x];\n\t}\n\n\tgetBlocks() {\n\t\treturn this.blocks;\n\t}\n\n\tforBlocks(callback) {\n\t\tfor (let y = 0; y < this.height; y++) {\n\t\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\t\tconst block = this.getBlock(x, y);\n\t\t\t\tcallback.call(this, block, x, y);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetSeededRandom() {\n\t\t// Use arrays instead of objects in seeded JSON. Objects cannot be serialized uniquely.\n\t\tconst blocks = [];\n\n\t\tthis.forBlocks((block, x, y) => {\n\t\t\tif (block.config.name !== 'empty') {\n\t\t\t\tblocks.push([\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tblock.config.name,\n\t\t\t\t\tblock.rotate,\n\t\t\t\t]);\n\t\t\t}\n\t\t});\n\n\t\tconst seed = JSON.stringify(blocks);\n\t\tconst random = seedrandom(seed);\n\t\treturn random;\n\t}\n\n\tplaceBlock({x, y, type, rotate}) {\n\t\tconst config = Object.assign({}, blockConfigs[type]);\n\t\tconfig.x = x;\n\t\tconfig.y = y;\n\t\tconfig.rotate = rotate;\n\t\tconfig.name = type;\n\n\t\tconst block = new Block(this, config);\n\t\tblock.on('erase', (data) => {\n\t\t\tthis.emit('erase', block, data);\n\t\t});\n\t\tblock.on('pass', (passEvent) => {\n\t\t\tthis.emit('pass', block, passEvent);\n\t\t});\n\t\tthis.blocks[y][x] = block;\n\t}\n\n\t// Run the board until the end\n\t// Similar to Stage#executeCase, but without DOM access.\n\trun(inputValue) {\n\t\tthis.input(inputValue);\n\n\t\tconst clockUp = () => {\n\t\t\twhile (true) {\n\t\t\t\tthis.step();\n\n\t\t\t\tif (this.status === 'stop' || this.status === 'paused') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tthis.hand();\n\n\t\t\t\tif (this.status === 'stop' || this.status === 'paused') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (this.clock >= this.clockLimit) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (this.dataCount >= 100) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tclockUp();\n\t}\n\n\tinput(value) {\n\t\tconst newValueArray = (typeof value === 'number') ? [value] : value;\n\t\tconst inputData = newValueArray.map((v, i) => {\n\t\t\tconst inputs = (typeof v === 'number') ? [v] : v;\n\t\t\tconst newDatas = inputs.map((x) => {\n\t\t\t\tconst newData = new Data(this, x, this.inputBlockX[i], this.inputBlockY);\n\t\t\t\tthis.inputBlock[i].input('top', newData);\n\t\t\t\treturn newData;\n\t\t\t});\n\t\t\treturn newDatas;\n\t\t});\n\n\t\tthis.status = 'executing';\n\t\tthis.clock = 0;\n\t\tthis.outputValue = null;\n\n\t\treturn inputData;\n\t}\n\n\toutput(value) {\n\t\tthis.halt();\n\t\tthis.outputValue = value;\n\n\t\t// Wait for the next tick to successfully break the clockUp loop\n\t\tprocess.nextTick(() => {\n\t\t\tthis.emit('output', value);\n\t\t});\n\t}\n\n\tclearData() {\n\t\tthis.forBlocks((block) => block.clearData());\n\t}\n\n\tstep({onPass = nop} = {}) {\n\t\tconst onBlockPass = (passEvent) => {\n\t\t\tif (onPass) {\n\t\t\t\tonPass(passEvent);\n\t\t\t}\n\t\t};\n\n\t\tthis.forBlocks((block) => {\n\t\t\tblock.on('pass', onBlockPass);\n\t\t\tblock.step();\n\t\t\tblock.removeListener('pass', onBlockPass);\n\t\t});\n\n\t\tthis.clock++;\n\n\t\tlet outputExists = false;\n\t\tthis.forBlocks((block) => {\n\t\t\toutputExists = block.outputExists || outputExists;\n\t\t});\n\n\t\tif (!outputExists) {\n\t\t\tif (this.dataExists) {\n\t\t\t\tthis.pause();\n\t\t\t} else {\n\t\t\t\tthis.halt();\n\t\t\t}\n\t\t}\n\t}\n\n\thand() {\n\t\tthis.forBlocks((block) => block.hand());\n\n\t\tlet inputExists = false;\n\t\tthis.forBlocks((block) => {\n\t\t\tinputExists = block.inputExists || inputExists;\n\t\t});\n\n\t\tif (!inputExists) {\n\t\t\tthis.halt();\n\t\t}\n\t}\n\n\thalt() {\n\t\tthis.status = 'stop';\n\t\tthis.clearData();\n\t\tthis.emit('halt');\n\t}\n\n\tpause() {\n\t\tthis.status = 'paused';\n\t\tthis.emit('paused');\n\t}\n}\n\nmodule.exports = Board;\n\n\n\n// WEBPACK FOOTER //\n// lib/board.js","module.exports = {\n\tBLOCK_SIZE: 50,\n};\n\n\n\n// WEBPACK FOOTER //\n// lib/constants.js","const EventEmitter = require('events');\nconst Data = require('./data');\nconst PassEvent = require('./pass-event');\n\nclass Block extends EventEmitter {\n\tconstructor(board, config) {\n\t\tsuper();\n\t\tthis.board = board;\n\t\tthis.x = config.x;\n\t\tthis.y = config.y;\n\t\tthis.rotate = config.rotate || 0;\n\t\tthis.name = config.name;\n\t\tthis.config = config;\n\t\tthis.inputExists = false; // indicates whether self has input\n\t\tthis.outputExists = false; // indicates whether self has anything as output now\n\t\tthis.inputQueues = new Map([\n\t\t\t['top', []],\n\t\t\t['left', []],\n\t\t\t['right', []],\n\t\t\t['bottom', []],\n\t\t]);\n\n\t\tthis.outputQueues = new Map([\n\t\t\t['top', []],\n\t\t\t['left', []],\n\t\t\t['right', []],\n\t\t\t['bottom', []],\n\t\t]);\n\t\tif (this.config.type === 'wire' || this.config.type === 'calc') {\n\t\t\tthis.rotatedPlugs = this.config.io.plugs.map((direction) => this.rotatedDirection(direction));\n\t\t} else if (this.config.type === 'wireF') {\n\t\t\tthis.rotatedFlow = {};\n\t\t\tconst directions = ['top', 'right', 'bottom', 'left'];\n\t\t\tdirections.forEach((from) => {\n\t\t\t\tif (this.config.io.flow[from]) {\n\t\t\t\t\tthis.rotatedFlow[this.rotatedDirection(from)] =\n\t\t\t\t\t\tthis.config.io.flow[from].map((to) => this.rotatedDirection(to));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trotatedDirection(direction) {\n\t\tif (!this.config.rotatable) {\n\t\t\treturn direction;\n\t\t}\n\n\t\tconst directions = ['top', 'right', 'bottom', 'left'];\n\t\treturn directions[(directions.indexOf(direction) + this.rotate) % 4];\n\t}\n\n\tinput(position, data) {\n\t\tthis.inputExists = true;\n\t\tthis.inputQueues.get(position).push(data);\n\t\tthis.emit('get', {direction: position, data});\n\t}\n\n\tstep() {\n\t\tthis.inputExists = false;\n\n\t\tswitch (this.config.type) {\n\t\t\tcase 'empty': {\n\t\t\t\t// Erase all data passed to the empty block\n\t\t\t\tfor (const queue of this.inputQueues.values()) {\n\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\tconst data = queue.shift();\n\t\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'wire': {\n\t\t\t\tfor (const [source, queue] of this.inputQueues.entries()) {\n\t\t\t\t\t// When data exists in pluged direction\n\t\t\t\t\tif (queue.length === 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.rotatedPlugs.includes(source)) {\n\t\t\t\t\t\tconst destinations = this.rotatedPlugs.filter((direction) => direction !== source);\n\t\t\t\t\t\tconst data = queue.shift();\n\n\t\t\t\t\t\t// pass through\n\t\t\t\t\t\tconst input = new Map([[source, data]]);\n\n\t\t\t\t\t\tconst output = new Map();\n\t\t\t\t\t\tdestinations.forEach((direction) => {\n\t\t\t\t\t\t\tconst outData = new Data(this.board, data.value);\n\t\t\t\t\t\t\tthis.outputQueues.get(direction).push(outData);\n\t\t\t\t\t\t\toutput.set(direction, outData);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.emit('pass', new PassEvent({in: input, out: output}));\n\t\t\t\t\t\tthis.outputExists = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Erase data when data exists in non-pluged direction\n\t\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\t\tconst data = queue.shift();\n\t\t\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'calc': {\n\t\t\t\tfor (const [source, queue] of this.inputQueues.entries()) {\n\t\t\t\t\t// When data exists in pluged direction\n\t\t\t\t\tif (queue.length !== 0 && this.rotatedPlugs.includes(source)) {\n\t\t\t\t\t\tconst destinations = this.rotatedPlugs.filter((direction) => direction !== source);\n\t\t\t\t\t\tconst data = queue.shift();\n\n\t\t\t\t\t\t// Calculate and pass through\n\t\t\t\t\t\tconst input = new Map([[source, data]]);\n\n\t\t\t\t\t\tconst output = new Map();\n\t\t\t\t\t\tdestinations.forEach((direction) => {\n\t\t\t\t\t\t\tconst value = this.config.func(data.value);\n\t\t\t\t\t\t\tconst outData = new Data(this.board, isNaN(value) ? 0 : value);\n\t\t\t\t\t\t\tthis.outputQueues.get(direction).push(outData);\n\t\t\t\t\t\t\toutput.set(direction, outData);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.emit('pass', new PassEvent({in: input, out: output}));\n\t\t\t\t\t\tthis.outputExists = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Erase data when data exists in non-pluged direction\n\t\t\t\t\tif (!this.rotatedPlugs.includes(source)) {\n\t\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\t\tconst data = queue.shift();\n\t\t\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'calc2': {\n\t\t\t\tconst sources = this.config.io.in.map((direction) => this.rotatedDirection(direction));\n\t\t\t\tconst destination = this.rotatedDirection(this.config.io.out);\n\n\t\t\t\t// Execute calculation when all inputs are satisfied\n\t\t\t\tif (sources.every((source) => this.inputQueues.get(source).length > 0)) {\n\t\t\t\t\tconst datas = [];\n\n\t\t\t\t\t// Calculate and pass through\n\t\t\t\t\tconst input = new Map();\n\t\t\t\t\tsources.forEach((source) => {\n\t\t\t\t\t\tconst data = this.inputQueues.get(source).shift();\n\t\t\t\t\t\tinput.set(source, data);\n\t\t\t\t\t\tdatas.push(data);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst value = this.config.func(...datas.map((data) => data.value));\n\t\t\t\t\tconst outData = new Data(this.board, isNaN(value) ? 0 : value);\n\t\t\t\t\tthis.outputQueues.get(destination).push(outData);\n\t\t\t\t\tconst output = new Map([[destination, outData]]);\n\n\t\t\t\t\tthis.emit('pass', new PassEvent({in: input, out: output}));\n\t\t\t\t\tthis.outputExists = true;\n\t\t\t\t}\n\n\t\t\t\t// Erase data when data exists in non-pluged direction\n\t\t\t\tfor (const [source, queue] of this.inputQueues.entries()) {\n\t\t\t\t\tif (!sources.includes(source)) {\n\t\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\t\tconst data = queue.shift();\n\t\t\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'calc-switch': {\n\t\t\t\tconst sources = this.config.io.in.map((direction) => (\n\t\t\t\t\tthis.rotatedDirection(direction)\n\t\t\t\t));\n\t\t\t\tconst destinations = this.config.io.out.map((direction) => (\n\t\t\t\t\tthis.rotatedDirection(direction)\n\t\t\t\t));\n\n\t\t\t\t// Execute calculation when all inputs are satisfied\n\t\t\t\tif (sources.every((source) => this.inputQueues.get(source).length > 0)) {\n\t\t\t\t\tconst datas = [];\n\n\t\t\t\t\t// Calculate and pass through\n\t\t\t\t\tconst input = new Map();\n\t\t\t\t\tsources.forEach((source) => {\n\t\t\t\t\t\tconst data = this.inputQueues.get(source).shift();\n\t\t\t\t\t\tinput.set(source, data);\n\t\t\t\t\t\tdatas.push(data);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst values = datas.map((data) => data.value);\n\t\t\t\t\tconst {directionIndex, value} = this.config.func(...values);\n\n\t\t\t\t\tconst data = new Data(this.board, isNaN(value) ? 0 : value);\n\t\t\t\t\tconst destination = destinations[directionIndex];\n\t\t\t\t\tthis.outputQueues.get(destination).push(data);\n\t\t\t\t\tconst output = new Map([[destination, data]]);\n\n\t\t\t\t\tthis.emit('pass', new PassEvent({in: input, out: output}));\n\t\t\t\t\tthis.outputExists = true;\n\t\t\t\t}\n\n\t\t\t\t// Erase data when data exists in non-pluged direction\n\t\t\t\tfor (const [source, queue] of this.inputQueues.entries()) {\n\t\t\t\t\tif (!sources.includes(source)) {\n\t\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\t\tconst data = queue.shift();\n\t\t\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'wireF': {\n\t\t\t\tfor (const [source, queue] of this.inputQueues.entries()) {\n\t\t\t\t\tif (queue.length === 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.rotatedFlow[source]) {\n\t\t\t\t\t\t// When data exists in the starting direction of some flow\n\t\t\t\t\t\tconst destinations = this.rotatedFlow[source];\n\t\t\t\t\t\tconst data = queue.shift();\n\n\t\t\t\t\t\tconst input = new Map([[source, data]]);\n\t\t\t\t\t\tconst output = new Map();\n\n\t\t\t\t\t\tdestinations.forEach((direction) => {\n\t\t\t\t\t\t\tconst outData = new Data(this.board, data.value);\n\t\t\t\t\t\t\tthis.outputQueues.get(direction).push(outData);\n\t\t\t\t\t\t\toutput.set(direction, outData);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.emit('pass', new PassEvent({in: input, out: output}));\n\t\t\t\t\t\tthis.outputExists = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Erase data otherwise\n\t\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\t\tconst data = queue.shift();\n\t\t\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\thand() {\n\t\tthis.outputExists = false;\n\n\t\tfor (const [direction, queue] of this.outputQueues.entries()) {\n\t\t\twhile (queue.length) {\n\t\t\t\tconst data = queue.shift();\n\t\t\t\tthis.handTo(direction, data);\n\t\t\t}\n\t\t}\n\t}\n\n\thandTo(direction, data) {\n\t\tif (\n\t\t\tdirection === 'bottom' &&\n\t\t\tthis.y + 1 === this.board.height &&\n\t\t\tthis.x === this.board.outputBlockX\n\t\t) {\n\t\t\tthis.board.output(data.value);\n\t\t\tthis.emit('erase', data);\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (direction) {\n\t\t\tcase 'top':\n\t\t\t\tif (0 <= this.y - 1) {\n\t\t\t\t\tconst nextBlock = this.board.getBlock(this.x, this.y - 1);\n\t\t\t\t\tnextBlock.input('bottom', data);\n\t\t\t\t\tthis.emit('hand', data);\n\t\t\t\t} else {\n\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'bottom':\n\t\t\t\tif (this.board.height > this.y + 1) {\n\t\t\t\t\tconst nextBlock = this.board.getBlock(this.x, this.y + 1);\n\t\t\t\t\tnextBlock.input('top', data);\n\t\t\t\t\tthis.emit('hand', data);\n\t\t\t\t} else {\n\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'left':\n\t\t\t\tif (0 <= this.x - 1) {\n\t\t\t\t\tconst nextBlock = this.board.getBlock(this.x - 1, this.y);\n\t\t\t\t\tnextBlock.input('right', data);\n\t\t\t\t\tthis.emit('hand', data);\n\t\t\t\t} else {\n\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tif (this.board.width > this.x + 1) {\n\t\t\t\t\tconst nextBlock = this.board.getBlock(this.x + 1, this.y);\n\t\t\t\t\tnextBlock.input('left', data);\n\t\t\t\t\tthis.emit('hand', data);\n\t\t\t\t} else {\n\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tclearData() {\n\t\t// Erase data when data exists in non-pluged direction\n\t\t[this.inputQueues, this.outputQueues].forEach((queues) => {\n\t\t\tfor (const queue of queues.values()) {\n\t\t\t\twhile (queue.length) {\n\t\t\t\t\tconst data = queue.shift();\n\t\t\t\t\tthis.emit('erase', data);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = Block;\n\n\n\n// WEBPACK FOOTER //\n// lib/block.js","class Data {\n\tconstructor(board /* TODO: 消したい */, value, x, y) {\n\t\tthis.board = board;\n\t\tthis.value = value;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n\nmodule.exports = Data;\n\n\n\n// WEBPACK FOOTER //\n// lib/data.js","module.exports = require(\"seedrandom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"seedrandom\"\n// module id = 9\n// module chunks = 0","const React = require('react');\nconst PropTypes = require('prop-types');\nconst {id} = require('./util');\nconst {BLOCK_SIZE} = require('./constants');\nconst DataComponent = require('./data-component.jsx');\n\nclass BlockComponent extends React.Component {\n\tstatic propTypes = {\n\t\tx: PropTypes.number.isRequired,\n\t\ty: PropTypes.number.isRequired,\n\t\tstatus: PropTypes.string.isRequired,\n\t\tblock: PropTypes.shape({\n\t\t\ton: PropTypes.func.isRequired,\n\t\t}).isRequired,\n\t\tonClick: PropTypes.func.isRequired,\n\t\tonPassAnimationComplete: PropTypes.func.isRequired,\n\t\tisRapid: PropTypes.bool.isRequired,\n\t\tviewBoxScale: PropTypes.number,\n\t}\n\n\tstatic defaultProps = {\n\t\tviewBoxScale: null,\n\t}\n\n\tconstructor(props, state) {\n\t\tsuper(props, state);\n\n\t\tthis.dataAnimationResolvers = new WeakMap();\n\n\t\tthis.props.block.on('get', ({direction, data}) => {\n\t\t\tthis.setState({\n\t\t\t\tinputData: this.state.inputData.concat([{\n\t\t\t\t\tdirection,\n\t\t\t\t\tdata,\n\t\t\t\t\tisErasing: this.props.status === 'stop',\n\t\t\t\t}]),\n\t\t\t});\n\t\t});\n\n\t\tthis.props.block.on('pass', async (passEvent) => {\n\t\t\tconst inputAnimations = [];\n\n\t\t\tfor (const [direction, data] of passEvent.in.entries()) {\n\t\t\t\t// MEMO: Immutable.js使いたい\n\t\t\t\tthis.setState({\n\t\t\t\t\tanimatingData: this.state.animatingData.concat([{\n\t\t\t\t\t\tdirection,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tisInward: true,\n\t\t\t\t\t\tisErasing: this.props.status === 'stop',\n\t\t\t\t\t}]),\n\t\t\t\t\tinputData: this.state.inputData.filter((inputData) => data !== inputData.data),\n\t\t\t\t});\n\n\t\t\t\tinputAnimations.push(new Promise((resolve) => {\n\t\t\t\t\tthis.dataAnimationResolvers.set(data, resolve);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tawait Promise.all(inputAnimations);\n\n\t\t\tconst outputAnimations = [];\n\n\t\t\tfor (const data of passEvent.in.values()) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tanimatingData: this.state.animatingData.filter((animatingData) => (\n\t\t\t\t\t\tdata !== animatingData.data\n\t\t\t\t\t)),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const [direction, data] of passEvent.out.entries()) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tanimatingData: this.state.animatingData.concat([{\n\t\t\t\t\t\tdirection,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tisInward: false,\n\t\t\t\t\t\tisErasing: this.props.status === 'stop',\n\t\t\t\t\t}]),\n\t\t\t\t});\n\n\t\t\t\toutputAnimations.push(new Promise((resolve) => {\n\t\t\t\t\tthis.dataAnimationResolvers.set(data, resolve);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tawait Promise.all(outputAnimations);\n\n\t\t\tfor (const [direction, data] of passEvent.out.entries()) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tanimatingData: this.state.animatingData.filter((animatingData) => (\n\t\t\t\t\t\tdata !== animatingData.data\n\t\t\t\t\t)),\n\t\t\t\t\toutputData: this.state.outputData.concat([{\n\t\t\t\t\t\tdirection,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tisErasing: this.props.status === 'stop',\n\t\t\t\t\t}]),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.props.onPassAnimationComplete(passEvent);\n\t\t});\n\n\t\tthis.props.block.on('hand', (data) => {\n\t\t\tthis.setState({\n\t\t\t\toutputData: this.state.outputData.filter((outputData) => (\n\t\t\t\t\tdata !== outputData.data\n\t\t\t\t)),\n\t\t\t});\n\t\t});\n\n\t\tthis.props.block.on('erase', (data) => {\n\t\t\tthis.state.inputData.forEach((inputData) => {\n\t\t\t\tif (inputData.data === data) {\n\t\t\t\t\tinputData.isErasing = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.state.animatingData.forEach((animatingData) => {\n\t\t\t\tif (animatingData.data === data) {\n\t\t\t\t\tanimatingData.isErasing = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.state.outputData.forEach((outputData) => {\n\t\t\t\tif (outputData.data === data) {\n\t\t\t\t\toutputData.isErasing = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tinputData: this.state.inputData,\n\t\t\t\tanimatingData: this.state.animatingData,\n\t\t\t\toutputData: this.state.outputData,\n\t\t\t});\n\t\t});\n\n\t\tthis.state = {\n\t\t\tinputData: [], // Data in inputQueue\n\t\t\toutputData: [], // Data in outputQueue\n\t\t\tanimatingData: [], // Data in animation\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.status !== 'stop' && nextProps.status === 'stop') {\n\t\t\tthis.handleStop();\n\t\t}\n\t}\n\n\thandleStop() {\n\t\t[this.state.inputData, this.state.animatingData, this.state.outputData].forEach((data) => {\n\t\t\tdata.forEach((datum) => {\n\t\t\t\tdatum.isErasing = true;\n\t\t\t});\n\t\t});\n\n\t\tthis.setState({\n\t\t\tinputData: this.state.inputData,\n\t\t\tanimatingData: this.state.animatingData,\n\t\t\toutputData: this.state.outputData,\n\t\t});\n\t}\n\n\thandleDataAnimationComplete = (data) => {\n\t\tif (this.dataAnimationResolvers.has(data)) {\n\t\t\tthis.dataAnimationResolvers.get(data)();\n\t\t}\n\t}\n\n\thandleDataEraseAnimationComplete = (data) => {\n\t\tthis.setState({\n\t\t\tinputData: this.state.inputData.filter((inputData) => inputData.data !== data),\n\t\t\tanimatingData: this.state.animatingData.filter((animatingData) => animatingData.data !== data),\n\t\t\toutputData: this.state.outputData.filter((outputData) => outputData.data !== data),\n\t\t});\n\t}\n\n\thandleClick = (event) => (\n\t\tthis.props.onClick(event, this.props.x, this.props.y)\n\t)\n\n\trender() {\n\t\treturn (\n\t\t\t<g\n\t\t\t\ttransform={`translate(${this.props.x * BLOCK_SIZE}, ${this.props.y * BLOCK_SIZE})`}\n\t\t\t>\n\t\t\t\t{/* click event capture */}\n\t\t\t\t<rect\n\t\t\t\t\tclassName=\"block-click-capture\"\n\t\t\t\t\twidth={BLOCK_SIZE}\n\t\t\t\t\theight={BLOCK_SIZE}\n\t\t\t\t\tx=\"0\"\n\t\t\t\t\ty=\"0\"\n\t\t\t\t\tfill=\"transparent\"\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tonContextMenu={this.handleClick}\n\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t/>\n\t\t\t\t{/* data layer */}\n\t\t\t\t<g>\n\t\t\t\t\t{[\n\t\t\t\t\t\t...(this.state.inputData.map(({direction, data, isErasing}) => (\n\t\t\t\t\t\t\t<DataComponent\n\t\t\t\t\t\t\t\tkey={id(data)}\n\t\t\t\t\t\t\t\tdirection={direction}\n\t\t\t\t\t\t\t\tisInward={true}\n\t\t\t\t\t\t\t\tisAnimating={false}\n\t\t\t\t\t\t\t\tisErasing={isErasing}\n\t\t\t\t\t\t\t\tvalue={data.value}\n\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\tonAnimationComplete={this.handleDataAnimationComplete}\n\t\t\t\t\t\t\t\tonEraseAnimationComplete={this.handleDataEraseAnimationComplete}\n\t\t\t\t\t\t\t\tisRapid={this.props.isRapid}\n\t\t\t\t\t\t\t\tviewBoxScale={this.props.viewBoxScale}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))),\n\t\t\t\t\t\t...(this.state.animatingData.map(({direction, data, isInward, isErasing}) => (\n\t\t\t\t\t\t\t<DataComponent\n\t\t\t\t\t\t\t\tkey={id(data)}\n\t\t\t\t\t\t\t\tdirection={direction}\n\t\t\t\t\t\t\t\tisInward={isInward}\n\t\t\t\t\t\t\t\tisAnimating={true}\n\t\t\t\t\t\t\t\tisErasing={isErasing}\n\t\t\t\t\t\t\t\tvalue={data.value}\n\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\tonAnimationComplete={this.handleDataAnimationComplete}\n\t\t\t\t\t\t\t\tonEraseAnimationComplete={this.handleDataEraseAnimationComplete}\n\t\t\t\t\t\t\t\tisRapid={this.props.isRapid}\n\t\t\t\t\t\t\t\tviewBoxScale={this.props.viewBoxScale}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))),\n\t\t\t\t\t\t...(this.state.outputData.map(({direction, data, isErasing}) => (\n\t\t\t\t\t\t\t<DataComponent\n\t\t\t\t\t\t\t\tkey={id(data)}\n\t\t\t\t\t\t\t\tdirection={direction}\n\t\t\t\t\t\t\t\tisInward={false}\n\t\t\t\t\t\t\t\tisAnimating={false}\n\t\t\t\t\t\t\t\tisErasing={isErasing}\n\t\t\t\t\t\t\t\tvalue={data.value}\n\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\tonAnimationComplete={this.handleDataAnimationComplete}\n\t\t\t\t\t\t\t\tonEraseAnimationComplete={this.handleDataEraseAnimationComplete}\n\t\t\t\t\t\t\t\tisRapid={this.props.isRapid}\n\t\t\t\t\t\t\t\tviewBoxScale={this.props.viewBoxScale}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))),\n\t\t\t\t\t]}\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nmodule.exports = BlockComponent;\n\n\n\n// WEBPACK FOOTER //\n// lib/block-component.jsx","const React = require('react');\nconst PropTypes = require('prop-types');\nconst GSAP = require('react-gsap-enhancer');\nconst assert = require('assert');\nconst {TweenLite, Power0} = require('gsap');\nconst {default: Measure} = require('react-measure');\nconst {BLOCK_SIZE} = require('./constants');\n\nclass DataComponent extends React.Component {\n\tstatic propTypes = {\n\t\tdirection: PropTypes.string.isRequired,\n\t\tisInward: PropTypes.bool.isRequired,\n\t\tisAnimating: PropTypes.bool.isRequired,\n\t\tisErasing: PropTypes.bool.isRequired,\n\t\tvalue: PropTypes.number.isRequired,\n\t\t// props.data should only be used in callback\n\t\t// eslint-disable-next-line react/forbid-prop-types\n\t\tdata: PropTypes.object.isRequired,\n\t\tonAnimationComplete: PropTypes.func.isRequired,\n\t\tonEraseAnimationComplete: PropTypes.func.isRequired,\n\t\tisRapid: PropTypes.bool.isRequired,\n\t\tviewBoxScale: PropTypes.number,\n\t}\n\n\tstatic defaultProps = {\n\t\tviewBoxScale: null,\n\t}\n\n\tconstructor(props, state) {\n\t\tsuper(props, state);\n\n\t\tthis.state = {\n\t\t\tvalueDimensions: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.isAnimating) {\n\t\t\tthis.handleStartAnimation();\n\t\t}\n\n\t\tif (this.props.isErasing) {\n\t\t\tthis.handleStartErasion();\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!this.props.isAnimating && nextProps.isAnimating) {\n\t\t\tthis.handleStartAnimation();\n\t\t}\n\n\t\tif (this.props.isAnimating && !nextProps.isAnimating) {\n\t\t\tthis.handleStopAnimation();\n\t\t}\n\n\t\tif (!this.props.isErasing && nextProps.isErasing) {\n\t\t\tthis.handleStartErasion();\n\t\t}\n\n\t\tif (this.props.isErasing && !nextProps.isErasing) {\n\t\t\tthis.handleStopErasion();\n\t\t}\n\n\t\tif (!this.props.isRapid && nextProps.isRapid) {\n\t\t\tthis.handleStartRapid();\n\t\t}\n\t}\n\n\thandleStartAnimation = () => {\n\t\tconst duration = this.props.isRapid ? 0 : 0.4;\n\n\t\tthis.animation = this.addAnimation(({target}) => (\n\t\t\tTweenLite.to(target, duration, Object.assign({\n\t\t\t\ttransformOrigin: 'center center',\n\t\t\t\tease: Power0.easeNone,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.props.onAnimationComplete(this.props.data);\n\t\t\t\t\t}, 0);\n\t\t\t\t},\n\t\t\t}, this.getAnimationProperties()))\n\t\t));\n\t}\n\n\thandleStopAnimation = () => {\n\t\tthis.animation.pause();\n\t}\n\n\thandleStartErasion = () => {\n\t\tif (this.animation) {\n\t\t\tthis.animation.pause();\n\t\t}\n\n\t\tconst duration = this.props.isRapid ? 0 : 0.4;\n\n\t\tthis.erasion = this.addAnimation(({target}) => (\n\t\t\tTweenLite.to(target, duration, Object.assign({\n\t\t\t\ttransformOrigin: 'center center',\n\t\t\t\tease: Power0.easeNone,\n\t\t\t\tscale: 2,\n\t\t\t\topacity: 0,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.props.onEraseAnimationComplete(this.props.data);\n\t\t\t\t\t}, 0);\n\t\t\t\t},\n\t\t\t}))\n\t\t));\n\t}\n\n\thandleStopErasion = () => {\n\t\tthis.erasion.pause();\n\t}\n\n\thandleStartRapid = () => {\n\t\tif (this.animation) {\n\t\t\tthis.animation.seek(this.animation.duration(), false);\n\t\t}\n\n\t\tif (this.erasion) {\n\t\t\tthis.erasion.seek(this.erasion.duration(), false);\n\t\t}\n\t}\n\n\thandleMeasureValue = (dimensions) => {\n\t\tif (!this.props.isErasing) {\n\t\t\tthis.setState({\n\t\t\t\tvalueDimensions: dimensions.bounds,\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAnimationProperties = () => {\n\t\tif (this.props.isInward) {\n\t\t\tif (this.props.direction === 'top') {\n\t\t\t\treturn {y: `+=${BLOCK_SIZE / 2}`};\n\t\t\t}\n\n\t\t\tif (this.props.direction === 'right') {\n\t\t\t\treturn {x: `-=${BLOCK_SIZE / 2}`};\n\t\t\t}\n\n\t\t\tif (this.props.direction === 'left') {\n\t\t\t\treturn {x: `+=${BLOCK_SIZE / 2}`};\n\t\t\t}\n\n\t\t\tassert(this.props.direction === 'bottom');\n\t\t\treturn {y: `-=${BLOCK_SIZE / 2}`};\n\t\t}\n\n\t\tif (this.props.direction === 'top') {\n\t\t\treturn {y: `-=${BLOCK_SIZE / 2}`};\n\t\t}\n\n\t\tif (this.props.direction === 'right') {\n\t\t\treturn {x: `+=${BLOCK_SIZE / 2}`};\n\t\t}\n\n\t\tif (this.props.direction === 'left') {\n\t\t\treturn {x: `-=${BLOCK_SIZE / 2}`};\n\t\t}\n\n\t\tassert(this.props.direction === 'bottom');\n\t\treturn {y: `+=${BLOCK_SIZE / 2}`};\n\t}\n\n\tgetDisplayValue = () => {\n\t\tif (this.props.value === Infinity) {\n\t\t\treturn '∞';\n\t\t}\n\n\t\tif (this.props.value === -Infinity) {\n\t\t\treturn '-∞';\n\t\t}\n\n\t\treturn this.props.value.toString();\n\t}\n\n\tgetInitialTransform = () => {\n\t\tif (this.props.isInward) {\n\t\t\tif (this.props.direction === 'top') {\n\t\t\t\treturn `translate(${BLOCK_SIZE / 2}, 0)`;\n\t\t\t}\n\n\t\t\tif (this.props.direction === 'right') {\n\t\t\t\treturn `translate(${BLOCK_SIZE}, ${BLOCK_SIZE / 2})`;\n\t\t\t}\n\n\t\t\tif (this.props.direction === 'left') {\n\t\t\t\treturn `translate(0, ${BLOCK_SIZE / 2})`;\n\t\t\t}\n\n\t\t\tassert(this.props.direction === 'bottom');\n\t\t\treturn `translate(${BLOCK_SIZE / 2}, ${BLOCK_SIZE})`;\n\t\t}\n\n\t\treturn `translate(${BLOCK_SIZE / 2}, ${BLOCK_SIZE / 2})`;\n\t}\n\n\tgetRectangleWidth = () => (\n\t\t(this.state.valueDimensions !== null && this.props.viewBoxScale !== null)\n\t\t\t? this.state.valueDimensions.width / this.props.viewBoxScale + 4\n\t\t\t: (this.getDisplayValue().length * 6 + 4)\n\t)\n\n\trender() {\n\t\treturn (\n\t\t\t<g transform={this.getInitialTransform()}>\n\t\t\t\t<rect\n\t\t\t\t\tx={-this.getRectangleWidth() / 2}\n\t\t\t\t\ty=\"-8\"\n\t\t\t\t\trx=\"3\"\n\t\t\t\t\twidth={this.getRectangleWidth()}\n\t\t\t\t\theight=\"16\"\n\t\t\t\t\tfill=\"darkorange\"\n\t\t\t\t/>\n\t\t\t\t<Measure\n\t\t\t\t\tonResize={this.handleMeasureValue}\n\t\t\t\t\tbounds={true}\n\t\t\t\t>\n\t\t\t\t\t{({measureRef}) => (\n\t\t\t\t\t\t<text\n\t\t\t\t\t\t\tref={measureRef}\n\t\t\t\t\t\t\tx=\"0\"\n\t\t\t\t\t\t\ty=\"0\"\n\t\t\t\t\t\t\tfontSize=\"12\"\n\t\t\t\t\t\t\tfill=\"white\"\n\t\t\t\t\t\t\ttextAnchor=\"middle\"\n\t\t\t\t\t\t\tdominantBaseline=\"central\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.getDisplayValue()}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t)}\n\t\t\t\t</Measure>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nmodule.exports = GSAP.default()(DataComponent);\n\n\n\n// WEBPACK FOOTER //\n// lib/data-component.jsx","module.exports = require(\"react-measure\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-measure\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"core-js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"events\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"events\"\n// module id = 14\n// module chunks = 0","const util = require('./util');\n\nmodule.exports = {\n\tempty: {\n\t\ttype: 'empty',\n\t\tio: {},\n\t},\n\twireI: {\n\t\ttype: 'wire',\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 1,\n\t\trotatable: true,\n\t},\n\twireL: {\n\t\ttype: 'wire',\n\t\tio: {\n\t\t\tplugs: ['top', 'right'],\n\t\t},\n\t\tweight: 1,\n\t\trotatable: true,\n\t},\n\twireT: {\n\t\ttype: 'wire',\n\t\tio: {\n\t\t\tplugs: ['right', 'top', 'left'],\n\t\t},\n\t\tweight: 1,\n\t\trotatable: true,\n\t},\n\twireXdot: {\n\t\ttype: 'wire',\n\t\tio: {\n\t\t\tplugs: ['right', 'top', 'left', 'bottom'],\n\t\t},\n\t\tweight: 1,\n\t\trotatable: false,\n\t},\n\twireX: {\n\t\ttype: 'wireF',\n\t\tio: {\n\t\t\tflow: {\n\t\t\t\ttop: ['bottom'],\n\t\t\t\tbottom: ['top'],\n\t\t\t\tleft: ['right'],\n\t\t\t\tright: ['left'],\n\t\t\t},\n\t\t},\n\t\tweight: 1,\n\t},\n\tjunctionR: {\n\t\ttype: 'wireF',\n\t\tio: {\n\t\t\tflow: {\n\t\t\t\ttop: ['right'],\n\t\t\t\tleft: ['right'],\n\t\t\t\tright: ['top', 'left'],\n\t\t\t},\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t},\n\tjunctionL: {\n\t\ttype: 'wireF',\n\t\tio: {\n\t\t\tflow: {\n\t\t\t\ttop: ['left'],\n\t\t\t\tright: ['left'],\n\t\t\t\tleft: ['top', 'right'],\n\t\t\t},\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t},\n\tjunctionT: {\n\t\ttype: 'wireF',\n\t\tio: {\n\t\t\tflow: {\n\t\t\t\ttop: ['left', 'right'],\n\t\t\t\tright: ['top'],\n\t\t\t\tleft: ['top'],\n\t\t\t},\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t},\n\t'times-2': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n * 2,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'times-3': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n * 3,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'times-10': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n * 10,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'add-3': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n + 3,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'plus-1': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n + 1,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'plus-2': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n + 2,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'minus-1': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n - 1,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'div-2': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => Math.round((n - n % 2) / 2),\n\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'div-3': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => Math.round((n - n % 3) / 3),\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'div-10': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => Math.round((n - n % 10) / 10),\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'minus-2': {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n - 2,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\tlog10: {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n === 0 ? -Infinity : util.log(10, Math.abs(n)),\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\tlog2: {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n === 0 ? -Infinity : util.log(2, Math.abs(n)),\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'const-0': {\n\t\ttype: 'calc',\n\t\tfunc: () => 0,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'const-1': {\n\t\ttype: 'calc',\n\t\tfunc: () => 1,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'const-2': {\n\t\ttype: 'calc',\n\t\tfunc: () => 2,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'const-3': {\n\t\ttype: 'calc',\n\t\tfunc: () => 3,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'const-10': {\n\t\ttype: 'calc',\n\t\tfunc: () => 10,\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\tadd: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a + b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tsub: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a - b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tmul: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a * b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tdiv: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => {\n\t\t\tif (b === 0) {\n\t\t\t\treturn a / b;\n\t\t\t}\n\t\t\treturn Math.round((a - a % b) / b);\n\t\t},\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tmod: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a % b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tpow: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => {\n\t\t\tif (a === 1 && (b === Infinity || b === -Infinity)) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn util.floorTowardsZero(Math.pow(a, b));\n\t\t},\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tlog: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => b === 0 ? -Infinity : util.log(Math.abs(a), Math.abs(b)),\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tsqrt: {\n\t\ttype: 'calc',\n\t\tfunc: (n) => n < 0 ? 0 : Math.floor(Math.sqrt(n)),\n\t\tio: {\n\t\t\tplugs: ['top', 'bottom'],\n\t\t},\n\t\tweight: 2,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\t'bitshift-left': {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a << b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\t'bitshift-right': {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a >> b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\t'bitwise-and': {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a & b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\t'bitwise-or': {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a | b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\t'bitwise-xor': {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a ^ b,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tequal: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a === b ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tneq: {\n\t\ttype: 'calc2',\n\t\t// eslint-disable-next-line no-negated-condition\n\t\tfunc: (a, b) => a !== b ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tgt: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a > b ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tgeqq: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a >= b ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tlt: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a < b ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tleqq: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => a <= b ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tconditional: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b, c) => a ? b : c,\n\t\tio: {\n\t\t\tin: ['top', 'left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tdiode: {\n\t\ttype: 'calc2',\n\t\tfunc: (a) => a,\n\t\tio: {\n\t\t\tin: ['right'],\n\t\t\tout: 'left',\n\t\t},\n\t\tweight: 3,\n\t\trotatable: true,\n\t},\n\t'c-contact': {\n\t\ttype: 'calc-switch',\n\t\tfunc: (a) => ({\n\t\t\tdirectionIndex: a ? 1 : 0,\n\t\t\tvalue: 1,\n\t\t}),\n\t\tio: {\n\t\t\tin: ['top'],\n\t\t\tout: ['left', 'right'],\n\t\t},\n\t\tweight: 3,\n\t\trotatable: true,\n\t},\n\ttransistor: {\n\t\ttype: 'calc-switch',\n\t\tfunc: (a, b) => ({\n\t\t\tdirectionIndex: a ? 1 : 0,\n\t\t\tvalue: b,\n\t\t}),\n\t\tio: {\n\t\t\tin: ['top', 'left'],\n\t\t\tout: ['bottom', 'right'],\n\t\t},\n\t\tweight: 3,\n\t\trotatable: true,\n\t},\n\tand: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => (a !== 0 && b !== 0) ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tor: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => (a !== 0 || b !== 0) ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tnand: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => (a !== 0 && b !== 0) ? 0 : 1,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tnor: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => (a !== 0 || b !== 0) ? 0 : 1,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n\tnot: {\n\t\ttype: 'calc2',\n\t\tfunc: (a) => a === 0 ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['top'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t\trotatable: true,\n\t\tonRotatableWire: true,\n\t},\n\txor: {\n\t\ttype: 'calc2',\n\t\tfunc: (a, b) => (a !== 0 ^ b !== 0) ? 1 : 0,\n\t\tio: {\n\t\t\tin: ['left', 'right'],\n\t\t\tout: 'bottom',\n\t\t},\n\t\tweight: 3,\n\t},\n};\n\n\n\n// WEBPACK FOOTER //\n// lib/block-configs.js","const React = require('react');\nconst PropTypes = require('prop-types');\nconst {trimAfter} = require('./util');\n\nclass IOComponent extends React.Component {\n\tstatic propTypes = {\n\t\tx: PropTypes.number.isRequired,\n\t\ty: PropTypes.number.isRequired,\n\t\tvalue: PropTypes.oneOfType([\n\t\t\tPropTypes.arrayOf(PropTypes.number),\n\t\t\tPropTypes.number,\n\t\t]),\n\t\tcorrectness: PropTypes.bool,\n\t\tcolor: PropTypes.string.isRequired,\n\t\tfilled: PropTypes.bool.isRequired,\n\t\tnullable: PropTypes.bool.isRequired,\n\t}\n\n\tstatic defaultProps = {\n\t\tvalue: null,\n\t\tcorrectness: null,\n\t\tfilled: false,\n\t\tnullable: false,\n\t}\n\n\tgetDisplayValue = () => {\n\t\tif (Array.isArray(this.props.value)) {\n\t\t\tif (this.props.value.length === 1 && this.props.value[0] === null) {\n\t\t\t\treturn '???';\n\t\t\t}\n\n\t\t\treturn trimAfter(this.props.value.map((value) => {\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn '?';\n\t\t\t\t}\n\n\t\t\t\treturn value.toString();\n\t\t\t}).join(','), 10);\n\t\t}\n\n\t\tif (this.props.nullable && this.props.value === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.props.value === null) {\n\t\t\treturn '???';\n\t\t}\n\n\t\treturn this.props.value.toString();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<g transform={`translate(${this.props.x}, ${this.props.y})`}>\n\t\t\t\t<rect\n\t\t\t\t\twidth=\"150\"\n\t\t\t\t\theight=\"50\"\n\t\t\t\t\trx=\"8\"\n\t\t\t\t\tfill={this.props.filled ? this.props.color : 'white'}\n\t\t\t\t\tstroke={this.props.color}\n\t\t\t\t\tstrokeWidth=\"3\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransition: 'fill 0.3s ease, stroke 0.3s ease',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{this.props.correctness === true && (\n\t\t\t\t\t<g transform=\"translate(75, 25)\" className=\"correctness\">\n\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\tcx=\"0\"\n\t\t\t\t\t\t\tcy=\"0\"\n\t\t\t\t\t\t\tr=\"35\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"red\"\n\t\t\t\t\t\t\tstrokeWidth=\"14\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t)}\n\t\t\t\t{this.props.correctness === false && (\n\t\t\t\t\t<g transform=\"translate(75, 25)\" className=\"correctness\">\n\t\t\t\t\t\t<line\n\t\t\t\t\t\t\tx1=\"-30\"\n\t\t\t\t\t\t\ty1=\"-30\"\n\t\t\t\t\t\t\tx2=\"30\"\n\t\t\t\t\t\t\ty2=\"30\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"blue\"\n\t\t\t\t\t\t\tstrokeWidth=\"14\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<line\n\t\t\t\t\t\t\tx1=\"30\"\n\t\t\t\t\t\t\ty1=\"-30\"\n\t\t\t\t\t\t\tx2=\"-30\"\n\t\t\t\t\t\t\ty2=\"30\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"blue\"\n\t\t\t\t\t\t\tstrokeWidth=\"14\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t)}\n\t\t\t\t{this.getDisplayValue() !== null && (\n\t\t\t\t\t<text\n\t\t\t\t\t\tx=\"75\"\n\t\t\t\t\t\ty=\"25\"\n\t\t\t\t\t\tfontSize=\"30\"\n\t\t\t\t\t\tfontFamily=\"'Exo 2'\"\n\t\t\t\t\t\tfontWeight=\"900\"\n\t\t\t\t\t\tfill={this.props.filled ? 'white' : '#333'}\n\t\t\t\t\t\ttextAnchor=\"middle\"\n\t\t\t\t\t\tdominantBaseline=\"central\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextShadow: this.props.filled ? '' : '0 0 15px white',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.getDisplayValue()}\n\t\t\t\t\t</text>\n\t\t\t\t)}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nmodule.exports = IOComponent;\n\n\n\n// WEBPACK FOOTER //\n// lib/io-component.jsx","module.exports = {\n\tname: 'calc03',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-2': null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [1, 3, null],\n\toutput: [6, 18, null],\n\tioGenerator: (random) => {\n\t\tconst input = 5 + Math.floor(random() * 10);\n\t\tconst output = input * 6;\n\n\t\treturn {\n\t\t\tinput: [1, 3, input],\n\t\t\toutput: [6, 18, output],\n\t\t};\n\t},\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '数を6倍してみよう!',\n\ttitle: '四則演算 -基本- 3',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/calc03.js","module.exports = {\n\tname: 'conditional01',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t},\n\tinputX: 4,\n\toutputX: 4,\n\tinput: [5, -10, null, null],\n\toutput: [15, -20, null, null],\n\tioGenerator: (random) => {\n\t\tconst input1 = Math.floor(random() * 200);\n\t\tconst output1 = input1 % 2 === 0 ? 2 * input1 : 3 * input1;\n\n\t\tconst input2 = Math.floor(random() * 200);\n\t\tconst output2 = input2 % 2 === 0 ? 2 * input2 : 3 * input2;\n\n\t\treturn {\n\t\t\tinput: [5, -10, input1, input2],\n\t\t\toutput: [15, -20, output1, output2],\n\t\t};\n\t},\n\twidth: 9,\n\theight: 7,\n\tclockLimit: 100,\n\tstatement: '偶数なら2倍,奇数なら3倍してみよう!',\n\ttitle: '条件分岐 -基本- 1',\n\tmodal: 'conditionals',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/conditional01.js","module.exports = {\n\tname: 'conditional02',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t},\n\tinputX: 5,\n\toutputX: 5,\n\tinput: [5, 6, null, null],\n\toutput: [10, 18, null, null],\n\tioGenerator: (random) => {\n\t\tconst candidates = Array.from({length: 200}, (item, index) => index + 1)\n\t\t\t.filter((val) => val !== 5 && val !== 6);\n\n\t\tconst input1 = candidates[Math.floor(random() * candidates.length)];\n\t\tconst input2 = candidates[Math.floor(random() * candidates.length)];\n\n\t\treturn {\n\t\t\tinput: [5, 6, input1, input2],\n\t\t\toutput: [10, 18, input1, input2],\n\t\t};\n\t},\n\twidth: 11,\n\theight: 11,\n\tclockLimit: 100,\n\tstatement: '5は2倍、6は3倍、それ以外は1倍をしてみよう!',\n\ttitle: '条件分岐 -基本- 2',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/conditional02.js","module.exports = {\n\tname: 'conditional03',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 4,\n\toutputX: 4,\n\tinput: [5, 3, null, null, null],\n\toutput: [0, 5, null, null, null],\n\tioGenerator: (random) => {\n\t\tconst candidates = [0, 1, 2, 4, 6];\n\t\tconst inputs = [];\n\n\t\t// Shuffle array and take heading 3\n\t\tconst index1 = Math.floor(random() * 5);\n\t\tinputs.push(candidates[index1]);\n\t\tcandidates[index1] = candidates[0];\n\n\t\tconst index2 = Math.floor(random() * 4) + 1;\n\t\tinputs.push(candidates[index2]);\n\t\tcandidates[index2] = candidates[1];\n\n\t\tconst index3 = Math.floor(random() * 3) + 2;\n\t\tinputs.push(candidates[index3]);\n\n\t\tinputs.sort((a, b) => a - b);\n\n\t\tconst outputs = inputs.map((input) => ((input + 2) % 7));\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\t5,\n\t\t\t\t3,\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\t0,\n\t\t\t\t5,\n\t\t\t\toutputs[0],\n\t\t\t\toutputs[1],\n\t\t\t\toutputs[2],\n\t\t\t],\n\t\t};\n\t},\n\twidth: 9,\n\theight: 9,\n\tclockLimit: 50,\n\tstatement: 'mod7で2を足してみよう(入力は[0,6]であることが保証されている）',\n\ttitle: '条件分岐 -基本- 3',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/conditional03.js","module.exports = {\n\tname: 'factorial',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 6,\n\toutputX: 6,\n\tinput: [null, null, null, 15],\n\toutput: [null, null, null, 1307674368000],\n\tioGenerator: (random) => {\n\t\tconst candidates = Array.from({length: 13}, (item, index) => index + 2); // 2..14\n\t\tconst inputs = [];\n\n\t\t// Shuffle array and take heading 3\n\t\tconst index1 = Math.floor(random() * 13);\n\t\tinputs.push(candidates[index1]);\n\t\tcandidates[index1] = candidates[0];\n\n\t\tconst index2 = Math.floor(random() * 12) + 1;\n\t\tinputs.push(candidates[index2]);\n\t\tcandidates[index2] = candidates[1];\n\n\t\tconst index3 = Math.floor(random() * 11) + 2;\n\t\tinputs.push(candidates[index3]);\n\n\t\tinputs.sort((a, b) => a - b);\n\n\t\tconst factorial = (n) => (n === 1) ? 1 : n * factorial(n - 1);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t\t15,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tfactorial(inputs[0]),\n\t\t\t\tfactorial(inputs[1]),\n\t\t\t\tfactorial(inputs[2]),\n\t\t\t\tfactorial(15),\n\t\t\t],\n\t\t};\n\t},\n\twidth: 13,\n\theight: 13,\n\tclockLimit: 500,\n\tstatement: '階乗を計算してみよう!',\n\ttitle: '階乗',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/factorial.js","module.exports = {\n\tname: 'parity',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 9,\n\toutputX: 9,\n\tinput: [null, null, null],\n\toutput: [null, null, null],\n\tioGenerator: (random) => {\n\t\tconst sumOfDigits = (n) => (\n\t\t\tn.toString().split('').map((d) => parseInt(d)).reduce((a, b) => a + b)\n\t\t);\n\n\t\tconst parity = (n) => sumOfDigits(n) % 10;\n\n\t\tconst inputs = [];\n\n\t\t// Sum of digits is less than 10\n\t\tinputs.push((() => {\n\t\t\tlet n = null;\n\n\t\t\tdo {\n\t\t\t\tn = 1000 + Math.floor(9000 * random());\n\t\t\t} while (!(sumOfDigits(n) < 10));\n\n\t\t\treturn n;\n\t\t})());\n\n\t\t// Sum of digits is less than 20\n\t\tinputs.push((() => {\n\t\t\tlet n = null;\n\n\t\t\tdo {\n\t\t\t\tn = 1000 + Math.floor(9000 * random());\n\t\t\t} while (!(10 <= sumOfDigits(n) && sumOfDigits(n) < 20));\n\n\t\t\treturn n;\n\t\t})());\n\n\t\t// Sum of digits is equal or greater than 20\n\t\tinputs.push((() => {\n\t\t\tlet n = null;\n\n\t\t\tdo {\n\t\t\t\tn = 1000 + Math.floor(9000 * random());\n\t\t\t} while (!(20 <= sumOfDigits(n)));\n\n\t\t\treturn n;\n\t\t})());\n\n\t\treturn {\n\t\t\tinput: inputs,\n\t\t\toutput: inputs.map(parity),\n\t\t};\n\t},\n\twidth: 19,\n\theight: 19,\n\tclockLimit: 500,\n\tstatement: '与えられた四桁の数の各桁の和をmod 10したものを計算してみよう!',\n\ttitle: 'パリティ',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/parity.js","module.exports = {\n\tname: 'fibonacci',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 5,\n\toutputX: 5,\n\tinput: [null, null, null, 20],\n\toutput: [null, null, null, 6765],\n\tioGenerator: (random) => {\n\t\tconst fibonacci = [1, 1];\n\n\t\tfor (let i = 2; i < 20; i++) {\n\t\t\tfibonacci.push(fibonacci[fibonacci.length - 1] + fibonacci[fibonacci.length - 2]);\n\t\t}\n\n\t\tconst candidates = Array.from({length: 18}, (item, index) => index + 2); // 2..19\n\t\tconst inputs = [];\n\n\t\t// Shuffle array and take heading 3\n\t\tconst index1 = Math.floor(random() * 18);\n\t\tinputs.push(candidates[index1]);\n\t\tcandidates[index1] = candidates[0];\n\n\t\tconst index2 = Math.floor(random() * 17) + 1;\n\t\tinputs.push(candidates[index2]);\n\t\tcandidates[index2] = candidates[1];\n\n\t\tconst index3 = Math.floor(random() * 16) + 2;\n\t\tinputs.push(candidates[index3]);\n\n\t\tinputs.sort((a, b) => a - b);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t\t20,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tfibonacci[inputs[0] - 1],\n\t\t\t\tfibonacci[inputs[1] - 1],\n\t\t\t\tfibonacci[inputs[2] - 1],\n\t\t\t\tfibonacci[19],\n\t\t\t],\n\t\t};\n\t},\n\twidth: 11,\n\theight: 11,\n\tclockLimit: 500,\n\tstatement: 'n番目のフィボナッチ数を計算してみよう!',\n\ttitle: 'フィボナッチ数',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/fibonacci.js","module.exports = {\n\tname: 'power-hard',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [6, 8],\n\toutputX: 7,\n\tinput: [[null, null], [null, null], [2, 35]],\n\toutput: [null, null, 34359738368],\n\tioGenerator: (random) => {\n\t\t// 5..20 or -5..-20\n\t\tconst input1Base = (5 + Math.floor(random() * 16)) * ((random() < 0.5) ? 1 : -1);\n\n\t\t// 2..5\n\t\tconst input1Exponent = 2 + Math.floor(random() * 4);\n\n\t\t// 2..4 or -2..-4\n\t\tconst input2Base = (2 + Math.floor(random() * 3)) * ((random() < 0.5) ? 1 : -1);\n\n\t\t// The result of pow should not be greater than 1e10\n\t\tconst input2MaxExponent = Math.floor(Math.log(1e10) / Math.log(Math.abs(input2Base)));\n\n\t\tconst input2Exponent = 10 + Math.floor(random() * (input2MaxExponent - 10 + 1));\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\t[input1Base, input1Exponent],\n\t\t\t\t[input2Base, input2Exponent],\n\t\t\t\t[2, 35],\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tMath.pow(input1Base, input1Exponent),\n\t\t\t\tMath.pow(input2Base, input2Exponent),\n\t\t\t\tMath.pow(2, 35),\n\t\t\t],\n\t\t};\n\t},\n\twidth: 15,\n\theight: 15,\n\tclockLimit: 300,\n\tstatement: '1つ目に与えられた数を2つ目に与えられた数乗してみよう!(ただし、愚直に計算すると時間がかかるので、より早く計算できるように工夫してみよう)',\n\ttitle: '累乗 -hard-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/power-hard.js","module.exports = {\n\tname: 'gcd',\n\tversion: 5,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [5, 7],\n\toutputX: 6,\n\tinput: [[null, null], [null, null], [null, null], [56, 1275]],\n\toutput: [null, null, null, 1],\n\tioGenerator: (random) => \t{\n\t\t// Durstenfeld shuffle\n\t\tconst shuffleArray = (array) => {\n\t\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\t\tconst j = Math.floor(random() * (i + 1));\n\t\t\t\tconst temp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = temp;\n\t\t\t}\n\t\t};\n\n\t\tconst gcd = ([a, b]) => {\n\t\t\tif (b === 0) {\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\treturn gcd([b, a % b]);\n\t\t};\n\n\t\tconst inputs = [];\n\n\t\tconst factors1 = [2, 2, 3, 3, 3, 3, 3, 3, 5, 5, 5, 7, 7, 11, 13, 17];\n\n\t\tshuffleArray(factors1);\n\t\tconst valueA1 = factors1.slice(0, 3).reduce((a, b) => a * b) * 2;\n\t\tconst valueB1 = factors1.slice(3, 6).reduce((a, b) => a * b) * 2;\n\n\t\tinputs.push([valueA1, valueB1]);\n\n\t\tconst factors2 = [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 5, 7, 7, 11, 13, 17];\n\n\t\tshuffleArray(factors2);\n\t\tconst valueA2 = factors2.slice(0, 4).reduce((a, b) => a * b) * 5;\n\t\tconst valueB2 = factors2.slice(4, 8).reduce((a, b) => a * b) * 5;\n\n\t\tinputs.push([valueA2, valueB2]);\n\n\t\tconst factors3 = [1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 5, 11, 11, 13, 13, 17];\n\n\t\tshuffleArray(factors3);\n\t\tconst valueA3 = factors3.slice(0, 3).reduce((a, b) => a * b) * 7;\n\t\tconst valueB3 = factors3.slice(3, 6).reduce((a, b) => a * b) * 7;\n\n\t\tinputs.push([valueA3, valueB3]);\n\n\t\tinputs.sort((a, b) => gcd(b) - gcd(a));\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t\t[56, 1275],\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tgcd(inputs[0]),\n\t\t\t\tgcd(inputs[1]),\n\t\t\t\tgcd(inputs[2]),\n\t\t\t\tgcd([56, 1275]),\n\t\t\t],\n\t\t};\n\t},\n\twidth: 13,\n\theight: 13,\n\tclockLimit: 500,\n\tstatement: '二数の最大公約数を計算してみよう!',\n\ttitle: '最大公約数',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/gcd.js","module.exports = {\n\tname: 'lcm',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [4, 6],\n\toutputX: 5,\n\tinput: [[null, null], [null, null], [null, null], [450, 756]],\n\toutput: [null, null, null, 18900],\n\tioGenerator: (random) => \t{\n\t\t// Durstenfeld shuffle\n\t\tconst shuffleArray = (array) => {\n\t\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\t\tconst j = Math.floor(random() * (i + 1));\n\t\t\t\tconst temp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = temp;\n\t\t\t}\n\t\t};\n\n\t\tconst gcd = ([a, b]) => {\n\t\t\tif (b === 0) {\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\treturn gcd([b, a % b]);\n\t\t};\n\n\t\tconst lcm = ([a, b]) => a * b / gcd([a, b]);\n\n\t\tconst inputs = Array.from({length: 3}, () => {\n\t\t\tconst factors = [2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 5, 5, 7, 7, 11, 13];\n\n\t\t\tshuffleArray(factors);\n\t\t\tconst valueA = factors.slice(0, 3).reduce((a, b) => a * b);\n\t\t\tconst valueB = factors.slice(3, 7).reduce((a, b) => a * b);\n\n\t\t\treturn [valueA, valueB];\n\t\t});\n\n\t\tinputs.sort((a, b) => lcm(a) - lcm(b));\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t\t[450, 756],\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tlcm(inputs[0]),\n\t\t\t\tlcm(inputs[1]),\n\t\t\t\tlcm(inputs[2]),\n\t\t\t\tlcm([450, 756]),\n\t\t\t],\n\t\t};\n\t},\n\twidth: 11,\n\theight: 11,\n\tclockLimit: 500,\n\tstatement: '最小公倍数を計算してみよう',\n\ttitle: '最小公倍数',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/lcm.js","module.exports = {\n\tname: 'sqrt-easy',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 4,\n\toutputX: 4,\n\tinput: [null, null, null, 225],\n\toutput: [null, null, null, 15],\n\tioGenerator: (random) => {\n\t\tconst candidates = Array.from({length: 13}, (item, index) => index + 2); // 2..14\n\t\tconst outputs = [];\n\n\t\t// Shuffle array and take heading 3\n\t\tconst index1 = Math.floor(random() * 13);\n\t\toutputs.push(candidates[index1]);\n\t\tcandidates[index1] = candidates[0];\n\n\t\tconst index2 = Math.floor(random() * 12) + 1;\n\t\toutputs.push(candidates[index2]);\n\t\tcandidates[index2] = candidates[1];\n\n\t\tconst index3 = Math.floor(random() * 11) + 2;\n\t\toutputs.push(candidates[index3]);\n\n\t\toutputs.sort((a, b) => a - b);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\toutputs[0] * outputs[0],\n\t\t\t\toutputs[1] * outputs[1],\n\t\t\t\toutputs[2] * outputs[2],\n\t\t\t\t15 * 15,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\toutputs[0],\n\t\t\t\toutputs[1],\n\t\t\t\toutputs[2],\n\t\t\t\t15,\n\t\t\t],\n\t\t};\n\t},\n\twidth: 9,\n\theight: 9,\n\tclockLimit: 300,\n\tstatement: '平方根を計算してみよう!',\n\ttitle: '平方根 -easy-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/sqrt-easy.js","module.exports = {\n\tname: 'sqrt-hard',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 7,\n\toutputX: 7,\n\tinput: [9, null, null, 26040609],\n\toutput: [3, null, null, 5103],\n\tioGenerator: (random) => {\n\t\tconst out1 = 3;\n\t\tconst out2 = 10 + Math.floor(random() * 90);\n\t\tconst out3 = 1000 + Math.floor(random() * 4000);\n\t\tconst out4 = 5103;\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tout1 * out1,\n\t\t\t\tout2 * out2,\n\t\t\t\tout3 * out3,\n\t\t\t\tout4 * out4,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tout1,\n\t\t\t\tout2,\n\t\t\t\tout3,\n\t\t\t\tout4,\n\t\t\t],\n\t\t};\n\t},\n\twidth: 15,\n\theight: 15,\n\tclockLimit: 1000,\n\tstatement: '平方根を計算してみよう! (ただし、愚直に計算すると計算に長い時間かかるので、より速く計算できるように工夫してみよう)',\n\ttitle: '平方根 -hard-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/sqrt-hard.js","module.exports = {\n\tname: 'msd',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 7,\n\toutputX: 7,\n\tinput: [null, null, 0, 123456789],\n\toutput: [null, null, 0, 1],\n\tioGenerator: (random) => {\n\t\tconst input1msd = 1 + Math.floor(random() * 9);\n\t\tconst input1str = [input1msd].concat(Array.from({\n\t\t\tlength: 1 + Math.floor(random() * 3),\n\t\t}, () => Math.floor(random() * 10))).join('');\n\t\tconst input1 = parseInt(input1str);\n\n\t\tconst input2msd = 1 + Math.floor(random() * 9);\n\t\tconst input2str = [input2msd].concat(Array.from({\n\t\t\tlength: 3 + Math.floor(random() * 5),\n\t\t}, () => Math.floor(random() * 10))).join('');\n\t\tconst input2 = parseInt(input2str);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinput1,\n\t\t\t\tinput2,\n\t\t\t\t0,\n\t\t\t\t123456789,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tinput1msd,\n\t\t\t\tinput2msd,\n\t\t\t\t0,\n\t\t\t\t1,\n\t\t\t],\n\t\t};\n\t},\n\twidth: 15,\n\theight: 15,\n\tclockLimit: 500,\n\tstatement: '数の最上位の桁を取り出してみよう!',\n\ttitle: '最上位の桁',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/msd.js","module.exports = {\n\tname: 'mod3-hard',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'times-10': null,\n\t\tlog10: null,\n\t\tlog2: null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\t'const-3': null,\n\t\t'const-10': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tpow: null,\n\t\tlog: null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 9,\n\toutputX: 9,\n\tinput: [null, null, null, null, null],\n\toutput: [0, 1, 2, null, null],\n\tioGenerator: (random) => {\n\t\tconst input1target = 10000000 + Math.floor(random() * 80000000);\n\t\tconst input1 = input1target - input1target % 3 + 0;\n\n\t\tconst input2target = 10000000 + Math.floor(random() * 80000000);\n\t\tconst input2 = input2target - input2target % 3 + 1;\n\n\t\tconst input3target = 10000000 + Math.floor(random() * 80000000);\n\t\tconst input3 = input3target - input3target % 3 + 2;\n\n\t\tconst input4 = 10000000 + Math.floor(random() * 80000000);\n\n\t\tconst input5 = 99990000 + Math.floor(random() * 10000);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinput1,\n\t\t\t\tinput2,\n\t\t\t\tinput3,\n\t\t\t\tinput4,\n\t\t\t\tinput5,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tinput1 % 3,\n\t\t\t\tinput2 % 3,\n\t\t\t\tinput3 % 3,\n\t\t\t\tinput4 % 3,\n\t\t\t\tinput5 % 3,\n\t\t\t],\n\t\t};\n\t},\n\twidth: 19,\n\theight: 19,\n\tclockLimit: 1000,\n\tstatement: '3で割った余りを求めてみよう!',\n\ttitle: 'mod3 -hard-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/mod3-hard.js","module.exports = {\n\tname: 'the-fifth-max',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'times-10': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'div-10': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tlog10: null,\n\t\tlog2: null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\t'const-3': null,\n\t\t'const-10': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\tlog: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [\n\t\t14,\n\t\t16,\n\t],\n\toutputX: 15,\n\tinput: [\n\t\t[\n\t\t\t5,\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t2,\n\t\t\t\t3,\n\t\t\t\t4,\n\t\t\t\t5,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t5,\n\t\t\t[\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t7,\n\t\t\t[\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t7,\n\t\t\t[\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t7,\n\t\t\t[\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t],\n\t\t],\n\t],\n\toutput: [\n\t\t3,\n\t\tnull,\n\t\tnull,\n\t\tnull,\n\t\tnull,\n\t],\n\tioGenerator: (random) => {\n\t\tconst getMedian = (input) => input.slice(0).sort((a, b) => a - b)[(input.length - 1) / 2];\n\n\t\tconst isMedianUnique = (input) => {\n\t\t\tconst median = getMedian(input);\n\t\t\treturn input.filter((x) => x === median).length === 1;\n\t\t};\n\n\t\tconst inputs = [\n\t\t\t[1, 2, 3, 4, 5],\n\t\t];\n\n\t\t// 5 numbers in -5..5\n\t\t{\n\t\t\tlet input = null;\n\n\t\t\tdo {\n\t\t\t\tinput = Array.from({length: 5}, () => -5 + Math.floor(random() * 11));\n\t\t\t} while (!isMedianUnique(input));\n\n\t\t\tinputs.push(input);\n\t\t}\n\n\t\t// 7 numbers in 1..100\n\t\t{\n\t\t\tlet input = null;\n\n\t\t\tdo {\n\t\t\t\tinput = Array.from({length: 7}, () => 1 + Math.floor(random() * 100));\n\t\t\t} while (!isMedianUnique(input));\n\n\t\t\tinputs.push(input);\n\t\t}\n\n\t\t// 7 numbers in 0..49\n\t\t{\n\t\t\tlet input = null;\n\n\t\t\tdo {\n\t\t\t\tinput = Array.from({length: 7}, () => Math.floor(random() * 50));\n\t\t\t} while (!isMedianUnique(input));\n\n\t\t\tinputs.push(input);\n\t\t}\n\n\t\t// 7 numbers in 50..99, the median is at last\n\t\t{\n\t\t\tlet input = null;\n\n\t\t\tdo {\n\t\t\t\tinput = Array.from({length: 7}, () => 50 + Math.floor(random() * 50));\n\t\t\t} while (!isMedianUnique(input));\n\n\t\t\t// Swap the median and the last\n\t\t\tconst median = getMedian(input);\n\t\t\tinput[input.indexOf(median)] = input[6];\n\t\t\tinput[6] = median;\n\n\t\t\tinputs.push(input);\n\t\t}\n\n\t\treturn {\n\t\t\tinput: inputs.map((input) => [input.length, input]),\n\t\t\toutput: inputs.map((input) => getMedian(input)),\n\t\t};\n\t},\n\twidth: 31,\n\theight: 31,\n\tclockLimit: 2000,\n\tstatement: '与えられた配列の中央値を求めてみよう。ただし、配列の大きさは奇数であり、また中央値はただ一つであることが保証されている。',\n\ttitle: '中央値',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/the-fifth-max.js","module.exports = {\n\tname: 'repeat-self',\n\tversion: 2,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\t'times-2': null,\n\t\t'times-10': null,\n\t\t'div-2': null,\n\t\t'plus-1': null,\n\t\t'minus-1': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\t'const-10': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tpow: null,\n\t\tequal: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 4,\n\toutputX: 4,\n\tinput: [1, null, null, 9],\n\toutput: [1, null, null, 999999999],\n\tioGenerator: (random) => {\n\t\tconst candidates = Array.from({length: 7}, (item, index) => index + 2); // 2..8\n\t\tconst inputs = [];\n\n\t\t// Shuffle array and take heading 3\n\t\tconst index1 = Math.floor(random() * 7);\n\t\tinputs.push(candidates[index1]);\n\t\tcandidates[index1] = candidates[0];\n\n\t\tconst index2 = Math.floor(random() * 6) + 1;\n\t\tinputs.push(candidates[index2]);\n\n\t\tinputs.sort((a, b) => a - b);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\t1,\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\t9,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\t1,\n\t\t\t\tparseInt(inputs[0].toString().repeat(inputs[0])),\n\t\t\t\tparseInt(inputs[1].toString().repeat(inputs[1])),\n\t\t\t\t999999999,\n\t\t\t],\n\t\t};\n\t},\n\twidth: 9,\n\theight: 9,\n\tclockLimit: 300,\n\tstatement: '一桁の数を自分自身の回数だけリピートしよう！',\n\ttitle: '自己反復',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/repeat-self.js","module.exports = {\n\tname: 'fibonacci-hard',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'times-10': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'div-10': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\t'const-10': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tpow: null,\n\t\tsqrt: null,\n\t},\n\tinputX: 6,\n\toutputX: 6,\n\tinput: [null, null, null, 30],\n\toutput: [null, null, null, 832040],\n\tioGenerator: (random) => {\n\t\tconst fibonacci = [1, 1];\n\n\t\tfor (let i = 2; i < 30; i++) {\n\t\t\tfibonacci.push(fibonacci[fibonacci.length - 1] + fibonacci[fibonacci.length - 2]);\n\t\t}\n\n\t\tconst candidates = Array.from({length: 18}, (item, index) => index + 12); // 12..29\n\t\tconst inputs = [];\n\n\t\t// Shuffle array and take heading 3\n\t\tconst index1 = Math.floor(random() * 18);\n\t\tinputs.push(candidates[index1]);\n\t\tcandidates[index1] = candidates[0];\n\n\t\tconst index2 = Math.floor(random() * 17) + 1;\n\t\tinputs.push(candidates[index2]);\n\t\tcandidates[index2] = candidates[1];\n\n\t\tconst index3 = Math.floor(random() * 16) + 2;\n\t\tinputs.push(candidates[index3]);\n\n\t\tinputs.sort((a, b) => a - b);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t\t30,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tfibonacci[inputs[0] - 1],\n\t\t\t\tfibonacci[inputs[1] - 1],\n\t\t\t\tfibonacci[inputs[2] - 1],\n\t\t\t\tfibonacci[29],\n\t\t\t],\n\t\t};\n\t},\n\twidth: 13,\n\theight: 13,\n\tclockLimit: 50,\n\tstatement: 'n番目のフィボナッチ数を計算してみよう!',\n\ttitle: 'フィボナッチ数 -hard-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/fibonacci-hard.js","module.exports = {\n\tname: 'factorization',\n\tversion: 2,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'times-10': null,\n\t\t'plus-1': null,\n\t\t'minus-1': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\tlog: null,\n\t\tsqrt: null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 5,\n\toutputX: 5,\n\tinput: [null, null, null, 211, 221],\n\toutput: [null, null, null, 0, 13],\n\tioGenerator: (random) => {\n\t\tconst numbers = [0, 0, 0];\n\t\tconst primes = [2];\n\t\tfor (let i = 3; i < 256; i++) {\n\t\t\tlet flag = null;\n\t\t\tfor (const prime of primes) {\n\t\t\t\tif (i % prime === 0) {\n\t\t\t\t\tflag = prime;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag === null) {\n\t\t\t\tnumbers.push(0);\n\t\t\t\tprimes.push(i);\n\t\t\t} else {\n\t\t\t\tnumbers.push(flag);\n\t\t\t}\n\t\t}\n\n\t\tconst candidates = Array.from({length: 199}, (item, index) => index + 2); // 2..200\n\t\tconst inputs = [];\n\n\t\tconst index1 = Math.floor(random() * 30);\n\t\tinputs.push(candidates[index1]);\n\t\tcandidates[index1] = candidates[0];\n\n\t\tconst index2 = Math.floor(random() * 119) + 1;\n\t\tinputs.push(candidates[index2]);\n\t\tcandidates[index2] = candidates[1];\n\n\t\tconst index3 = Math.floor(random() * 118) + 2;\n\t\tinputs.push(candidates[index3]);\n\n\t\tinputs.sort((a, b) => a - b);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t\t211,\n\t\t\t\t221,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tnumbers[inputs[0]],\n\t\t\t\tnumbers[inputs[1]],\n\t\t\t\tnumbers[inputs[2]],\n\t\t\t\t0,\n\t\t\t\t13,\n\t\t\t],\n\t\t};\n\t},\n\twidth: 11,\n\theight: 11,\n\tclockLimit: 150,\n\tstatement: '与えられた数が素数なら0を、素数でないなら最も小さい1でない約数を探してみよう!',\n\ttitle: '因数分解',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/factorization.js","module.exports = {\n\tname: 'spaceship',\n\tversion: 2,\n\ttitle: '宇宙船',\n\tstatement: '右の数より左の数が大きいなら1を、左の数より右の数が大きいなら-1を、同じなら0を出力しよう！',\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\t'const-3': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tpow: null,\n\t\tlog: null,\n\t\tsqrt: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\twidth: 7,\n\theight: 7,\n\tinputX: [2, 4],\n\toutputX: 3,\n\tclockLimit: 100,\n\tinput: [[null, null], [null, null], [null, null], [null, null], [null, null]],\n\toutput: [0, -1, 1, null, null],\n\tioGenerator: (random) => {\n\t\tconst candidates = Array.from({length: 99}, (item, index) => index + 1); // 1..100\n\n\t\tconst swap = (index1, index2) => {\n\t\t\tconst temp = candidates[index1];\n\t\t\tcandidates[index1] = candidates[index2];\n\t\t\tcandidates[index2] = temp;\n\t\t};\n\n\t\tconst input1 = candidates[Math.floor(random() * 99)];\n\n\t\tconst input2index1 = Math.floor(random() * 99);\n\t\tswap(0, input2index1);\n\t\tconst input2index2 = Math.floor(random() * 98) + 1;\n\n\t\tconst input2 = [candidates[0], candidates[input2index2]].sort((a, b) => a - b);\n\n\t\tconst input3index1 = Math.floor(random() * 99);\n\t\tswap(0, input3index1);\n\t\tconst input3index2 = Math.floor(random() * 98) + 1;\n\n\t\tconst input3 = [candidates[0], candidates[input3index2]].sort((a, b) => b - a);\n\n\t\tconst input4negative = -Math.floor(random() * 99) + 1;\n\t\tconst input4positive = Math.floor(random() * 99) + 1;\n\n\t\tconst input4 = random() < 0.5 ? [input4negative, input4positive] : [input4positive, input4negative];\n\n\t\tconst input5index1 = Math.floor(random() * 99);\n\t\tswap(0, input5index1);\n\t\tconst input5index2 = Math.floor(random() * 98) + 1;\n\n\t\tconst input5 = [-candidates[0], -candidates[input5index2]];\n\n\t\tconst spaceship = (a, b) => Math.sign(a - b);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\t[input1, input1],\n\t\t\t\tinput2,\n\t\t\t\tinput3,\n\t\t\t\tinput4,\n\t\t\t\tinput5,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tspaceship(input1, input1),\n\t\t\t\tspaceship(...input2),\n\t\t\t\tspaceship(...input3),\n\t\t\t\tspaceship(...input4),\n\t\t\t\tspaceship(...input5),\n\t\t\t],\n\t\t};\n\t},\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/spaceship.js","module.exports = {\n\tname: '10000th-digit',\n\tversion: 2,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'times-10': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'div-10': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\t'const-3': null,\n\t\t'const-10': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tdiode: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t},\n\tinputX: 6,\n\toutputX: 6,\n\tinput: [null, null, null, null, 107],\n\toutput: [null, null, null, null, 3],\n\tioGenerator: (random) => {\n\t\tconst iterations = (n) => (\n\t\t\t10000 % (n - 1) === 0 ? n - 1 : 10000 % (n - 1)\n\t\t);\n\n\t\tconst calc = (p) => {\n\t\t\tlet reminder = 1;\n\t\t\tfor (let i = 0; i < iterations(p) - 1; i++) {\n\t\t\t\treminder = (reminder * 10) % p;\n\t\t\t}\n\t\t\treturn Math.floor(reminder * 10 / p);\n\t\t};\n\n\t\tconst candidates = [\n\t\t\t7,\n\t\t\t11,\n\t\t\t13,\n\t\t\t17,\n\t\t\t19,\n\t\t\t23,\n\t\t\t29,\n\t\t\t31,\n\t\t\t37,\n\t\t\t41,\n\t\t\t43,\n\t\t\t47,\n\t\t\t53,\n\t\t\t59,\n\t\t\t61,\n\t\t\t67,\n\t\t\t71,\n\t\t\t73,\n\t\t\t79,\n\t\t\t83,\n\t\t\t89,\n\t\t\t97,\n\t\t\t101,\n\t\t\t103,\n\t\t\t// 107\n\t\t\t109,\n\t\t\t113,\n\t\t\t127,\n\t\t\t131,\n\t\t\t137,\n\t\t\t139,\n\t\t\t149,\n\t\t\t151,\n\t\t\t157,\n\t\t\t163,\n\t\t\t167,\n\t\t\t173,\n\t\t\t179,\n\t\t].filter((n) => iterations(n) <= 36);\n\n\t\tconst inputs = [];\n\n\t\t// Take input which takes at least 24 iterations\n\t\tconst heavyInputs = candidates.filter((n) => iterations(n) >= 24 && calc(n) !== 3);\n\t\tinputs.push(heavyInputs[Math.floor(random() * heavyInputs.length)]);\n\n\t\t// Generate outputMap\n\t\tconst outputMap = new Map();\n\t\tcandidates.forEach((n) => {\n\t\t\tif (!outputMap.has(calc(n))) {\n\t\t\t\toutputMap.set(calc(n), []);\n\t\t\t}\n\t\t\toutputMap.get(calc(n)).push(n);\n\t\t});\n\n\t\tconst outputCandidates = Array.from(outputMap.keys()).filter((n) => (\n\t\t\tn !== 3 && n !== calc(inputs[0])\n\t\t));\n\n\t\t// Take unique outputs by 3 and get corresponding inputs\n\n\t\tconst index1 = Math.floor(random() * outputCandidates.length);\n\t\tconst inputCandidates1 = outputMap.get(outputCandidates[index1]);\n\t\tinputs.push(inputCandidates1[Math.floor(random() * inputCandidates1.length)]);\n\t\toutputCandidates[index1] = outputCandidates[0];\n\n\t\tconst index2 = Math.floor(random() * (outputCandidates.length - 1)) + 1;\n\t\tconst inputCandidates2 = outputMap.get(outputCandidates[index2]);\n\t\tinputs.push(inputCandidates2[Math.floor(random() * inputCandidates2.length)]);\n\t\toutputCandidates[index2] = outputCandidates[1];\n\n\t\tconst index3 = Math.floor(random() * (outputCandidates.length - 2)) + 2;\n\t\tconst inputCandidates3 = outputMap.get(outputCandidates[index3]);\n\t\tinputs.push(inputCandidates3[Math.floor(random() * inputCandidates3.length)]);\n\n\t\tinputs.sort((a, b) => a - b);\n\n\t\treturn {\n\t\t\tinput: [\n\t\t\t\tinputs[0],\n\t\t\t\tinputs[1],\n\t\t\t\tinputs[2],\n\t\t\t\tinputs[3],\n\t\t\t\t107,\n\t\t\t],\n\t\t\toutput: [\n\t\t\t\tcalc(inputs[0]),\n\t\t\t\tcalc(inputs[1]),\n\t\t\t\tcalc(inputs[2]),\n\t\t\t\tcalc(inputs[3]),\n\t\t\t\t3,\n\t\t\t],\n\t\t};\n\t},\n\twidth: 13,\n\theight: 13,\n\tclockLimit: 1000,\n\tstatement: '7以上の素数pに対して、1/pの小数点以下10000桁目の数字を求めてみよう！',\n\ttitle: '10000桁目',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/10000th-digit.js","\n    var testsContext = require.context(\"../../test/unit\", false);\n\n    var runnable = testsContext.keys();\n\n    runnable.forEach(testsContext);\n    \n\n\n// WEBPACK FOOTER //\n// .tmp/mocha-webpack/fb899a75c53811cdcbb0f88a6a440fd6-entry.js","var map = {\n\t\"./block-component.jsx\": 39,\n\t\"./block.ls\": 43,\n\t\"./board-component.jsx\": 45,\n\t\"./board.ls\": 50,\n\t\"./data-component.jsx\": 51,\n\t\"./io-component.jsx\": 52,\n\t\"./panel-component.jsx\": 53,\n\t\"./stages.ls\": 57,\n\t\"./util.ls\": 60,\n\t\"./validator.ls\": 61\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 38;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/tsg-ut/mnemo/test/unit nonrecursive object Object\n// module id = 38\n// module chunks = 0","/* eslint-env mocha */\n/* eslint no-unused-expressions: \"off\" */\n\n// eslint-disable-next-line no-unused-vars\nconst BlockComponent = require('../../lib/block-component.jsx');\n\ndescribe('<BlockComponent/>', () => {\n\t// TODO\n});\n\n\n\n// WEBPACK FOOTER //\n// test/unit/block-component.jsx","module.exports = require(\"regenerator-runtime/runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime/runtime\"\n// module id = 40\n// module chunks = 0","module.exports = require(\"react-gsap-enhancer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-gsap-enhancer\"\n// module id = 41\n// module chunks = 0","module.exports = require(\"gsap\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"gsap\"\n// module id = 42\n// module chunks = 0","require! {\n  chai: {expect}\n  # Shims for phantomjs environment\n  'core-js'\n  '../../lib/board': Board\n  '../../lib/block': Block\n  '../../lib/data': Data\n}\n\nIt = global.it\n\ndescribe 'Block' ->\n  board = null\n\n  before-each ->\n    board := @board = new Board do\n      inputX: 0\n      outputX: 0\n      width: 1\n      height: 1\n\n  io-test = (io) ->\n    board.place-block x: 0, y: 0, type: io.type, rotate: (io.rotate or 0)\n    block = board.get-block 0, 0\n\n    for own source, value of io.in\n      data = new Data board, value\n      block.input source, data\n\n    block.step!\n\n    entries = block.output-queues.entries!\n    until (iterator = entries.next!).done\n      [destination, queue] = iterator.value\n\n      if io.out[destination] is undefined\n        expect queue .to.be.an \\array\n        expect queue .to.have.length-of 0\n      else\n        expect queue .to.be.an \\array\n        expect queue .to.have.length-of 1\n        expect queue.0 .to.be.instanceof Data\n        expect queue.0.value .to.equal io.out[destination]\n\n  describe 'WireI block' ->\n    context 'without rotation' ->\n      It 'conveys data from top to bottom' ->\n        io-test do\n          type: \\wireI\n          in: top: 334\n          out: bottom: 334\n\n      It 'conveys data from bottom to top' ->\n        io-test do\n          type: \\wireI\n          in: bottom: 334\n          out: top: 334\n\n      It 'erases any data put on the right side' ->\n        @board.place-block x: 0, y: 0, type: \\wireI, rotate: 0\n        @block = @board.get-block 0, 0\n\n        resolve, reject <~ new Promise _\n\n        data = new Data @board, 334\n        @block.input 'right', data\n\n        @block.on 'erase' (erased-data) ->\n          expect erased-data .to.equal data\n          resolve!\n\n        @block.step!\n\n    context 'with rotation' ->\n      It 'conveys data from left to right' ->\n        io-test do\n          type: \\wireI\n          rotate: 1\n          in: left: 334\n          out: right: 334\n\n  describe 'WireL block' ->\n    It 'conveys data from top to right' ->\n      io-test do\n        type: \\wireL\n        in: top: 334\n        out: right: 334\n\n    It 'conveys data from right to top' ->\n      io-test do\n        type: \\wireL\n        in: right: 334\n        out: top: 334\n\n  describe 'WireT block' ->\n    It 'conveys data from left to right and top' ->\n      io-test do\n        type: \\wireT\n        in:\n          left: 334\n        out:\n          right: 334\n          top: 334\n\n    It 'conveys data from top to right and left' ->\n      io-test do\n        type: \\wireT\n        in:\n          top: 334\n        out:\n          right: 334\n          left: 334\n\n  describe 'WireX block' ->\n    It 'conveys data from top to bottom' ->\n      io-test do\n        type: \\wireX\n        in: top: 334\n        out: bottom: 334\n\n    It 'conveys data from left to right' ->\n      io-test do\n        type: \\wireX\n        in: left: 334\n        out: right: 334\n\n  describe 'WireXdot block' ->\n    It 'conveys data from top to left, right, and bottom' ->\n      io-test do\n        type: \\wireXdot\n        in:\n          top: 334\n        out:\n          right: 334\n          left: 334\n          bottom: 334\n\n    It 'conveys data from left to top, right, and bottom' ->\n      io-test do\n        type: \\wireXdot\n        in:\n          left: 334\n        out:\n          right: 334\n          top: 334\n          bottom: 334\n\n    It 'conveys data from bottom to top, right, and left' ->\n      io-test do\n        type: \\wireXdot\n        in:\n          bottom: 334\n        out:\n          right: 334\n          top: 334\n          left: 334\n\n  describe 'JunctionR block' ->\n    context 'without rotation' ->\n      It 'conveys data from top to right' ->\n        io-test do\n          type: \\junctionR\n          in:\n            top: 334\n          out:\n            right: 334\n\n      It 'conveys data from left to right' ->\n        io-test do\n          type: \\junctionR\n          in:\n            left: 334\n          out:\n            right: 334\n\n      It 'conveys data from right to top and left' ->\n        io-test do\n          type: \\junctionR\n          in:\n            right: 334\n          out:\n            top: 334\n            left: 334\n\n      It 'erases any data put on the bottom' ->\n        @board.place-block x: 0, y: 0, type: \\junctionR, rotate: 0\n        @block = @board.get-block 0, 0\n\n        resolve, reject <~ new Promise _\n\n        data = new Data @board, 334\n        @block.input 'bottom', data\n\n        @block.on 'erase' (erased-data) ->\n          expect erased-data .to.equal data\n          resolve!\n\n        @block.step!\n\n    context 'with 90deg rotated' ->\n      It 'conveys data from bottom to top and right' ->\n        io-test do\n          type: \\junctionR\n          rotate: 1\n          in:\n            bottom: 334\n          out:\n            top: 334\n            right: 334\n\n  describe 'JunctionL block' ->\n    It 'conveys data from top to left' ->\n      io-test do\n        type: \\junctionL\n        in:\n          top: 334\n        out:\n          left: 334\n\n    It 'conveys data from right to left' ->\n      io-test do\n        type: \\junctionL\n        in:\n          right: 334\n        out:\n          left: 334\n\n    It 'conveys data from left to top and right' ->\n      io-test do\n        type: \\junctionL\n        in:\n          left: 334\n        out:\n          top: 334\n          right: 334\n\n  describe 'JunctionT block' ->\n    It 'conveys data from top to left and right' ->\n      io-test do\n        type: \\junctionT\n        in:\n          top: 334\n        out:\n          left: 334\n          right: 334\n\n    It 'conveys data from right to top' ->\n      io-test do\n        type: \\junctionT\n        in:\n          right: 334\n        out:\n          top: 334\n\n    It 'conveys data from left to top' ->\n      io-test do\n        type: \\junctionT\n        in:\n          left: 334\n        out:\n          top: 334\n\n  describe 'times-2 block' ->\n    It 'converts data by multiplying 2' ->\n      io-test do\n        type: \\times-2\n        in: top: 334\n        out: bottom: 668\n\n  describe 'times-3 block' ->\n    It 'converts data by multiplying 3' ->\n      io-test do\n        type: \\times-3\n        in: top: 334\n        out: bottom: 1002\n\n  describe 'times-10 block' ->\n    It 'converts data by multiplying 10' ->\n      io-test do\n        type: \\times-10\n        in: top: 334\n        out: bottom: 3340\n\n  describe 'plus-1 block' ->\n    It 'converts data by adding 1' ->\n      io-test do\n        type: \\plus-1\n        in: top: 334\n        out: bottom: 335\n\n  describe 'plus-2 block' ->\n    It 'converts data by adding 2' ->\n      io-test do\n        type: \\plus-2\n        in: top: 334\n        out: bottom: 336\n\n  describe 'div-2 block' ->\n    It 'converts data by dividing by 2' ->\n      io-test do\n        type: \\div-2\n        in: top: 334\n        out: bottom: 167\n\n    It 'omits remainder of the division' ->\n      io-test do\n        type: \\div-2\n        in: top: 17\n        out: bottom: 8\n\n    It 'rounds remainder into zero' ->\n      io-test do\n        type: \\div-2\n        in: top: -17\n        out: bottom: -8\n\n  describe 'div-3 block' ->\n    It 'converts data by dividing by 3' ->\n      io-test do\n        type: \\div-3\n        in: top: 33\n        out: bottom: 11\n\n    It 'omits remainder of the division' ->\n      io-test do\n        type: \\div-3\n        in: top: 17\n        out: bottom: 5\n\n    It 'rounds remainder into zero' ->\n      io-test do\n        type: \\div-3\n        in: top: -17\n        out: bottom: -5\n\n  describe 'div-10 block' ->\n    It 'converts data by dividing by 10' ->\n      io-test do\n        type: \\div-10\n        in: top: 330\n        out: bottom: 33\n\n    It 'omits remainder of the division' ->\n      io-test do\n        type: \\div-10\n        in: top: 334\n        out: bottom: 33\n\n    It 'rounds remainder into zero' ->\n      io-test do\n        type: \\div-10\n        in: top: -334\n        out: bottom: -33\n\n  describe 'minus-1 block' ->\n    It 'converts data by subtracting 1' ->\n      io-test do\n        type: \\minus-1\n        in: top: 334\n        out: bottom: 333\n\n  describe 'minus-2 block' ->\n    It 'converts data by subtracting 2' ->\n      io-test do\n        type: \\minus-2\n        in: top: 334\n        out: bottom: 332\n\n  describe 'log10 block' ->\n    It 'converts data into the logarithm of it with base 10' ->\n      io-test do\n        type: \\log10\n        in: top: 100\n        out: bottom: 2\n\n    It 'truncates decimal places' ->\n      io-test do\n        type: \\log10\n        in: top: 334\n        out: bottom: 2\n\n    It 'calculates log_10 1000 correctly' ->\n      io-test do\n        type: \\log10\n        in: top: 1000\n        out: bottom: 3\n\n    It 'calculates log_10 1e15 correctly' ->\n      io-test do\n        type: \\log10\n        in: top: 1e15\n        out: bottom: 15\n\n    It 'calculates log_10 (1e15 - 1) correctly' ->\n      io-test do\n        type: \\log10\n        in: top: 1e15 - 1\n        out: bottom: 14\n\n    It 'ignores sign of input data' ->\n      io-test do\n        type: \\log10\n        in: top: -334\n        out: bottom: 2\n\n  describe 'log2 block' ->\n    It 'converts data into the logarithm of it with base 2' ->\n      io-test do\n        type: \\log2\n        in: top: 1024\n        out: bottom: 10\n\n    It 'truncates decimal places' ->\n      io-test do\n        type: \\log2\n        in: top: 334\n        out: bottom: 8\n\n    It 'ignores sign of input data' ->\n      io-test do\n        type: \\log2\n        in: top: -334\n        out: bottom: 8\n\n  describe 'const-0 block' ->\n    It 'converts any input data into 0' ->\n      io-test do\n        type: \\const-0\n        in: top: 334\n        out: bottom: 0\n\n  describe 'const-1 block' ->\n    It 'converts any input data into 1' ->\n      io-test do\n        type: \\const-1\n        in: top: 334\n        out: bottom: 1\n\n  describe 'const-2 block' ->\n    It 'converts any input data into 2' ->\n      io-test do\n        type: \\const-2\n        in: top: 334\n        out: bottom: 2\n\n  describe 'const-3 block' ->\n    It 'converts any input data into 3' ->\n      io-test do\n        type: \\const-3\n        in: top: 334\n        out: bottom: 3\n\n  describe 'const-10 block' ->\n    It 'converts any input data into 10' ->\n      io-test do\n        type: \\const-10\n        in: top: 334\n        out: bottom: 10\n\n  describe 'add block' ->\n    It 'adds up left and right and send it to bottom' ->\n      io-test do\n        type: \\add\n        in:\n          left: 33\n          right: 4\n        out:\n          bottom: 37\n\n  describe 'sub block' ->\n    It 'subtract left by right and send it to bottom' ->\n      io-test do\n        type: \\sub\n        in:\n          left: 33\n          right: 4\n        out:\n          bottom: 29\n\n  describe 'mul block' ->\n    It 'multiplies left and right and send it to bottom' ->\n      io-test do\n        type: \\mul\n        in:\n          left: 33\n          right: 4\n        out:\n          bottom: 132\n\n  describe 'div block' ->\n    It 'divides left by right and send it to bottom' ->\n      io-test do\n        type: \\div\n        in:\n          left: 33\n          right: 4\n        out:\n          bottom: 8\n\n    It 'rounds remainder into zero' ->\n      io-test do\n        type: \\div\n        in:\n          left: -33\n          right: 4\n        out:\n          bottom: -8\n\n    It 'returns Infinity when dividing by zero' ->\n      io-test do\n        type: \\div\n        in:\n          left: 33\n          right: 0\n        out:\n          bottom: Infinity\n\n    It 'returns -Infinity when dividing by minus zero' ->\n      io-test do\n        type: \\div\n        in:\n          left: 33\n          right: -0\n        out:\n          bottom: -Infinity\n\n    It 'can output integer for large numbers' ->\n      io-test do\n        type: \\div\n        in:\n          left: 130e100\n          right: 18e100\n        out:\n          bottom: 7\n\n  describe 'pow block' ->\n    It 'powers left by right and send it to bottom' ->\n      io-test do\n        type: \\pow\n        in:\n          left: 3\n          right: 4\n        out:\n          bottom: 81\n\n    It 'deletes numbers after the decimal point' ->\n      io-test do\n        type: \\pow\n        in:\n          left: 2\n          right: -3\n        out:\n          bottom: 0\n\n    It 'deletes numbers after the decimal point' ->\n      io-test do\n        type: \\pow\n        in:\n          left: -2\n          right: -3\n        out:\n          bottom: 0\n\n    It 'returns 1 when left is 1 and right is an infinity' ->\n      io-test do\n        type: \\pow\n        in:\n          left: 1\n          right: Infinity\n        out:\n          bottom: 1\n\n    It 'returns infinity when left is an infinity and right is 1' ->\n       io-test do\n        type: \\pow\n        in:\n          left: Infinity\n          right: 1\n        out:\n          bottom: Infinity\n\n    It 'returns -infinity when left is -0 and right is -1' ->\n      io-test do\n        type: \\pow\n        in:\n          left: -0\n          right: -1\n        out:\n          bottom: -Infinity\n\n  describe 'log block' ->\n    It 'sends to bottom the logarithm of right with base of left' ->\n      io-test do\n        type: \\log\n        in:\n          left: 3\n          right: 81\n        out:\n          bottom: 4\n\n    It 'truncates decimal places' ->\n      io-test do\n        type: \\log\n        in:\n          left: 4\n          right: 33\n        out:\n          bottom: 2\n\n    It 'calculates log_10 1000 correctly' ->\n      io-test do\n        type: \\log\n        in:\n          left: 10\n          right: 1000\n        out:\n          bottom: 3\n\n    It 'calculates log_10 Infinity correctly' ->\n      io-test do\n        type: \\log\n        in:\n          left: 10\n          right: Infinity\n        out:\n          bottom: Infinity\n\n    It 'calculates log_Infinity 10 correctly' ->\n      io-test do\n        type: \\log\n        in:\n          left: Infinity\n          right: 10\n        out:\n          bottom: 0\n\n    It 'returns -Infinity when right is 0' ->\n      io-test do\n        type: \\log\n        in:\n          left: 334\n          right: 0\n        out:\n          bottom: -Infinity\n\n    It 'ignores signs of input data' ->\n      io-test do\n        type: \\log\n        in:\n          left: -4\n          right: -33\n        out:\n          bottom: 2\n\n  describe 'c-contact block' ->\n    context 'without rotation' ->\n      It 'receives nonzero data from top and sends 1 to right' ->\n        io-test do\n          type: \\c-contact\n          in: top: 334\n          out: right: 1\n\n      It 'receives zero from top and sends 1 to left' ->\n        io-test do\n          type: \\c-contact\n          in: top: 0\n          out: left: 1\n\n    context 'with 90deg rotated' ->\n      It 'receives nonzero data from right and sends 1 to bottom' ->\n        io-test do\n          type: \\c-contact\n          rotate: 1\n          in: right: 334\n          out: bottom: 1\n\n      It 'receives zero from right and sends 1 to top' ->\n        io-test do\n          type: \\c-contact\n          rotate: 1\n          in: right: 0\n          out: top: 1\n\n  describe 'transistor block' ->\n    context 'without rotation' ->\n      It 'receives nonzero data from top and conveys data from left to right' ->\n        io-test do\n          type: \\transistor\n          in:\n            top: 33\n            left: 4\n          out:\n            right: 4\n\n      It 'receives zero from top and conveys data from left to bottom' ->\n        io-test do\n          type: \\transistor\n          in:\n            top: 0\n            left: 334\n          out:\n            bottom: 334\n\n    context 'with 90deg rotated' ->\n      It 'receives nonzero data from right and conveys data from top to bottom' ->\n        io-test do\n          type: \\transistor\n          rotate: 1\n          in:\n            top: 33\n            right: 4\n          out:\n            bottom: 33\n\n  describe 'and block' ->\n    It 'calculates logical and' ->\n      io-test do\n        type: \\and\n        in:\n          left: 0\n          right: 0\n        out:\n          bottom: 0\n\n      io-test do\n        type: \\and\n        in:\n          left: 1\n          right: 0\n        out:\n          bottom: 0\n\n      io-test do\n        type: \\and\n        in:\n          left: 0\n          right: 1\n        out:\n          bottom: 0\n\n      io-test do\n        type: \\and\n        in:\n          left: 1\n          right: 1\n        out:\n          bottom: 1\n\n  describe 'or block' ->\n    It 'calculates logical or' ->\n      io-test do\n        type: \\or\n        in:\n          left: 0\n          right: 0\n        out:\n          bottom: 0\n\n      io-test do\n        type: \\or\n        in:\n          left: 1\n          right: 0\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\or\n        in:\n          left: 0\n          right: 1\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\or\n        in:\n          left: 1\n          right: 1\n        out:\n          bottom: 1\n\n  describe 'nand block' ->\n    It 'calculates logical nand' ->\n      io-test do\n        type: \\nand\n        in:\n          left: 0\n          right: 0\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\nand\n        in:\n          left: 1\n          right: 0\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\nand\n        in:\n          left: 0\n          right: 1\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\nand\n        in:\n          left: 1\n          right: 1\n        out:\n          bottom: 0\n\n  describe 'nor block' ->\n    It 'calculates logical nor' ->\n      io-test do\n        type: \\nor\n        in:\n          left: 0\n          right: 0\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\nor\n        in:\n          left: 1\n          right: 0\n        out:\n          bottom: 0\n\n      io-test do\n        type: \\nor\n        in:\n          left: 0\n          right: 1\n        out:\n          bottom: 0\n\n      io-test do\n        type: \\nor\n        in:\n          left: 1\n          right: 1\n        out:\n          bottom: 0\n\n  describe 'xor block' ->\n    It 'calculates logical xor' ->\n      io-test do\n        type: \\xor\n        in:\n          left: 0\n          right: 0\n        out:\n          bottom: 0\n\n      io-test do\n        type: \\xor\n        in:\n          left: 1\n          right: 0\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\xor\n        in:\n          left: 0\n          right: 1\n        out:\n          bottom: 1\n\n      io-test do\n        type: \\xor\n        in:\n          left: 1\n          right: 1\n        out:\n          bottom: 0\n\n  describe 'not block' ->\n    It 'calculates logical not' ->\n      io-test do\n        type: \\not\n        in: top: 0\n        out: bottom: 1\n\n      io-test do\n        type: \\not\n        in: top: 1\n        out: bottom: 0\n\n  describe 'sqrt block' ->\n    It 'calculates square root' ->\n      io-test do\n        type: \\sqrt\n        in: top: 1\n        out: bottom: 1\n\n      io-test do\n        type: \\sqrt\n        in: top: 80\n        out: bottom: 8\n\n      io-test do\n        type: \\sqrt\n        in: top: 81\n        out: bottom: 9\n\n      io-test do\n        type: \\sqrt\n        in: top: 334\n        out: bottom: 18\n\n      io-test do\n        type: \\sqrt\n        in: top: Infinity\n        out: bottom: Infinity\n\n    It 'returns zero when negative numbers were given' ->\n      io-test do\n        type: \\sqrt\n        in: top: 0\n        out: bottom: 0\n\n      io-test do\n        type: \\sqrt\n        in: top: -334\n        out: bottom: 0\n\n      io-test do\n        type: \\sqrt\n        in: top: -Infinity\n        out: bottom: 0\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/tsg-ut/mnemo/test/unit/block.ls","class PassEvent {\n\tconstructor({in: input, out: output}) {\n\t\tthis.in = input;\n\t\tthis.out = output;\n\t}\n}\n\nmodule.exports = PassEvent;\n\n\n\n// WEBPACK FOOTER //\n// lib/pass-event.js","/* eslint-env mocha */\n/* eslint no-unused-expressions: \"off\" */\n\n// eslint-disable-next-line no-unused-vars\nconst BoardComponent = require('../../lib/board-component.jsx');\n\ndescribe('<BoardComponent/>', () => {\n\t// TODO\n});\n\n\n\n// WEBPACK FOOTER //\n// test/unit/board-component.jsx","const React = require('react');\nconst PropTypes = require('prop-types');\nconst Hammer = require('react-hammerjs');\nconst {INPUT_MOVE, INPUT_END} = (typeof window === 'undefined') ? {} : require('hammerjs');\nconst {default: Measure} = require('react-measure');\nconst Path = require('svg-path-generator');\nconst assert = require('assert');\nconst Board = require('./board');\nconst BlockComponent = require('./block-component.jsx');\nconst IOComponent = require('./io-component.jsx');\nconst {id, sum} = require('./util');\nconst {BLOCK_SIZE} = require('./constants');\n\nconst inputColors = [\n\t'#de3131', // red\n\t'#4527a8', // blue\n\t'#1c6925', // green\n\t'#db40cd', // pink\n];\n\nclass BoardComponent extends React.Component {\n\tstatic propTypes = {\n\t\tstatus: PropTypes.string.isRequired,\n\t\twidth: PropTypes.number.isRequired,\n\t\theight: PropTypes.number.isRequired,\n\t\tclockLimit: PropTypes.number.isRequired,\n\t\tinputX: PropTypes.arrayOf(PropTypes.number).isRequired,\n\t\toutputX: PropTypes.number.isRequired,\n\t\tinput: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number))).isRequired,\n\t\tcurrentInputIndex: PropTypes.number,\n\t\toutput: PropTypes.arrayOf(PropTypes.number).isRequired,\n\t\tuserOutput: PropTypes.arrayOf(PropTypes.number).isRequired,\n\t\tuserOutputCorrectness: PropTypes.arrayOf(PropTypes.bool).isRequired,\n\t\tonClickBlock: PropTypes.func.isRequired,\n\t\tonOutput: PropTypes.func.isRequired,\n\t\tonHalt: PropTypes.func.isRequired,\n\t\tonPaused: PropTypes.func.isRequired,\n\t\tonDataLimitExceeded: PropTypes.func.isRequired,\n\t\tonClockLimitExceeded: PropTypes.func.isRequired,\n\t\tisRapid: PropTypes.bool.isRequired,\n\t\tisForced: PropTypes.bool.isRequired,\n\t}\n\n\tstatic defaultProps = {\n\t\tcurrentInputIndex: null,\n\t}\n\n\tconstructor(props, state) {\n\t\tsuper(props, state);\n\n\t\t// Currently, initial status should be always 'stop'\n\t\tassert(props.status === 'stop');\n\n\t\tthis.board = new Board({\n\t\t\theight: this.props.height,\n\t\t\twidth: this.props.width,\n\t\t\tclockLimit: this.props.clockLimit,\n\t\t\tinputX: this.props.inputX,\n\t\t\toutputX: this.props.outputX,\n\t\t}, this.blockSize);\n\n\t\tthis.board.on('output', this.handleBoardOutput);\n\t\tthis.board.on('halt', this.handleBoardHalt);\n\t\tthis.board.on('paused', this.handleBoardPaused);\n\n\t\tthis.passAnimationResolvers = new WeakMap();\n\n\t\tthis.inputBlockY = 0;\n\t\tthis.outputBlockX = this.props.outputX;\n\t\tthis.outputBlockY = this.props.height - 1;\n\n\t\tthis.animations = [];\n\n\t\tthis.backgroundDimensions = null;\n\n\t\tthis.state = {\n\t\t\tblocks: this.board.getBlocks(),\n\t\t\tclocks: 0,\n\t\t\tisPanning: false,\n\t\t\tisPinch: false,\n\t\t\tpanDistance: 0,\n\t\t\tpanAngle: 0,\n\t\t\tpinchCenterX: 0,\n\t\t\tpinchCenterY: 0,\n\t\t\tpinchScale: 1,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\tscale: 1,\n\t\t\tviewBoxScale: null,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.status === 'stop') {\n\t\t\tassert(this.props.status !== 'pause');\n\n\t\t\tif (this.props.status === 'executing') {\n\t\t\t\tthis.execute(this.props.input[this.props.currentInputIndex]);\n\t\t\t}\n\t\t}\n\n\t\tif (prevProps.status === 'executing') {\n\t\t\tif (this.props.status === 'stop') {\n\t\t\t\tthis.halt({force: this.props.isForced});\n\t\t\t}\n\t\t}\n\t}\n\n\tget _borderSize() {\n\t\treturn 25;\n\t}\n\n\tget _boardWidth() {\n\t\treturn this.props.width * BLOCK_SIZE;\n\t}\n\n\tget _boardHeight() {\n\t\treturn this.props.height * BLOCK_SIZE;\n\t}\n\n\tget _inputHeight() {\n\t\treturn 120;\n\t}\n\n\tget _outputHeight() {\n\t\treturn 170;\n\t}\n\n\tget _boardBorderWidth() {\n\t\treturn this._borderSize * 2 + this._boardWidth;\n\t}\n\n\tget _boardBorderHeight() {\n\t\treturn this._borderSize * 2 + this._boardHeight;\n\t}\n\n\tget _boardOuterWidth() {\n\t\treturn Math.max(this._borderSize * 2 + this._boardWidth, this._inputAreaWidth);\n\t}\n\n\tget _boardOuterHeight() {\n\t\treturn this._borderSize * 2 + this._boardHeight + this._inputHeight + this._outputHeight;\n\t}\n\n\tget _inputAreaWidth() {\n\t\tconst inputComponentSize = sum(this.props.input.map((inputList) => inputList.length));\n\t\treturn inputComponentSize * 200 - 50;\n\t}\n\n\tget _outputAreaWidth() {\n\t\treturn this.props.output.length * 200 - 50;\n\t}\n\n\t// TODO: publicなメソッドを殺したい\n\n\tgetBlock(x, y) {\n\t\treturn this.board.getBlock(x, y);\n\t}\n\n\tgetBoardData() {\n\t\treturn this.board.boardData;\n\t}\n\n\tgetClock() {\n\t\treturn this.board.clock;\n\t}\n\n\tgetWeighedBlockCount() {\n\t\treturn this.board.weighedBlockCount;\n\t}\n\n\tgetSeededRandom() {\n\t\treturn this.board.getSeededRandom();\n\t}\n\n\tplaceBlock({x, y, type, rotate}) {\n\t\tthis.board.placeBlock({x, y, type, rotate});\n\t\tthis.setState({\n\t\t\tblocks: this.board.getBlocks(),\n\t\t});\n\t}\n\n\texecute = (value) => {\n\t\t// Reset scale on start executing\n\t\tconst {offsetX, offsetY, scale} = this.normalizeScaleAndOffset({\n\t\t\toffsetX: this.state.offsetX,\n\t\t\toffsetY: this.state.offsetY,\n\t\t\tscale: 1,\n\t\t});\n\t\tthis.setState({offsetX, offsetY, scale});\n\n\t\tthis.board.input(value);\n\t\tthis.clockUp();\n\t}\n\n\thalt({force}) {\n\t\tif (force) {\n\t\t\tthis.board.halt();\n\t\t}\n\t}\n\n\tclockUp = async () => {\n\t\tconst passAnimations = [];\n\n\t\tthis.board.step({\n\t\t\tonPass: (passEvent) => {\n\t\t\t\tpassAnimations.push(new Promise((resolve) => {\n\t\t\t\t\tthis.passAnimationResolvers.set(passEvent, resolve);\n\t\t\t\t}));\n\t\t\t},\n\t\t});\n\n\t\tthis.setState({\n\t\t\tclocks: this.board.clock,\n\t\t});\n\n\t\tif (this.board.status !== 'executing') {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.all(passAnimations);\n\n\t\tthis.board.hand();\n\n\t\tif (this.board.status !== 'executing') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.board.clock >= this.board.clockLimit) {\n\t\t\tthis.board.halt();\n\t\t\tthis.props.onClockLimitExceeded(this.board.clockLimit);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.board.dataCount > 100) {\n\t\t\tthis.board.halt();\n\t\t\tthis.props.onDataLimitExceeded();\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clockUp();\n\t}\n\n\tnormalizeScaleAndOffset = ({offsetX, offsetY, scale}) => {\n\t\tconst maxScale = Math.max(this._boardOuterWidth, this._boardOuterHeight) / (BLOCK_SIZE * 2);\n\t\tconst normalizedScale = Math.max(1, Math.min(scale, maxScale));\n\n\t\tconst maxOffsetX = (this._boardOuterWidth - this._boardOuterWidth / normalizedScale) / 2;\n\t\tconst normalizedOffsetX = Math.max(-maxOffsetX, Math.min(offsetX, maxOffsetX));\n\n\t\tconst maxOffsetY = (this._boardOuterHeight - this._boardOuterHeight / normalizedScale) / 2;\n\t\tconst normalizedOffsetY = Math.max(-maxOffsetY, Math.min(offsetY, maxOffsetY));\n\n\t\treturn {\n\t\t\tscale: normalizedScale,\n\t\t\toffsetX: normalizedOffsetX,\n\t\t\toffsetY: normalizedOffsetY,\n\t\t};\n\t}\n\n\thandleBoardOutput = (value) => {\n\t\tthis.props.onOutput(value);\n\t}\n\n\thandleBoardHalt = () => {\n\t\tthis.props.onHalt();\n\t}\n\n\thandleBoardPaused = () => {\n\t\tthis.props.onPaused();\n\t}\n\n\thandleClickBlock = (event, x, y) => {\n\t\tevent.preventDefault();\n\t\treturn this.props.onClickBlock({x, y, type: event.type});\n\t}\n\n\thandlePassAnimationComplete = (passEvent) => {\n\t\tif (this.passAnimationResolvers.has(passEvent)) {\n\t\t\tthis.passAnimationResolvers.get(passEvent)();\n\t\t}\n\t}\n\n\thandlePan = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst distance = this.state.viewBoxScale === null\n\t\t\t? event.distance\n\t\t\t: event.distance / this.state.viewBoxScale;\n\t\tconst angle = event.angle / 180 * Math.PI;\n\n\t\tif (event.eventType === INPUT_MOVE) {\n\t\t\tthis.setState({\n\t\t\t\tisPanning: true,\n\t\t\t\tpanDistance: distance,\n\t\t\t\tpanAngle: angle,\n\t\t\t});\n\t\t} else if (event.eventType === INPUT_END) {\n\t\t\tconst {offsetX, offsetY, scale} = this.normalizeScaleAndOffset({\n\t\t\t\toffsetX: this.state.offsetX - distance * Math.cos(angle),\n\t\t\t\toffsetY: this.state.offsetY - distance * Math.sin(angle),\n\t\t\t\tscale: this.state.scale,\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tisPanning: false,\n\t\t\t\toffsetX,\n\t\t\t\toffsetY,\n\t\t\t\tscale,\n\t\t\t});\n\t\t}\n\t}\n\n\thandlePinch = (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (event.eventType === INPUT_MOVE) {\n\t\t\tthis.setState({\n\t\t\t\tisPinching: true,\n\t\t\t\tpinchScale: event.scale,\n\t\t\t});\n\t\t} else if (event.eventType === INPUT_END) {\n\t\t\tconst {offsetX, offsetY, scale} = this.normalizeScaleAndOffset({\n\t\t\t\toffsetX: this.state.offsetX,\n\t\t\t\toffsetY: this.state.offsetY,\n\t\t\t\tscale: this.state.scale * this.state.pinchScale,\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tisPinching: false,\n\t\t\t\toffsetX,\n\t\t\t\toffsetY,\n\t\t\t\tscale,\n\t\t\t});\n\n\t\t\tif (this.measureComponent) {\n\t\t\t\tthis.measureComponent.measure();\n\t\t\t}\n\t\t}\n\t}\n\n\thandleWheel = (event) => {\n\t\tconst direction = (event.deltaY > 0) ? -1 : 1;\n\n\t\tconst {offsetX, offsetY, scale} = this.normalizeScaleAndOffset({\n\t\t\toffsetX: this.state.offsetX,\n\t\t\toffsetY: this.state.offsetY,\n\t\t\tscale: this.state.scale * (1.0 + 0.1 * direction),\n\t\t});\n\n\t\tthis.setState({\n\t\t\toffsetX,\n\t\t\toffsetY,\n\t\t\tscale,\n\t\t});\n\n\t\tif (this.measureComponent) {\n\t\t\tthis.measureComponent.measure();\n\t\t}\n\t}\n\n\thandleDragStart = (event) => {\n\t\tevent.preventDefault();\n\t}\n\n\thandleMeasureBackground = (dimensions) => {\n\t\tthis.backgroundDimensions = dimensions.bounds;\n\t\tthis.setState({\n\t\t\tviewBoxScale: this.backgroundDimensions.width / this._boardWidth,\n\t\t});\n\t}\n\n\thandleMeasureInput = (dimensions) => {\n\t\tthis.handleMeasureIO({type: 'input', dimensions});\n\t}\n\n\thandleMeasureOutput = (dimensions) => {\n\t\tthis.handleMeasureIO({type: 'output', dimensions});\n\t}\n\n\thandleMeasureUserOutput = (dimensions) => {\n\t\tthis.handleMeasureIO({type: 'user_output', dimensions});\n\t}\n\n\tgetViewBox = () => {\n\t\tconst {offsetX, offsetY, scale} = this.normalizeScaleAndOffset({\n\t\t\toffsetX: this.state.isPanning\n\t\t\t\t? this.state.offsetX - this.state.panDistance * Math.cos(this.state.panAngle)\n\t\t\t\t: this.state.offsetX,\n\t\t\toffsetY: this.state.isPanning\n\t\t\t\t? this.state.offsetY - this.state.panDistance * Math.sin(this.state.panAngle)\n\t\t\t\t: this.state.offsetY,\n\t\t\tscale: this.state.isPinching\n\t\t\t\t? this.state.scale * this.state.pinchScale\n\t\t\t\t: this.state.scale,\n\t\t});\n\n\t\tconst normalOffsetY = (this._outputHeight - this._inputHeight) / 2;\n\n\t\tconst viewBoxWidth = this._boardOuterWidth / scale;\n\t\tconst viewBoxHeight = this._boardOuterHeight / scale;\n\n\t\treturn [\n\t\t\t-viewBoxWidth / 2 + offsetX,\n\t\t\t-viewBoxHeight / 2 + offsetY + normalOffsetY,\n\t\t\tviewBoxWidth,\n\t\t\tviewBoxHeight,\n\t\t];\n\t}\n\n\tgetIOWirePathData = ({startX, endX, head, tail}) => {\n\t\tconst pathLength = 30;\n\t\tconst curveLength = pathLength * 0.9;\n\n\t\treturn Path()\n\t\t\t.moveTo(startX, 0)\n\t\t\t.relative().lineTo(0, head)\n\t\t\t.relative().curveTo(\n\t\t\t\t0, curveLength,\n\t\t\t\tendX - startX, pathLength - curveLength,\n\t\t\t\tendX - startX, pathLength)\n\t\t\t.relative().lineTo(0, tail)\n\t\t\t.end();\n\t}\n\n\tgetInputColor = (index) => {\n\t\tif (this.props.currentInputIndex !== null && this.props.currentInputIndex !== index) {\n\t\t\treturn 'gray';\n\t\t}\n\n\t\treturn inputColors[index % inputColors.length];\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Hammer\n\t\t\t\tonPan={this.handlePan}\n\t\t\t\tonPinch={this.handlePinch}\n\t\t\t\toptions={{\n\t\t\t\t\trecognizers: {\n\t\t\t\t\t\tpinch: {enable: true},\n\t\t\t\t\t},\n\t\t\t\t\tpreventDefault: true,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\tclassName=\"board-svg\"\n\t\t\t\t\tviewBox={this.getViewBox()}\n\t\t\t\t\tonWheel={this.handleWheel}\n\t\t\t\t\tonDragStart={this.handleDragStart}\n\t\t\t\t>\n\t\t\t\t\t{/* inputs */}\n\t\t\t\t\t<g transform={`translate(0, ${-this._boardBorderHeight / 2 - 100})`}>\n\t\t\t\t\t\t{this.renderInputs()}\n\t\t\t\t\t</g>\n\t\t\t\t\t{/* board + board-border */}\n\t\t\t\t\t<g transform={`translate(${-this._boardBorderWidth / 2}, ${-this._boardBorderHeight / 2})`}>\n\t\t\t\t\t\t{/* board-border */}\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t{/* top-left */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx=\"0\"\n\t\t\t\t\t\t\t\ty=\"0\"\n\t\t\t\t\t\t\t\twidth={this._borderSize}\n\t\t\t\t\t\t\t\theight={this._borderSize}\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-topleft.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* top */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx={this._borderSize}\n\t\t\t\t\t\t\t\ty=\"0\"\n\t\t\t\t\t\t\t\twidth={this._boardWidth}\n\t\t\t\t\t\t\t\theight={this._borderSize}\n\t\t\t\t\t\t\t\tpreserveAspectRatio=\"none\"\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-top.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* top-right */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx={this._borderSize + this._boardWidth}\n\t\t\t\t\t\t\t\ty=\"0\"\n\t\t\t\t\t\t\t\twidth={this._borderSize}\n\t\t\t\t\t\t\t\theight={this._borderSize}\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-topright.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* left */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx=\"0\"\n\t\t\t\t\t\t\t\ty={this._borderSize}\n\t\t\t\t\t\t\t\twidth={this._borderSize}\n\t\t\t\t\t\t\t\theight={this._boardHeight}\n\t\t\t\t\t\t\t\tpreserveAspectRatio=\"none\"\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-left.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* right */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx={this._borderSize + this._boardWidth}\n\t\t\t\t\t\t\t\ty={this._borderSize}\n\t\t\t\t\t\t\t\twidth={this._borderSize}\n\t\t\t\t\t\t\t\theight={this._boardHeight}\n\t\t\t\t\t\t\t\tpreserveAspectRatio=\"none\"\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-right.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* bottom-left */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx=\"0\"\n\t\t\t\t\t\t\t\ty={this._borderSize + this._boardHeight}\n\t\t\t\t\t\t\t\twidth={this._borderSize}\n\t\t\t\t\t\t\t\theight={this._borderSize}\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-bottomleft.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* bottom */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx={this._borderSize}\n\t\t\t\t\t\t\t\ty={this._borderSize + this._boardHeight}\n\t\t\t\t\t\t\t\twidth={this._boardWidth}\n\t\t\t\t\t\t\t\theight={this._borderSize}\n\t\t\t\t\t\t\t\tpreserveAspectRatio=\"none\"\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-bottom.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* bottom-right */}\n\t\t\t\t\t\t\t<image\n\t\t\t\t\t\t\t\tx={this._borderSize + this._boardWidth}\n\t\t\t\t\t\t\t\ty={this._borderSize + this._boardHeight}\n\t\t\t\t\t\t\t\twidth={this._borderSize}\n\t\t\t\t\t\t\t\theight={this._borderSize}\n\t\t\t\t\t\t\t\txlinkHref=\"image/frame-bottomright.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t{/* clocks */}\n\t\t\t\t\t\t<foreignObject\n\t\t\t\t\t\t\ttransform={`translate(0, ${this._boardBorderHeight})`}\n\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tfontSize=\"0\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"clock-area\">\n\t\t\t\t\t\t\t\t{this.state.clocks}/{this.props.clockLimit}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</foreignObject>\n\t\t\t\t\t\t{/* board */}\n\t\t\t\t\t\t<g transform={`translate(${this._borderSize}, ${this._borderSize})`}>\n\t\t\t\t\t\t\t<Measure\n\t\t\t\t\t\t\t\tref={(ref) => {\n\t\t\t\t\t\t\t\t\tthis.measureComponent = ref;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonResize={this.handleMeasureBackground}\n\t\t\t\t\t\t\t\tbounds={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({measureRef}) => (\n\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\tref={measureRef}\n\t\t\t\t\t\t\t\t\t\tclassName=\"board-background\"\n\t\t\t\t\t\t\t\t\t\twidth={this.props.width * BLOCK_SIZE}\n\t\t\t\t\t\t\t\t\t\theight={this.props.height * BLOCK_SIZE}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Measure>\n\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t{this.renderBlocks()}\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.state.blocks.map((row) => (\n\t\t\t\t\t\t\t\t\t\trow.map((block) => (\n\t\t\t\t\t\t\t\t\t\t\t<BlockComponent\n\t\t\t\t\t\t\t\t\t\t\t\tkey={id(block)}\n\t\t\t\t\t\t\t\t\t\t\t\tblock={block}\n\t\t\t\t\t\t\t\t\t\t\t\tx={block.x}\n\t\t\t\t\t\t\t\t\t\t\t\ty={block.y}\n\t\t\t\t\t\t\t\t\t\t\t\tstatus={this.props.status}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleClickBlock}\n\t\t\t\t\t\t\t\t\t\t\t\tonPassAnimationComplete={this.handlePassAnimationComplete}\n\t\t\t\t\t\t\t\t\t\t\t\tisRapid={this.props.isRapid}\n\t\t\t\t\t\t\t\t\t\t\t\tviewBoxScale={this.state.viewBoxScale}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t\t{/* outputs */}\n\t\t\t\t\t<g transform={`translate(0, ${this._boardBorderHeight / 2})`}>\n\t\t\t\t\t\t{this.renderOutputs()}\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</Hammer>\n\t\t);\n\t}\n\n\trenderInputs = () => (\n\t\tthis.props.input.map((inputsList, index) => (\n\t\t\t<g key={index}>\n\t\t\t\t{\n\t\t\t\t\tinputsList.map((inputs, inputsIndex) => {\n\t\t\t\t\t\tconst x = -this._inputAreaWidth / 2 + (index * inputsList.length + inputsIndex) * 200;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<g key={inputsIndex}>\n\t\t\t\t\t\t\t\t<IOComponent\n\t\t\t\t\t\t\t\t\tx={x}\n\t\t\t\t\t\t\t\t\ty={0}\n\t\t\t\t\t\t\t\t\tvalue={inputs}\n\t\t\t\t\t\t\t\t\tcorrectness={null}\n\t\t\t\t\t\t\t\t\tcolor={this.getInputColor(index)}\n\t\t\t\t\t\t\t\t\tfilled={true}\n\t\t\t\t\t\t\t\t\tnullable={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td={this.getIOWirePathData({\n\t\t\t\t\t\t\t\t\t\tstartX: x + 75,\n\t\t\t\t\t\t\t\t\t\tendX: (this.props.inputX[inputsIndex] - this.props.width / 2 + 0.5) * BLOCK_SIZE + (index - (this.props.input.length - 1) / 2) * 10,\n\t\t\t\t\t\t\t\t\t\thead: 0,\n\t\t\t\t\t\t\t\t\t\ttail: 20,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\ttransform={'translate(0, 50)'}\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\tstrokeWidth=\"5\"\n\t\t\t\t\t\t\t\t\tstroke={this.getInputColor(index)}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\ttransition: 'stroke 0.3s ease',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</g>\n\t\t))\n\t)\n\n\t/*\n\t\tBecause of the limitation of React (cannot render sibling\n\t\telements) and SVG (first element always rendered first),\n\t\tblocks renderings are located here.\n\t\tThey must be inside BlockComponent, though...\n\t*/\n\trenderBlocks = () => (\n\t\tthis.state.blocks.map((row) => (\n\t\t\trow.map((block) => (\n\t\t\t\t<g key={id(block)}>\n\t\t\t\t\t<rect\n\t\t\t\t\t\tclassName=\"block-border\"\n\t\t\t\t\t\twidth={BLOCK_SIZE}\n\t\t\t\t\t\theight={BLOCK_SIZE}\n\t\t\t\t\t\tx={block.x * BLOCK_SIZE}\n\t\t\t\t\t\ty={block.y * BLOCK_SIZE}\n\t\t\t\t\t/>\n\t\t\t\t\t{block.config.onRotatableWire && (\n\t\t\t\t\t\t<image\n\t\t\t\t\t\t\tclassName=\"block\"\n\t\t\t\t\t\t\twidth={BLOCK_SIZE}\n\t\t\t\t\t\t\theight={BLOCK_SIZE}\n\t\t\t\t\t\t\tx={block.x * BLOCK_SIZE}\n\t\t\t\t\t\t\ty={block.y * BLOCK_SIZE}\n\t\t\t\t\t\t\txlinkHref=\"image/wireI.png\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttransform: `rotate(${block.rotate * 90}deg)`,\n\t\t\t\t\t\t\t\ttransformOrigin: 'center',\n\t\t\t\t\t\t\t\t// Enabled from FF55\n\t\t\t\t\t\t\t\ttransformBox: 'fill-box',\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{(block.name !== 'empty') && (\n\t\t\t\t\t\t<image\n\t\t\t\t\t\t\tclassName=\"block\"\n\t\t\t\t\t\t\twidth={BLOCK_SIZE}\n\t\t\t\t\t\t\theight={BLOCK_SIZE}\n\t\t\t\t\t\t\tx={block.x * BLOCK_SIZE}\n\t\t\t\t\t\t\ty={block.y * BLOCK_SIZE}\n\t\t\t\t\t\t\txlinkHref={`image/${block.name}.png`}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttransform: block.config.onRotatableWire ? 'none' : `rotate(${block.rotate * 90}deg)`,\n\t\t\t\t\t\t\t\ttransformOrigin: 'center',\n\t\t\t\t\t\t\t\t// Enabled from FF55\n\t\t\t\t\t\t\t\ttransformBox: 'fill-box',\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</g>\n\t\t\t))\n\t\t))\n\t)\n\n\trenderOutputs = () => (\n\t\tthis.props.output.map((output, index) => (\n\t\t\t<g key={index}>\n\t\t\t\t<path\n\t\t\t\t\td={this.getIOWirePathData({\n\t\t\t\t\t\tstartX: (index - (this.props.output.length - 1) / 2) * 10,\n\t\t\t\t\t\tendX: -this._outputAreaWidth / 2 + index * 200 + 75,\n\t\t\t\t\t\thead: 20,\n\t\t\t\t\t\ttail: 0,\n\t\t\t\t\t})}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstrokeWidth=\"5\"\n\t\t\t\t\tstroke={this.getInputColor(index)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransition: 'stroke 0.3s ease',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<IOComponent\n\t\t\t\t\tx={-this._outputAreaWidth / 2 + index * 200}\n\t\t\t\t\ty={110}\n\t\t\t\t\tvalue={output}\n\t\t\t\t\tcorrectness={null}\n\t\t\t\t\tcolor={this.getInputColor(index)}\n\t\t\t\t\tfilled={true}\n\t\t\t\t\tnullable={false}\n\t\t\t\t/>\n\t\t\t\t<IOComponent\n\t\t\t\t\tx={-this._outputAreaWidth / 2 + index * 200}\n\t\t\t\t\ty={50}\n\t\t\t\t\tvalue={this.props.userOutput[index]}\n\t\t\t\t\tcorrectness={this.props.userOutputCorrectness[index]}\n\t\t\t\t\tcolor={this.getInputColor(index)}\n\t\t\t\t\tfilled={false}\n\t\t\t\t\tnullable={true}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t))\n\t)\n}\n\nmodule.exports = BoardComponent;\n\n\n\n// WEBPACK FOOTER //\n// lib/board-component.jsx","module.exports = require(\"react-hammerjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-hammerjs\"\n// module id = 47\n// module chunks = 0","module.exports = require(\"hammerjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"hammerjs\"\n// module id = 48\n// module chunks = 0","module.exports = require(\"svg-path-generator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"svg-path-generator\"\n// module id = 49\n// module chunks = 0","require! {\n  chai: {expect}\n  seedrandom\n  '../../lib/board': Board\n  '../../lib/block': Block\n}\n\nIt = global.it\n\ndescribe 'Board' ->\n  before-each ->\n    @board = new Board do\n      inputX: 2\n      outputX: 2\n      width: 5\n      height: 4\n      clock-limit: 100\n\n  It 'carries input data to output when plugged input and output by wires' ->\n    resolve, reject <~ new Promise _\n\n    for y from 0 til 4\n      @board.place-block x: 2, y: y, type: \\wireI, rotate: 0\n\n    @board.on 'output' (output-value) ->\n      expect output-value .to.equal 100\n      resolve!\n\n    @board.input 100\n\n    for x from 0 til 4\n      @board.step!\n      @board.hand!\n\n  describe 'constructor' ->\n    It 'creates height x width numbers of empty blocks' ->\n      expect @board.blocks .to.have.length-of 4\n\n      @board.blocks.for-each (row) ->\n        expect row .to.have.length-of 5\n\n        row.for-each (block) ->\n          expect block .to.be.an.instanceof Block\n          expect block.config.type .to.equal 'empty'\n\n  describe '#input' ->\n    It 'executes the board' ->\n      @board.input 100\n      expect @board.status .to.equal 'executing'\n\n  describe '#dataCount' ->\n    It 'counts data in board' ->\n      @board.place-block x: 2, y: 0, type: \\wireXdot, rotate: 0\n      @board.input 100\n      @board.step!\n\n      expect @board.data-count .to.equal 3\n\n  describe '#dataExists' ->\n    It 'returns true if any data exist on the current board' ->\n      @board.place-block x: 2, y: 0, type: \\wireXdot, rotate: 0\n      @board.input 100\n      expect @board.data-exists .to.be.true\n      @board.step!\n      expect @board.data-exists .to.be.true\n      @board.hand!\n      expect @board.data-exists .to.be.true\n      @board.step!\n      expect @board.data-exists .to.be.false\n\n  describe '#blockCount' ->\n    It 'counts blocks in board' ->\n      @board.place-block x: 2, y: 1, type: \\wireI, rotate: 0\n      @board.place-block x: 3, y: 2, type: \\times-2, rotate: 0\n      @board.place-block x: 0, y: 3, type: \\diode, rotate: 1\n      expect @board.block-count .to.equal 3\n\n  describe '#weighedBlockCount' ->\n    It 'sums up block weights in board' ->\n      @board.place-block x: 2, y: 1, type: \\wireI, rotate: 0\n      @board.place-block x: 3, y: 2, type: \\times-2, rotate: 0\n      @board.place-block x: 0, y: 3, type: \\diode, rotate: 1\n      expect @board.weighed-block-count .to.equal 6\n\n  describe '#boardData' ->\n    It 'return JSON data of the current board state' ->\n      @board.place-block x: 0, y: 3, type: \\diode, rotate: 1\n      @board.place-block x: 2, y: 1, type: \\wireI, rotate: 0\n      @board.place-block x: 3, y: 2, type: \\times-2, rotate: 0\n\n      expect @board.board-data .to.deep.equal [\n        * x: 2, y: 1, type: \\wireI, rotate: 0\n        * x: 3, y: 2, type: \\times-2, rotate: 0\n        * x: 0, y: 3, type: \\diode, rotate: 1\n      ]\n\n  describe '#getSeededRandom' ->\n    It 'returns seeded random function with board data' ->\n      @board.place-block x: 1, y: 1, type: \\diode, rotate: 1\n\n      expected-random = seedrandom '[[1,1,\"diode\",1]]'\n      result-random = @board.get-seeded-random!\n\n      expect result-random .to.be.a \\function\n\n      expected = expected-random!\n      result = result-random!\n\n      expect result .to.be.a \\number\n      expect result .to.equal expected\n\n  describe '#run' ->\n    It 'run the board until the end and report the output' ->\n      @board.place-block x: 2, y: 0, type: \\wireI, rotate: 0\n      @board.place-block x: 2, y: 1, type: \\minus-1, rotate: 0\n      @board.place-block x: 2, y: 2, type: \\times-2, rotate: 0\n      @board.place-block x: 2, y: 3, type: \\wireI, rotate: 0\n\n      @board.run 7\n\n      expect @board.output-value .to.equal 12\n      expect @board.clock .to.equal 4\n\n    It 'remains outputValue to null when no output was generated' ->\n      @board.place-block x: 2, y: 0, type: \\wireI, rotate: 0\n      @board.place-block x: 2, y: 1, type: \\minus-1, rotate: 0\n      @board.place-block x: 2, y: 2, type: \\times-2, rotate: 1 # cut\n      @board.place-block x: 2, y: 3, type: \\wireI, rotate: 0\n\n      @board.run 7\n\n      expect @board.output-value .to.be.null\n      expect @board.clock .to.equal 3\n\n    It 'limits maximum execution clocks to stage\\'s clock limit' ->\n      @board.place-block x: 1, y: 0, type: \\wireL, rotate: 1\n      @board.place-block x: 2, y: 0, type: \\wireT, rotate: 3\n      @board.place-block x: 1, y: 1, type: \\wireL, rotate: 0\n      @board.place-block x: 2, y: 1, type: \\wireL, rotate: 3\n\n      @board.run 7\n\n      expect @board.output-value .to.be.null\n      expect @board.clock .to.equal 100\n\n    It 'limits simultaneous data count to 100' ->\n      for x from 0 to 4\n        for y from 0 to 2\n          @board.place-block {x, y, type: \\wireXdot, rotate: 0}\n\n      @board.run 7\n\n      expect @board.output-value .to.be.null\n      expect @board.clock .to.be.above 1 .and.below 100\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/tsg-ut/mnemo/test/unit/board.ls","/* eslint-env mocha */\n/* eslint no-unused-expressions: \"off\" */\n\n// eslint-disable-next-line no-unused-vars\nconst DataComponent = require('../../lib/data-component.jsx');\n\ndescribe('<DataComponent/>', () => {\n\t// TODO\n});\n\n\n\n// WEBPACK FOOTER //\n// test/unit/data-component.jsx","/* eslint-env mocha */\n/* eslint no-unused-expressions: \"off\" */\n\n// eslint-disable-next-line no-unused-vars\nconst DataComponent = require('../../lib/io-component.jsx');\n\ndescribe('<IOComponent/>', () => {\n\t// TODO\n});\n\n\n\n// WEBPACK FOOTER //\n// test/unit/io-component.jsx","/* eslint-env mocha */\n/* eslint no-unused-expressions: \"off\" */\n\nconst React = require('react');\nconst {shallow} = require('enzyme');\nconst chai = require('chai');\nconst chaiEnzyme = require('chai-enzyme');\n\nchai.use(chaiEnzyme());\n\nconst {expect} = chai;\n\nconst PanelComponent = require('../../lib/panel-component.jsx');\n\ndescribe('<PanelComponent/>', () => {\n\tit('renders .panel', () => {\n\t\tconst panel = shallow(<PanelComponent parts={{}}/>);\n\t\texpect(panel).to.have.length(1);\n\t\texpect(panel).to.have.className('panel');\n\t});\n\n\tit('renders blocks with specified parts', () => {\n\t\tconst panel = shallow(\n\t\t\t<PanelComponent\n\t\t\t\tparts={{\n\t\t\t\t\twireI: 10,\n\t\t\t\t\twireL: 30,\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\n\t\texpect(panel.children()).to.have.length(2);\n\n\t\texpect(panel.childAt(0)).to.have.className('block');\n\t\texpect(panel.childAt(0)).to.have.prop('data-type', 'wireI');\n\t\texpect(panel.childAt(0).find('.count')).be.present();\n\t\texpect(panel.childAt(0).find('.count')).to.have.text('10');\n\n\t\texpect(panel.childAt(1)).to.have.className('block');\n\t\texpect(panel.childAt(1)).to.have.prop('data-type', 'wireL');\n\t\texpect(panel.childAt(1).find('.count')).be.present();\n\t\texpect(panel.childAt(1).find('.count')).to.have.text('30');\n\t});\n\n\tit('renders null blocks as Infinity', () => {\n\t\tconst panel = shallow(\n\t\t\t<PanelComponent\n\t\t\t\tparts={{\n\t\t\t\t\twireI: null,\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\n\t\texpect(panel.find('.block').first()).to.have.prop('data-type', 'wireI');\n\t\texpect(panel.find('.block').first().find('.count')).to.have.text('∞');\n\t});\n\n\tit('marks first block as selected', () => {\n\t\tconst panel = shallow(\n\t\t\t<PanelComponent\n\t\t\t\tparts={{\n\t\t\t\t\twireI: 10,\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\n\t\texpect(panel).to.have.state('selected', 'wireI');\n\t\texpect(panel.find('.block').first()).to.have.attr('data-selected', 'data-selected');\n\t});\n\n\tdescribe('#push', () => {\n\t\tit('pushes block to panel', () => {\n\t\t\tconst panel = shallow(\n\t\t\t\t<PanelComponent\n\t\t\t\t\tparts={{\n\t\t\t\t\t\twireI: 10,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\tpanel.instance().push('wireI');\n\t\t\texpect(panel.state('parts').get('wireI')).to.equal(11);\n\t\t});\n\n\t\tit('pushes new block to panel', () => {\n\t\t\tconst panel = shallow(\n\t\t\t\t<PanelComponent\n\t\t\t\t\tparts={{\n\t\t\t\t\t\twireI: 10,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\tpanel.instance().push('wireL');\n\t\t\texpect(panel.state('parts').get('wireI')).to.equal(10);\n\t\t\texpect(panel.state('parts').get('wireL')).to.equal(1);\n\t\t});\n\n\t\tit('remains Infinity blocks as Infinity', () => {\n\t\t\tconst panel = shallow(\n\t\t\t\t<PanelComponent\n\t\t\t\t\tparts={{\n\t\t\t\t\t\twireI: null,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\tpanel.instance().push('wireI');\n\t\t\texpect(panel.state('parts').get('wireI')).to.be.null;\n\t\t});\n\t});\n\n\tdescribe('#take', () => {\n\t\tit('takes blocks from parts', () => {\n\t\t\tconst panel = shallow(\n\t\t\t\t<PanelComponent\n\t\t\t\t\tparts={{\n\t\t\t\t\t\twireI: 10,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\tpanel.instance().take('wireI');\n\t\t\texpect(panel.state('parts').get('wireI')).to.equal(9);\n\t\t});\n\n\t\tit('erases last block when taken', () => {\n\t\t\tconst panel = shallow(\n\t\t\t\t<PanelComponent\n\t\t\t\t\tparts={{\n\t\t\t\t\t\twireI: 1,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\tpanel.instance().take('wireI');\n\t\t\texpect(panel.state('parts').has('wireI')).to.be.false;\n\t\t});\n\n\t\tit('remains Infinity blocks as Infinity', () => {\n\t\t\tconst panel = shallow(\n\t\t\t\t<PanelComponent\n\t\t\t\t\tparts={{\n\t\t\t\t\t\twireI: null,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\tpanel.instance().take('wireI');\n\t\t\texpect(panel.state('parts').get('wireI')).to.be.null;\n\t\t});\n\t});\n\n\tdescribe('#onClickBlock', () => {\n\t\tit('switches selected block as clicked', () => {\n\t\t\tconst panel = shallow(\n\t\t\t\t<PanelComponent\n\t\t\t\t\tparts={{\n\t\t\t\t\t\twireI: null,\n\t\t\t\t\t\twireL: null,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\texpect(panel).to.have.state('selected', 'wireI');\n\t\t\texpect(panel.childAt(0)).to.have.attr('data-selected', 'data-selected');\n\n\t\t\tconst mockedEvent = {\n\t\t\t\ttarget: {\n\t\t\t\t\tgetAttribute: () => 'wireL',\n\t\t\t\t},\n\t\t\t};\n\t\t\tpanel.childAt(1).simulate('click', mockedEvent);\n\n\t\t\texpect(panel).to.have.state('selected', 'wireL');\n\t\t\texpect(panel.childAt(1)).to.have.attr('data-selected', 'data-selected');\n\t\t});\n\t});\n});\n\n\n\n// WEBPACK FOOTER //\n// test/unit/panel-component.jsx","module.exports = require(\"enzyme\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"enzyme\"\n// module id = 54\n// module chunks = 0","module.exports = require(\"chai-enzyme\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai-enzyme\"\n// module id = 55\n// module chunks = 0","const assert = require('assert');\nconst React = require('react');\nconst PropTypes = require('prop-types');\n\nclass PanelComponent extends React.Component {\n\tstatic propTypes = {\n\t\tparts: PropTypes.object.isRequired,\n\t}\n\n\tconstructor(props, state) {\n\t\tsuper(props, state);\n\n\t\tconst parts = new Map();\n\t\tlet selected = null;\n\n\t\tObject.keys(props.parts).forEach((name, index) => {\n\t\t\tconst count = props.parts[name];\n\n\t\t\tparts.set(name, count);\n\t\t\tif (index === 0) {\n\t\t\t\tselected = name;\n\t\t\t}\n\t\t});\n\n\t\tthis.state = {\n\t\t\tparts,\n\t\t\tselected,\n\t\t};\n\t}\n\n\t/**\n\t *  panel上にblockを追加する\n\t *  @param {string} blockName - 追加するblock名\n\t *  @return {undefined}\n\t */\n\tpush(blockName) {\n\t\tlet currentCount = 0;\n\n\t\tif (this.state.parts.has(blockName)) {\n\t\t\tcurrentCount = this.state.parts.get(blockName);\n\t\t}\n\n\t\tif (currentCount !== null) {\t// null means infinity\n\t\t\tthis.state.parts.set(blockName, currentCount + 1);\n\t\t\tthis.setState({parts: this.state.parts});\n\t\t}\n\t}\n\n\t/**\n\t *  panel上のblockを減らす\n\t *  @param {string} blockName - 消費するblock名\n\t *  @return {undefined}\n\t */\n\ttake(blockName) {\n\t\tassert(this.state.parts.has(blockName), 'try to take non-existent block');\n\n\t\tconst currentCount = this.state.parts.get(blockName);\n\n\t\tif (currentCount !== null) {\t// null means infinity\n\t\t\tassert(currentCount > 0, 'the block isn\\'t remaining');\n\n\t\t\tif (currentCount - 1 === 0) { // take the last block\n\t\t\t\tthis.setState({selected: null});\n\n\t\t\t\tthis.state.parts.delete(blockName);\n\t\t\t} else {\n\t\t\t\tthis.state.parts.set(blockName, currentCount - 1);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tparts: this.state.parts,\n\t\t\t});\n\t\t}\n\t}\n\n\thandleClickBlock = (event) => {\n\t\tthis.setState({\n\t\t\tselected: event.target.getAttribute('data-type'),\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t{Array.from(this.state.parts).map(([name, count]) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={name}\n\t\t\t\t\t\tclassName=\"block\"\n\t\t\t\t\t\tonClick={this.handleClickBlock}\n\t\t\t\t\t\tdata-type={name}\n\t\t\t\t\t\t{...(\n\t\t\t\t\t\t\tthis.state.selected === name ? {'data-selected': 'data-selected'} : {}\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"count\">\n\t\t\t\t\t\t\t{count === null ? '∞' : count}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nmodule.exports = PanelComponent;\n\n\n\n// WEBPACK FOOTER //\n// lib/panel-component.jsx","require! {\n  chai\n  'chai-things'\n  mathjs # as reference implementation\n  seedrandom\n  'core-js'\n  '../../stages/calc03'\n  '../../stages/conditional01'\n  '../../stages/conditional02'\n  '../../stages/conditional03'\n  '../../stages/factorial'\n  '../../stages/parity'\n  '../../stages/fibonacci'\n  '../../stages/power-hard'\n  '../../stages/gcd'\n  '../../stages/lcm'\n  '../../stages/sqrt-easy'\n  '../../stages/sqrt-hard'\n  '../../stages/msd'\n  '../../stages/mod3-hard'\n  '../../stages/the-fifth-max'\n  '../../stages/repeat-self'\n  '../../stages/fibonacci-hard'\n  '../../stages/factorization'\n  '../../stages/spaceship'\n  '../../stages/10000th-digit': ten-thousandth-digit\n}\n\nchai.use chai-things\n\n{expect} = chai\n\nIt = global.it\n\nzip = (array-A, array-B) ->\n  Array.from {length: Math.min array-A.length, array-B.length}, (item, index) ->\n    [array-A[index], array-B[index]]\n\nintegrality = (n) ->\n  | typeof! n is \\Number => Number.is-integer n\n  | typeof! n is \\Array => n.every integrality\n  | otherwise => false\n\nio-spec = ({input, output}) ->\n  expect input .to.be.an \\array\n  expect output .to.be.an \\array\n\n  # Uniqueness of input\n  unique-input = Array.from new Set input\n  expect input .to.deep.equal unique-input\n\n  expect input .to.all.satisfy integrality\n  expect output .to.all.satisfy integrality\n\n  expect input .to.have.length output.length\n\nio-spec-seq = ({input, output}) ->\n  expect {input, output} .to.satisfy io-spec\n\n  expect input .to.all.satisfy (i) ->\n    expect i .to.be.an \\array .that.has.length-of 2\n    expect i.1 .to.be.an \\array .that.has.length-of i.0\n\nsum-of-digits = (n) -> n.to-string!split '' .map (parse-int _, 10) .reduce (+)\n\nfibonacci-calc = (n, value = 1, prev = 0) ->\n  if n is 0 then prev else fibonacci-calc n - 1, value + prev, value\n\nconditional1-calc = (x) ->\n  if x % 2 is 0 then 2 * x else 3 * x\n\nconditional2-calc = (x) ->\n  if x is 5\n    10\n  else if x is 6\n    18\n  else x\n\nfactorization-calc = (n) ->\n  for i from 2 to n - 1\n    if n % i is 0\n      return i\n  0\n\nspaceship-calc = (a, b) -> Math.sign a - b\n\nten-thousandth-digit-calc = (n) ->\n  mathjs.config precision: 20000\n  x = mathjs.divide mathjs.bignumber(1), mathjs.bignumber(n)\n  return x.to-string!split '.' .1.9999 |> parse-int\n\ndescribe 'Stage Data' ->\n  before-each ->\n    @random = seedrandom ''\n\n  describe 'calc03 stage' ->\n    It 'generates multiply of 6' ->\n      io = calc03.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        6 * input is output\n\n      expect io.input.0 .to.equal 1\n      expect io.input.1 .to.equal 3\n\n  describe 'conditional01 stage' ->\n    It 'generates 2x if even, 3x otherwise' ->\n      io = conditional01.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is conditional1-calc input\n\n      expect io.input.0 .to.equal 5\n      expect io.input.1 .to.equal -10\n      expect io.input.2 .to.be.below 200\n      expect io.input.3 .to.be.below 200\n\n  describe 'conditional02 stage' ->\n    It 'generates 2*5 if 5, 3*6 else if 6, 1 otherwise' ->\n      io = conditional02.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is conditional2-calc input\n\n      expect io.input.0 .to.equal 5\n      expect io.input.1 .to.equal 6\n      expect io.input.2 .to.be.below 200\n      expect io.input.3 .to.be.below 200\n\n  describe 'conditional03 stage' ->\n    It 'generates two addition in modulo 7' ->\n      io = conditional03.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is (input + 2) % 7\n\n      expect io.input.0 .to.equal 5\n      expect io.input.1 .to.equal 3\n      expect io.input.2 .to.be.below 200\n      expect io.input.3 .to.be.below 200\n      expect io.input.4 .to.be.below 200\n\n  describe 'factorial stage' ->\n    It 'generates factorials' ->\n      io = factorial.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is mathjs.factorial input\n\n      expect io.input.3 .to.equal 15\n\n  describe 'parity stage' ->\n    It 'generates parities' ->\n      io = parity.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        sum-of-digits(input) % 10 is output\n\n      expect sum-of-digits io.input.0 .to.be.below 10\n      expect sum-of-digits io.input.1 .to.be.least 10 .and.below 20\n      expect sum-of-digits io.input.2 .to.be.least 20\n\n  describe 'fibonacci stage' ->\n    It 'generates fibonaccis' ->\n      io = fibonacci.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is fibonacci-calc input\n\n      expect io.input.3 .to.equal 20\n\n  describe 'power-hard stage' ->\n    It 'generates powers' ->\n      io = power-hard.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is Math.pow input.0, input.1\n\n      # TODO: test input.0 ond input.1\n      expect io.input.2 .to.deep.equal [2, 35]\n\n  describe 'gcd stage' ->\n    It 'generates GCDs' ->\n      io = gcd.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is mathjs.gcd input.0, input.1\n\n      expect io.input.3 .to.deep.equal [56, 1275]\n\n  describe 'lcm stage' ->\n    It 'generates LCMs' ->\n      io = lcm.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is mathjs.lcm input.0, input.1\n\n      expect io.input.3 .to.deep.equal [450, 756]\n\n  describe 'sqrt-easy stage' ->\n    It 'generates square roots' ->\n      io = sqrt-easy.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        input is output ** 2\n\n      expect io.output.0 .to.be.least 2 .and.most 14\n      expect io.output.1 .to.be.least 2 .and.most 14\n      expect io.output.2 .to.be.least 2 .and.most 14\n      expect io.output.3 .to.equal 15\n\n  describe 'sqrt-hard stage' ->\n    It 'generates hard square roots' ->\n      io = sqrt-hard.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        input is output ** 2\n\n      expect io.output.0 .to.equal 3\n      expect io.output.1 .to.be.least 10 .and.below 100\n      expect io.output.2 .to.be.least 1000 .and.below 5000\n      expect io.output.3 .to.equal 5103\n\n  describe 'msd stage' ->\n    It 'generates MSDs' ->\n      io = msd.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is parse-int input.to-string!0\n\n      expect io.input.2 .to.equal 0\n      expect io.input.3 .to.equal 123456789\n\n  describe 'mod3-hard stage' ->\n    It 'generates moduloes of 3' ->\n      io = mod3-hard.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is input % 3\n\n      expect io.input.0 .to.be.least 10000000 .and.below 90000000\n      expect io.input.1 .to.be.least 10000000 .and.below 90000000\n      expect io.input.2 .to.be.least 10000000 .and.below 90000000\n      expect io.input.3 .to.be.least 10000000 .and.below 90000000\n      expect io.input.4 .to.be.least 99990000 .and.below 100000000\n\n      expect io.output.0 .to.equal 0\n      expect io.output.1 .to.equal 1\n      expect io.output.2 .to.equal 2\n\n  describe 'the-fifth-max stage' ->\n    It 'generates medians' ->\n      io = the-fifth-max.io-generator @random\n\n      expect io .to.satisfy io-spec-seq\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is mathjs.median input.1 and input.1.filter (is output) .length is 1\n\n      expect io.input.0 .to.deep.equal [5, [1, 2, 3, 4, 5]]\n\n      expect io.input.1.0 .to.equal 5\n      expect io.input.2.0 .to.equal 7\n      expect io.input.3.0 .to.equal 7\n      expect io.input.4.0 .to.equal 7\n\n      expect io.input.4.1.6 .to.equal mathjs.median io.input.4.1\n\n  describe 'repeat-self stage' ->\n    It 'generates valid io' ->\n      io = repeat-self.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is (input.to-string!repeat input |> parse-int)\n\n      expect io.input.0 .to.equal 1\n      expect io.input.3 .to.equal 9\n\n  describe 'fibonacci-hord stage' ->\n    It 'generates fibonaccis' ->\n      io = fibonacci-hard.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is fibonacci-calc input\n\n      expect io.input.3 .to.equal 30\n\n  describe 'factorization stage' ->\n    It 'generates factorization' ->\n      io = factorization.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is factorization-calc input\n\n      expect io.input.3 .to.equal 211\n      expect io.input.4 .to.equal 221\n\n  describe 'spaceship stage' ->\n    It 'generates spaceship' ->\n      io = spaceship.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        output is spaceship-calc ...input\n\n      expect io.output.0 .to.equal 0\n      expect io.output.1 .to.equal -1\n      expect io.output.2 .to.equal 1\n\n  describe '10000th-digit stage' ->\n    It 'generates 10000th-digit' ->\n      io = ten-thousandth-digit.io-generator @random\n\n      expect io .to.satisfy io-spec\n\n      # Uniqueness of output\n      unique-output = Array.from new Set io.output\n      expect io.output .to.deep.equal unique-output\n\n      expect zip io.input, io.output .to.all.satisfy ([input, output]) ->\n        mathjs.is-prime input\n        and output is ten-thousandth-digit-calc input\n\n      expect io.input.4 .to.equal 107\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/tsg-ut/mnemo/test/unit/stages.ls","module.exports = require(\"chai-things\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai-things\"\n// module id = 58\n// module chunks = 0","module.exports = require(\"mathjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mathjs\"\n// module id = 59\n// module chunks = 0","require! {\n  chai: {expect}\n  '../../lib/util': {\n    translate-date-from-unix-time,\n  }\n}\n\nIt = global.it\n\ndescribe 'util' ->\n  describe 'translateDateFromUnixTime' ->\n    It 'translates unixtime to YYYY-MM-DD hh:mm:ss' ->\n      offset = new Date!get-timezone-offset! * 60 * 1000\n\n      # https://ja.wikipedia.org/wiki/UNIX%E6%99%82%E9%96%93#UNIX.E6.99.82.E5.88.BB.E3.81.AE.E8.A1.A8.E7.A4.BA.E4.BE.8B\n      expect translate-date-from-unix-time 0 + offset .to.equal '1970-01-01 00:00:00'\n      expect translate-date-from-unix-time 100000000000 + offset .to.equal '1973-03-03 09:46:40'\n      expect translate-date-from-unix-time 1000000000000 + offset .to.equal '2001-09-09 01:46:40'\n      expect translate-date-from-unix-time 1234567890000 + offset .to.equal '2009-02-13 23:31:30'\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/tsg-ut/mnemo/test/unit/util.ls","require! {\n  chai: {expect}\n  '../../lib/validator': {validate-submission}\n}\n\nIt = global.it\n\nfails = (expected-message, input-data) ->\n  It \"fails when #expected-message\" ->\n    inputs =\n      if Array.is-array input-data\n        input-data\n      else\n        [input-data]\n\n    for input in inputs\n      {pass, message} = validate-submission input\n      expect pass .to.be.false\n      expect message .to.equal expected-message\n\ndescribe 'validator' ->\n  describe '.validatorSubmission' ->\n\n    fails 'stage data is missing' {}\n\n    fails 'stage data is invalid' do\n      stage: 'blahblah'\n\n    fails 'board should be an array' [\n      * stage: 'wire01'\n        board: null\n      * stage: 'wire01'\n        board: 42\n      * stage: 'wire01'\n        board: 'hogehoge'\n    ]\n\n    fails 'board must at least have one block' [\n      * stage: 'wire01'\n        board: []\n    ]\n\n    fails 'keys of block 0 are invalid' [\n      * stage: 'wire01'\n        board: [{}]\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            hoge: 'fuga'\n            ...\n    ]\n\n    fails 'x position of block 0 should be an integer' [\n      * stage: 'wire01'\n        board:\n          * x: null\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 'hoge'\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0.1\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: Infinity\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            ...\n    ]\n\n    fails 'x position of block 0 exceeds the board size' [\n      * stage: 'wire01'\n        board:\n          * x: -1\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 3\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 100\n            y: 0\n            type: 'wireI'\n            rotate: 0\n            ...\n    ]\n\n    fails 'y position of block 0 should be an integer' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: null\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 'hoge'\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0.1\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: Infinity\n            type: 'wireI'\n            rotate: 0\n            ...\n    ]\n\n    fails 'y position of block 0 exceeds the board size' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: -1\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 3\n            type: 'wireI'\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 100\n            type: 'wireI'\n            rotate: 0\n            ...\n    ]\n\n    fails 'type of block 0 should be a string' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: null\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 42\n            rotate: 0\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: []\n            rotate: 0\n            ...\n    ]\n\n    fails 'type of block 0 is unknown' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'hoge'\n            rotate: 0\n            ...\n    ]\n\n    fails 'rotation of block 0 should be an integer' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: null\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: 'hoge'\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: 0.1\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: Infinity\n            ...\n    ]\n\n    fails 'rotation of block 0 is invalid' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: -1\n            ...\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: 4\n            ...\n    ]\n\n    fails 'positions of blocks are not unique' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: 0\n      * stage: 'wire01'\n        board:\n          * x: 2\n            y: 2\n            type: 'wireI'\n            rotate: 0\n          * x: 0\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 2\n            y: 2\n            type: 'wireI'\n            rotate: 0\n    ]\n\n    fails 'used blocks are not matching to the stage' [\n      * stage: 'wire01'\n        board:\n          * x: 0\n            y: 0\n            type: 'times-2'\n            rotate: 0\n            ...\n      * stage: 'calc05'\n        board:\n          * x: 0\n            y: 0\n            type: 'times-2'\n            rotate: 0\n          * x: 0\n            y: 1\n            type: 'times-2'\n            rotate: 0\n    ]\n\n    fails 'the board cannot clear the stage' [\n      # Wire is cut\n      * stage: 'wire01'\n        board:\n          * x: 1\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 0\n            y: 1\n            type: 'wireI'\n            rotate: 0\n          * x: 1\n            y: 2\n            type: 'wireI'\n            rotate: 0\n      # Rotation is not correct\n      * stage: 'wire01'\n        board:\n          * x: 1\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 1\n            y: 1\n            type: 'wireI'\n            rotate: 1\n          * x: 1\n            y: 2\n            type: 'wireI'\n            rotate: 0\n      # Output is incorrect\n      * stage: 'calc01'\n        board:\n          * x: 1\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 1\n            y: 1\n            type: 'wireI'\n            rotate: 0\n          * x: 1\n            y: 2\n            type: 'wireI'\n            rotate: 0\n      # Endless\n      * stage: 'calc01'\n        board:\n          * x: 0\n            y: 0\n            type: 'wireL'\n            rotate: 1\n          * x: 1\n            y: 0\n            type: 'wireT'\n            rotate: 3\n          * x: 0\n            y: 1\n            type: 'wireL'\n            rotate: 0\n          * x: 1\n            y: 1\n            type: 'wireL'\n            rotate: 3\n      # Can even pass a test case, but not all\n      * stage: 'calc03'\n        board:\n          * x: 2\n            y: 0\n            type: 'plus-1'\n            rotate: 0\n          * x: 2\n            y: 1\n            type: 'plus-1'\n            rotate: 0\n          * x: 2\n            y: 2\n            type: 'plus-1'\n            rotate: 0\n          * x: 2\n            y: 3\n            type: 'plus-1'\n            rotate: 0\n          * x: 2\n            y: 4\n            type: 'plus-1'\n            rotate: 0\n    ]\n\n    It 'passes if the correct board is given' ->\n      {pass, message, blocks, clocks} = validate-submission do\n        stage: 'wire01'\n        board:\n          * x: 1\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 1\n            y: 1\n            type: 'wireI'\n            rotate: 0\n          * x: 1\n            y: 2\n            type: 'wireI'\n            rotate: 0\n\n      expect pass .to.be.true\n      expect message .to.be.undefined\n      expect blocks .to.equal 3\n      expect clocks .to.equal 3\n\n      {pass, message, blocks, clocks} = validate-submission do\n        stage: 'calc01'\n        board:\n          * x: 1\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 1\n            y: 1\n            type: 'times-2'\n            rotate: 0\n          * x: 1\n            y: 2\n            type: 'wireI'\n            rotate: 0\n\n      expect pass .to.be.true\n      expect message .to.be.undefined\n      expect blocks .to.equal 4\n      expect clocks .to.equal 3\n\n    It 'supports dynamically generated test cases' ->\n      {pass, message, blocks, clocks} = validate-submission do\n        stage: 'calc03'\n        board:\n          * x: 2\n            y: 0\n            type: 'wireI'\n            rotate: 0\n          * x: 2\n            y: 1\n            type: 'times-2'\n            rotate: 0\n          * x: 2\n            y: 2\n            type: 'wireI'\n            rotate: 0\n          * x: 2\n            y: 3\n            type: 'times-3'\n            rotate: 0\n          * x: 2\n            y: 4\n            type: 'wireI'\n            rotate: 0\n\n      expect pass .to.be.true\n      expect message .to.be.undefined\n      expect blocks .to.equal 7\n      expect clocks .to.equal 5\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/tsg-ut/mnemo/test/unit/validator.ls","const assert = require('assert');\nconst blockConfigs = require('./block-configs');\nconst stages = require('../stages');\nconst Board = require('./board');\nconst {arrayEquals, zip} = require('./util');\n\nconst blockNames = Object.keys(blockConfigs);\n\n// https://github.com/tsg-ut/mnemo/wiki/%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E4%BB%95%E6%A7%98#%E8%A8%88%E7%AE%97%E5%BC%8F\nmodule.exports.calculateScore = ({clocks: C, blocks: B, stage}) => {\n\tconst {clockLimit: C_L, width: W, height: H} = stage;\n\n\tconst P_C = Math.floor(500 * Math.exp(2 * (H - C) / (C_L - 2 * H) * Math.log(5 / 2))) * 10;\n\tconst P_B = Math.floor(500 * Math.exp((H - B) / (H * (W - 1)) * Math.log(5 / 2))) * 10;\n\n\treturn P_C + P_B;\n};\n\nmodule.exports.validateSubmission = (submission) => {\n\tif (typeof submission.stage !== 'string') {\n\t\treturn {pass: false, message: 'stage data is missing'};\n\t}\n\n\tconst stage = stages.find((s) => s.name === submission.stage);\n\n\tif (typeof stage !== 'object') {\n\t\treturn {pass: false, message: 'stage data is invalid'};\n\t}\n\n\tif (!Array.isArray(submission.board)) {\n\t\treturn {pass: false, message: 'board should be an array'};\n\t}\n\n\tif (submission.board.length === 0) {\n\t\treturn {pass: false, message: 'board must at least have one block'};\n\t}\n\n\tlet error = null;\n\n\tsubmission.board.forEach((block, index) => {\n\t\tconst message = (() => {\n\t\t\tif (!arrayEquals(Object.keys(block), ['x', 'y', 'type', 'rotate'])) {\n\t\t\t\treturn `keys of block ${index} are invalid`;\n\t\t\t}\n\n\t\t\tif (!Number.isInteger(block.x)) {\n\t\t\t\treturn `x position of block ${index} should be an integer`;\n\t\t\t}\n\n\t\t\tif (block.x < 0 || stage.width <= block.x) {\n\t\t\t\treturn `x position of block ${index} exceeds the board size`;\n\t\t\t}\n\n\t\t\tif (!Number.isInteger(block.y)) {\n\t\t\t\treturn `y position of block ${index} should be an integer`;\n\t\t\t}\n\n\t\t\tif (block.y < 0 || stage.height <= block.y) {\n\t\t\t\treturn `y position of block ${index} exceeds the board size`;\n\t\t\t}\n\n\t\t\tif (typeof block.type !== 'string') {\n\t\t\t\treturn `type of block ${index} should be a string`;\n\t\t\t}\n\n\t\t\tif (!blockNames.includes(block.type)) {\n\t\t\t\treturn `type of block ${index} is unknown`;\n\t\t\t}\n\n\t\t\tif (!Number.isInteger(block.rotate)) {\n\t\t\t\treturn `rotation of block ${index} should be an integer`;\n\t\t\t}\n\n\t\t\tif (block.rotate < 0 || 4 <= block.rotate) {\n\t\t\t\treturn `rotation of block ${index} is invalid`;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t})();\n\n\t\tif (message !== null) {\n\t\t\terror = message;\n\t\t}\n\t});\n\n\tif (error) {\n\t\treturn {pass: false, message: error};\n\t}\n\n\t// Validate uniqueness of the block positions\n\tconst positions = new Set();\n\tsubmission.board.forEach((block) => {\n\t\tconst index = block.y * stage.width + block.x;\n\t\tpositions.add(index);\n\t});\n\n\tif (positions.size !== submission.board.length) {\n\t\treturn {pass: false, message: 'positions of blocks are not unique'};\n\t}\n\n\t// Validate if the only usable blocks are used\n\tconst blockCounts = new Map();\n\tsubmission.board.forEach((block) => {\n\t\tif (blockCounts.has(block.type)) {\n\t\t\tblockCounts.set(block.type, blockCounts.get(block.type) + 1);\n\t\t} else {\n\t\t\tblockCounts.set(block.type, 1);\n\t\t}\n\t});\n\n\tfor (const [type, count] of blockCounts.entries()) {\n\t\tif (!{}.hasOwnProperty.call(stage.parts, type)) {\n\t\t\treturn {pass: false, message: 'used blocks are not matching to the stage'};\n\t\t}\n\n\t\tconst allowedCount = stage.parts[type];\n\n\t\tif (allowedCount !== null && count > allowedCount) {\n\t\t\treturn {pass: false, message: 'used blocks are not matching to the stage'};\n\t\t}\n\t}\n\n\t// Validate if this passes test cases\n\n\tconst board = new Board({\n\t\twidth: stage.width,\n\t\theight: stage.height,\n\t\tinputX: stage.inputX,\n\t\toutputX: stage.outputX,\n\t\tclockLimit: stage.clockLimit,\n\t});\n\n\tsubmission.board.forEach((block) => {\n\t\tboard.placeBlock(block);\n\t});\n\n\tlet maxClock = 0;\n\n\tconst {inputs, outputs} = (() => {\n\t\tif (stage.ioGenerator) {\n\t\t\tconst random = board.getSeededRandom();\n\t\t\tconst {input, output} = stage.ioGenerator(random);\n\t\t\tassert(Array.isArray(input));\n\t\t\tassert(Array.isArray(output));\n\n\t\t\treturn {\n\t\t\t\tinputs: input,\n\t\t\t\toutputs: output,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tinputs: stage.input,\n\t\t\toutputs: stage.output,\n\t\t};\n\t})();\n\n\tfor (const [input, output] of zip(inputs, outputs)) {\n\t\tboard.run(input);\n\n\t\tif (board.outputValue !== output) {\n\t\t\treturn {pass: false, message: 'the board cannot clear the stage'};\n\t\t}\n\n\t\tmaxClock = Math.max(maxClock, board.clock);\n\t}\n\n\treturn {pass: true, clocks: maxClock, blocks: board.weighedBlockCount};\n};\n\n\n\n// WEBPACK FOOTER //\n// lib/validator.js","/* eslint global-require: 'off' */\n\nconst {normalizeStageInput} = require('../lib/util');\n\nconst stages = [\n\trequire('./wire01.js'),\n\trequire('./calc01.js'),\n\trequire('./calc02.js'),\n\trequire('./calc03.js'),\n\trequire('./calc04.js'),\n\trequire('./calc05.js'),\n\trequire('./calc06.js'),\n\trequire('./make-minus-one-easy.js'),\n\trequire('./division-easy.js'),\n\trequire('./sixth-power.js'),\n\trequire('./remainder.js'),\n\trequire('./plus-32.js'),\n\trequire('./conditional01.js'),\n\trequire('./conditional02.js'),\n\trequire('./conditional03.js'),\n\trequire('./factorial.js'),\n\trequire('./parity.js'),\n\trequire('./fibonacci.js'),\n\trequire('./bivariation01.js'),\n\trequire('./power-easy.js'),\n\trequire('./power-hard.js'),\n\trequire('./division-hard.js'),\n\trequire('./gcd.js'),\n\trequire('./lcm.js'),\n\trequire('./make-minus-one-med.js'),\n\trequire('./make-minus-one-hard.js'),\n\trequire('./sqrt-easy.js'),\n\trequire('./sqrt-hard.js'),\n\trequire('./complement-of-2.js'),\n\trequire('./binarian-easy.js'),\n\trequire('./perfect-number.js'),\n\trequire('./reversal.js'),\n\trequire('./msd.js'),\n\trequire('./mod3-hard.js'),\n\trequire('./seq01.js'),\n\trequire('./seq02.js'),\n\trequire('./max.js'),\n\trequire('./the-fifth-max.js'),\n\trequire('./100.js'),\n\trequire('./100-again.js'),\n\trequire('./1000.js'),\n\trequire('./plus-32-hard.js'),\n\trequire('./xor.js'),\n\trequire('./2017.js'),\n\trequire('./repeat-self.js'),\n\trequire('./fibonacci-hard.js'),\n\trequire('./factorization.js'),\n\trequire('./spaceship.js'),\n\trequire('./addition-med.js'),\n\trequire('./10000th-digit.js'),\n];\n\n// Normalize stage data\nmodule.exports = stages.map((stage) => {\n\tif (!Array.isArray(stage.inputX)) {\n\t\tstage.inputX = [stage.inputX];\n\t}\n\n\tstage.input = normalizeStageInput(stage.input);\n\n\treturn stage;\n});\n\n\n\n// WEBPACK FOOTER //\n// stages/index.js","module.exports = {\n\tname: 'wire01',\n\tversion: 4,\n\tparts: {\n\t\twireI: null,\n\t},\n\tinputX: 1,\n\toutputX: 1,\n\tinput: [\n\t\t10,\n\t],\n\toutput: [\n\t\t10,\n\t],\n\twidth: 3,\n\theight: 3,\n\tclockLimit: 10,\n\tstatement: '入り口と出口をつなげてみよう!',\n\ttitle: '練習',\n\tmodal: '01',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/wire01.js","module.exports = {\n\tname: 'calc01',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-2': null,\n\t},\n\tinputX: 1,\n\toutputX: 1,\n\tinput: [\n\t\t8,\n\t\t3,\n\t\t9,\n\t],\n\toutput: [\n\t\t16,\n\t\t6,\n\t\t18,\n\t],\n\twidth: 3,\n\theight: 3,\n\tclockLimit: 10,\n\tstatement: '数を2倍してみよう!',\n\ttitle: '四則演算 -基本- 1',\n\tmodal: '02',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/calc01.js","module.exports = {\n\tname: 'calc02',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'plus-1': null,\n\t\t'minus-2': null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t8,\n\t\t15,\n\t\t10,\n\t],\n\toutput: [\n\t\t5,\n\t\t12,\n\t\t7,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '数を3引いてみよう!',\n\ttitle: '四則演算 -基本- 2',\n\tmodal: '03',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/calc02.js","module.exports = {\n\tname: 'calc04',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-2': null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t8,\n\t\t3,\n\t\t9,\n\t],\n\toutput: [\n\t\t19,\n\t\t9,\n\t\t21,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '数を2倍して、3足してみよう!',\n\ttitle: '四則演算 -基本- 4',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/calc04.js","module.exports = {\n\tname: 'calc05',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\t'times-2': 1,\n\t\t'plus-1': 1,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t8,\n\t\t5,\n\t\t3,\n\t],\n\toutput: [\n\t\t18,\n\t\t12,\n\t\t8,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '数を2倍して、2足してみよう!',\n\ttitle: '四則演算 -基本- 5',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/calc05.js","module.exports = {\n\tname: 'calc06',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\tadd: null,\n\t},\n\tinputX: 1,\n\toutputX: 1,\n\tinput: [\n\t\t8,\n\t\t3,\n\t\t9,\n\t],\n\toutput: [\n\t\t16,\n\t\t6,\n\t\t18,\n\t],\n\twidth: 3,\n\theight: 2,\n\tclockLimit: 10,\n\tstatement: '数を2倍してみよう!',\n\ttitle: '四則演算 -基本- 6',\n\tmodal: '04',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/calc06.js","module.exports = {\n\tname: 'make-minus-one-easy',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t6,\n\t\t28,\n\t\t496,\n\t],\n\toutput: [\n\t\t-1,\n\t\t-1,\n\t\t-1,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '四則演算を組み合わせてどの入力に対しても、-1を出力するような回路を作ってみよう',\n\ttitle: '-1を作ろう -easy-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/make-minus-one-easy.js","module.exports = {\n\tname: 'division-easy',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t8,\n\t\t18,\n\t\t6,\n\t],\n\toutput: [\n\t\t4,\n\t\t9,\n\t\t3,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '➗ブロックをうまく使って、数を2で割ってみよう!',\n\ttitle: '割り算 -easy-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/division-easy.js","module.exports = {\n\tname: 'sixth-power',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t2,\n\t\t3,\n\t\t5,\n\t],\n\toutput: [\n\t\t64,\n\t\t729,\n\t\t15625,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '✖️ブロックをうまく配置して、6乗を計算してみよう!',\n\ttitle: '6乗',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/sixth-power.js","module.exports = {\n\tname: 'remainder',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t8,\n\t\t13,\n\t\t39,\n\t],\n\toutput: [\n\t\t8,\n\t\t3,\n\t\t9,\n\t],\n\twidth: 5,\n\theight: 10,\n\tclockLimit: 50,\n\tstatement: '10で割った余りを求めてみよう!',\n\ttitle: '余りの計算',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/remainder.js","module.exports = {\n\tname: 'plus-32',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t6,\n\t\t28,\n\t\t496,\n\t],\n\toutput: [\n\t\t38,\n\t\t60,\n\t\t528,\n\t],\n\twidth: 5,\n\theight: 8,\n\tclockLimit: 50,\n\tstatement: '演算子をうまく配置して、32を足してみよう!',\n\ttitle: '32を足してみよう',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/plus-32.js","module.exports = {\n\tname: 'bivariation01',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [\n\t\t1,\n\t\t3,\n\t],\n\toutputX: 2,\n\tinput: [\n\t\t[\n\t\t\t3,\n\t\t\t2,\n\t\t],\n\t\t[\n\t\t\t13,\n\t\t\t21,\n\t\t],\n\t\t[\n\t\t\t9,\n\t\t\t4,\n\t\t],\n\t],\n\toutput: [\n\t\t5,\n\t\t34,\n\t\t13,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '2つの数字が与えられるのでそれらを足しあわせた結果を出力してみよう!',\n\ttitle: '2変数 -基本-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/bivariation01.js","module.exports = {\n\tname: 'power-easy',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [\n\t\t3,\n\t\t5,\n\t],\n\toutputX: 4,\n\tinput: [\n\t\t[\n\t\t\t3,\n\t\t\t2,\n\t\t],\n\t\t[\n\t\t\t4,\n\t\t\t4,\n\t\t],\n\t\t[\n\t\t\t-7,\n\t\t\t5,\n\t\t],\n\t],\n\toutput: [\n\t\t9,\n\t\t256,\n\t\t-16807,\n\t],\n\twidth: 9,\n\theight: 9,\n\tclockLimit: 200,\n\tstatement: '1つ目に与えられた数を2つ目に与えられた数乗してみよう!',\n\ttitle: '累乗 -easy-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/power-easy.js","module.exports = {\n\tname: 'division-hard',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t},\n\tinputX: [\n\t\t1,\n\t\t3,\n\t],\n\toutputX: 2,\n\tinput: [\n\t\t[\n\t\t\t3,\n\t\t\t6,\n\t\t],\n\t\t[\n\t\t\t71,\n\t\t\t7597,\n\t\t],\n\t\t[\n\t\t\t-13,\n\t\t\t117,\n\t\t],\n\t],\n\toutput: [\n\t\t2,\n\t\t107,\n\t\t-9,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '右の数を左の数で割ってみよう!',\n\ttitle: '割り算 -hard-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/division-hard.js","module.exports = {\n\tname: 'make-minus-one-med',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t-1,\n\t\t-2,\n\t\t-3,\n\t],\n\toutput: [\n\t\t-1,\n\t\t-1,\n\t\t-1,\n\t],\n\twidth: 5,\n\theight: 10,\n\tclockLimit: 50,\n\tstatement: 'より少ない演算子で入力全てを-1に出力する回路を作ろう（一般的でなく、入力全てさえ正解すれば良い）',\n\ttitle: '-1を作ろう -med-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/make-minus-one-med.js","module.exports = {\n\tname: 'make-minus-one-hard',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'plus-1': null,\n\t\tequal: null,\n\t\tadd: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 3,\n\toutputX: 3,\n\tinput: [\n\t\t3,\n\t\t5,\n\t\t2,\n\t],\n\toutput: [\n\t\t2,\n\t\t4,\n\t\t1,\n\t],\n\twidth: 7,\n\theight: 9,\n\tclockLimit: 500,\n\tstatement: '入力の値から1引いた値を出力してみよう!',\n\ttitle: '-1を作ろう -hard-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/make-minus-one-hard.js","module.exports = {\n\tname: 'complement-of-2',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 3,\n\toutputX: 3,\n\tinput: [\n\t\t1,\n\t\t64,\n\t\t127,\n\t],\n\toutput: [\n\t\t255,\n\t\t192,\n\t\t129,\n\t],\n\twidth: 7,\n\theight: 7,\n\tclockLimit: 50,\n\tstatement: '8bitの2の補数を計算してみよう!',\n\ttitle: '2の補数',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/complement-of-2.js","module.exports = {\n\tname: 'binarian-easy',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 7,\n\toutputX: 7,\n\tinput: [\n\t\t3,\n\t\t2016,\n\t\t65535,\n\t],\n\toutput: [\n\t\t11,\n\t\t11111100000,\n\t\t1111111111111111,\n\t],\n\twidth: 15,\n\theight: 15,\n\tclockLimit: 500,\n\tstatement: '数をバイナリ表記にしてみよう!',\n\ttitle: 'バイナリアン -easy-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/binarian-easy.js","module.exports = {\n\tname: 'perfect-number',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t3,\n\t\t31,\n\t\t8191,\n\t],\n\toutput: [\n\t\t6,\n\t\t496,\n\t\t33550336,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 100,\n\tstatement: 'メルセンヌ素数と完全数の関係を考えてみよう!',\n\ttitle: '完全数',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/perfect-number.js","module.exports = {\n\tname: 'reversal',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\t'minus-1': null,\n\t\t'minus-2': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tmod: null,\n\t\tpow: null,\n\t\t'bitshift-left': null,\n\t\t'bitshift-right': null,\n\t\t'bitwise-and': null,\n\t\t'bitwise-or': null,\n\t\t'bitwise-xor': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: 7,\n\toutputX: 7,\n\tinput: [\n\t\t2016,\n\t\t111111,\n\t\t123456789,\n\t],\n\toutput: [\n\t\t6102,\n\t\t111111,\n\t\t987654321,\n\t],\n\twidth: 15,\n\theight: 15,\n\tclockLimit: 500,\n\tstatement: '数を反転してみよう!',\n\ttitle: '反転',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/reversal.js","module.exports = {\n\tname: 'seq01',\n\tversion: 1,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'const-0': null,\n\t\t'minus-1': null,\n\t\tadd: null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [\n\t\t4,\n\t\t6,\n\t],\n\toutputX: 5,\n\tinput: [\n\t\t[\n\t\t\t3,\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t2,\n\t\t\t\t3,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t4,\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t2,\n\t\t\t\t1,\n\t\t\t\t3,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t10,\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t11,\n\t\t\t\t85,\n\t\t\t\t53,\n\t\t\t\t14,\n\t\t\t\t96,\n\t\t\t\t88,\n\t\t\t\t61,\n\t\t\t\t21,\n\t\t\t\t57,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t30,\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t23,\n\t\t\t\t43,\n\t\t\t\t48,\n\t\t\t\t2,\n\t\t\t\t7,\n\t\t\t\t16,\n\t\t\t\t69,\n\t\t\t\t16,\n\t\t\t\t3,\n\t\t\t\t41,\n\t\t\t\t3,\n\t\t\t\t17,\n\t\t\t\t39,\n\t\t\t\t98,\n\t\t\t\t65,\n\t\t\t\t77,\n\t\t\t\t52,\n\t\t\t\t89,\n\t\t\t\t31,\n\t\t\t\t37,\n\t\t\t\t49,\n\t\t\t\t15,\n\t\t\t\t46,\n\t\t\t\t2,\n\t\t\t\t53,\n\t\t\t\t74,\n\t\t\t\t83,\n\t\t\t\t8,\n\t\t\t\t93,\n\t\t\t],\n\t\t],\n\t],\n\toutput: [\n\t\t6,\n\t\t9,\n\t\t554,\n\t\t1225,\n\t],\n\twidth: 11,\n\theight: 11,\n\tclockLimit: 500,\n\tstatement: '配列の値を全て足してみよう',\n\ttitle: '配列 -基本- 1',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/seq01.js","module.exports = {\n\tname: 'seq02',\n\tversion: 1,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'const-0': null,\n\t\t'minus-1': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [\n\t\t4,\n\t\t6,\n\t],\n\toutputX: 5,\n\tinput: [\n\t\t[\n\t\t\t3,\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t2,\n\t\t\t\t3,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t4,\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t2,\n\t\t\t\t1,\n\t\t\t\t3,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t10,\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t11,\n\t\t\t\t85,\n\t\t\t\t53,\n\t\t\t\t14,\n\t\t\t\t96,\n\t\t\t\t88,\n\t\t\t\t61,\n\t\t\t\t21,\n\t\t\t\t57,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t30,\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t23,\n\t\t\t\t43,\n\t\t\t\t48,\n\t\t\t\t2,\n\t\t\t\t7,\n\t\t\t\t16,\n\t\t\t\t69,\n\t\t\t\t16,\n\t\t\t\t3,\n\t\t\t\t41,\n\t\t\t\t3,\n\t\t\t\t17,\n\t\t\t\t39,\n\t\t\t\t98,\n\t\t\t\t65,\n\t\t\t\t77,\n\t\t\t\t52,\n\t\t\t\t89,\n\t\t\t\t31,\n\t\t\t\t37,\n\t\t\t\t49,\n\t\t\t\t15,\n\t\t\t\t46,\n\t\t\t\t2,\n\t\t\t\t53,\n\t\t\t\t74,\n\t\t\t\t83,\n\t\t\t\t8,\n\t\t\t\t93,\n\t\t\t],\n\t\t],\n\t],\n\toutput: [\n\t\t3,\n\t\t3,\n\t\t57,\n\t\t93,\n\t],\n\twidth: 11,\n\theight: 11,\n\tclockLimit: 500,\n\tstatement: '配列の一番最後の値を取り出してみよう!',\n\ttitle: '配列 -基本- 2',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/seq02.js","module.exports = {\n\tname: 'max',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\t'const-0': null,\n\t\t'minus-1': null,\n\t\tequal: null,\n\t\tneq: null,\n\t\tgt: null,\n\t\tgeqq: null,\n\t\tlt: null,\n\t\tleqq: null,\n\t\t'c-contact': null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [\n\t\t4,\n\t\t6,\n\t],\n\toutputX: 5,\n\tinput: [\n\t\t[\n\t\t\t3,\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t2,\n\t\t\t\t3,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t4,\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t2,\n\t\t\t\t1,\n\t\t\t\t3,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t10,\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t11,\n\t\t\t\t85,\n\t\t\t\t53,\n\t\t\t\t14,\n\t\t\t\t96,\n\t\t\t\t88,\n\t\t\t\t61,\n\t\t\t\t21,\n\t\t\t\t57,\n\t\t\t],\n\t\t],\n\t\t[\n\t\t\t30,\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t23,\n\t\t\t\t43,\n\t\t\t\t48,\n\t\t\t\t2,\n\t\t\t\t7,\n\t\t\t\t16,\n\t\t\t\t69,\n\t\t\t\t16,\n\t\t\t\t3,\n\t\t\t\t41,\n\t\t\t\t3,\n\t\t\t\t17,\n\t\t\t\t39,\n\t\t\t\t98,\n\t\t\t\t65,\n\t\t\t\t77,\n\t\t\t\t52,\n\t\t\t\t89,\n\t\t\t\t31,\n\t\t\t\t37,\n\t\t\t\t49,\n\t\t\t\t15,\n\t\t\t\t46,\n\t\t\t\t2,\n\t\t\t\t53,\n\t\t\t\t74,\n\t\t\t\t83,\n\t\t\t\t8,\n\t\t\t\t93,\n\t\t\t],\n\t\t],\n\t],\n\toutput: [\n\t\t3,\n\t\t3,\n\t\t96,\n\t\t98,\n\t],\n\twidth: 11,\n\theight: 11,\n\tclockLimit: 500,\n\tstatement: '与えられた配列の最大値を求めてみよう',\n\ttitle: '最大値',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/max.js","module.exports = {\n\tname: '100',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\tequal: null,\n\t\tadd: null,\n\t},\n\tinputX: 4,\n\toutputX: 4,\n\tinput: [\n\t\t10,\n\t\t0,\n\t\t-1,\n\t],\n\toutput: [\n\t\t100,\n\t\t100,\n\t\t100,\n\t],\n\twidth: 9,\n\theight: 8,\n\tclockLimit: 100,\n\tstatement: '100を作ろう!',\n\ttitle: '100',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/100.js","module.exports = {\n\tname: '100-again',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'const-1': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t-1,\n\t\t10,\n\t\t1,\n\t],\n\toutput: [\n\t\t100,\n\t\t100,\n\t\t100,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '100を作ろう!',\n\ttitle: '100再び',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/100-again.js","module.exports = {\n\tname: '1000',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'const-1': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tmul: null,\n\t},\n\tinputX: 2,\n\toutputX: 2,\n\tinput: [\n\t\t-1,\n\t\t10,\n\t\t1,\n\t],\n\toutput: [\n\t\t1000,\n\t\t1000,\n\t\t1000,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: '1000を作ろう!',\n\ttitle: '1000',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/1000.js","module.exports = {\n\tname: 'plus-32-hard',\n\tversion: 3,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'plus-1': null,\n\t\t'plus-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t},\n\tinputX: 1,\n\toutputX: 1,\n\tinput: [\n\t\t6,\n\t\t28,\n\t\t496,\n\t],\n\toutput: [\n\t\t38,\n\t\t60,\n\t\t528,\n\t],\n\twidth: 3,\n\theight: 6,\n\tclockLimit: 50,\n\tstatement: '演算子をうまく配置して、32を足してみよう!',\n\ttitle: '32を足してみよう-hard-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/plus-32-hard.js","module.exports = {\n\tname: 'xor',\n\tversion: 2,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\tnand: null,\n\t},\n\tinputX: [\n\t\t1,\n\t\t3,\n\t],\n\toutputX: 2,\n\tinput: [\n\t\t[\n\t\t\t0,\n\t\t\t0,\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1,\n\t\t],\n\t\t[\n\t\t\t1,\n\t\t\t0,\n\t\t],\n\t\t[\n\t\t\t1,\n\t\t\t1,\n\t\t],\n\t],\n\toutput: [\n\t\t0,\n\t\t1,\n\t\t1,\n\t\t0,\n\t],\n\twidth: 5,\n\theight: 5,\n\tclockLimit: 25,\n\tstatement: 'XORを作ろう!',\n\ttitle: 'XOR',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/xor.js","module.exports = {\n\tname: '2017',\n\tversion: 2,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\tadd: null,\n\t\tsub: null,\n\t\tmul: null,\n\t\tdiv: null,\n\t},\n\tinputX: 4,\n\toutputX: 4,\n\tinput: [2, 0, 1, 7],\n\toutput: [2017, 2017, 2017, 2017],\n\twidth: 9,\n\theight: 9,\n\tclockLimit: 50,\n\tstatement: '2017を作ろう!',\n\ttitle: '2017',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/2017.js","module.exports = {\n\tname: 'addition-med',\n\tversion: 1,\n\tparts: {\n\t\twireI: null,\n\t\twireL: null,\n\t\twireT: null,\n\t\twireX: null,\n\t\twireXdot: null,\n\t\t'times-2': null,\n\t\t'times-3': null,\n\t\t'div-2': null,\n\t\t'div-3': null,\n\t\t'const-0': null,\n\t\t'const-1': null,\n\t\t'const-2': null,\n\t\t'const-3': null,\n\t\tequal: null,\n\t\tgt: null,\n\t\tlt: null,\n\t\tdiv: null,\n\t\tmul: null,\n\t\tpow: null,\n\t\tlog: null,\n\t\tconditional: null,\n\t\ttransistor: null,\n\t\tdiode: null,\n\t},\n\tinputX: [2, 4],\n\toutputX: 3,\n\tinput: [\n\t\t[1, 2],\n\t\t[8, 3],\n\t\t[33, 4],\n\t],\n\toutput: [\n\t\t3,\n\t\t11,\n\t\t37,\n\t],\n\twidth: 7,\n\theight: 7,\n\tclockLimit: 100,\n\tstatement: '2つの正の数を足しあわせてみよう！',\n\ttitle: '足し算 -med-',\n};\n\n\n\n// WEBPACK FOOTER //\n// stages/addition-med.js"],"mappingsbA;AAcA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AAPA;AAQA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAfA;AAgBA;AACA;AACA;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAJA;AAOA;AACA;;;;;;AC7IA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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A;AAFA;AAAA;AAGA;AACA;AAlBA;AAmBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAjHA;AAkHA;AACA;AACA;AACA;AAHA;AAlHA;AAuHA;AACA;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAHA;AAKA;;;AAoBA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYA;AA7CA;AAhBA;AAmEA;;;;AAtPA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAVA;AADA;AAeoBA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AAwCA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AAQA;AAEA;AACA;AAvDA;AAwDA;AAAA;AACA;AAAA;AACA;AACA;AA3DA;AA4DA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AANA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AATA;AAUA;AAEA;AACA;AAjFA;AAkFA;AAAA;AACA;AAAA;AACA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAVA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AATA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAZA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAZA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAXA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAXA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AATA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AA7hqBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAAA;AACA;AAFA;AAeA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAhBA;AAmBA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AApBA;AAuBA;AACA;;;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAVA;AAqBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AATA;AAaA;AAbA;AA/CA;AAiEA;;;;AAlHA;AACA;AADA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;AACA;AACA;AAJA;;;;AAuGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAzCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAOA;AACA;AACA;AATA;AAUA;AAVA;AAWA;AACA;AACA;AAbA;AAcA;AACA;AAfA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAnBA;AAoBA;AACA;AAOA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAnEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAOA;AACA;AACA;AATA;AAUA;AAVA;AAWA;AACA;AACA;AAbA;AAcA;AACA;AAfA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAkBA;AAAA;AAAA;AAAA;AAAA;AACA;AAnBA;AAoBA;AACA;AAMA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AAlEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AATA;AAUA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AApBA;AAqBA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AA/BA;AAgCA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AANA;AAOA;AACA;AACA;AAzCA;AA0CA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AA9EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAXA;AAYA;AAZA;AAaA;AACA;AACA;AAfA;AAgBA;AAhBA;AAiBA;AACA;AACA;AAnBA;AAoBA;AACA;AArBA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AAwBA;AACA;AAMA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AAtEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAeA;AACA;AAKA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AA5EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AA+BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAIA;AACA;AACA;AACA;AAVA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAuBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AA1BA;AA2BA;AACA;AACA;AACA;AA9BA;AA+BA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAlCA;AAmCA;AACA;AACA;AACA;AAtCA;AAuCA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AA1CA;AA2CA;AACA;AA5CA;AA6CA;AAAA;AAAA;AAAA;AAAA;AACA;AA9CA;AA+CA;AACA;AAMA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AAxlBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAOA;AACA;AACA;AA9BA;AA+BA;AAAA;AAAA;AAAA;AAAA;AACA;AAhCA;AAiCA;AACA;AAMA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AA1FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAOA;AACA;AACA;AATA;AAUA;AAVA;AAWA;AACA;AACA;AAbA;AAcA;AACA;AAfA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAkBA;AACA;AAMA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AAxEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AAMA;AACA;AAMA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AArEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAZA;AAaA;AACA;AAMA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AA5EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;AAC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;AAxCA;AA0CA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AACA;AAAA;AACA;AAJA;AAKA;AACA;AACA;AACA;AAyBA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAzDA;AA0DA;AACA;AACA;AACA;AA7DA;AA8DA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AA5EA;AA6EA;AA7EA;AA8EA;AACA;AACA;AACA;AAjFA;AAkFA;AAlFA;AAmFA;AACA;AACA;AACA;AAtFA;AAuFA;AACA;AAxFA;AAyFA;AAAA;AAAA;AAAA;AAAA;AACA;AA1FA;AA2FA;AACA;AAOA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAjKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACCA;AAEA;AACA;AACA;AACA;AAGA;AAEA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AATA;AAJA;AAbA;AA4BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAFA;AADA;AA7BA;AAqCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAJA;AAFA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAJA;AAFA;AAVA;AAmBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAFA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAFA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAFA;AArBA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAJA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAJA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAJA;AAFA;AASA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AATA;AAJA;AA1BA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AALA;AAFA;AADA;AA1CA;AAqDA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAJA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAJA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAJA;AAFA;AAjBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAJA;AAFA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAJA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAJA;AAFA;AAlBA;AA0BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAbA;AAmBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAbA;AAmBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAbA;AAmBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AA/BA;AAqCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAbA;AAmBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AArCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AA9CA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AAvDA;AAgEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAFA;AARA;AAdA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAFA;AAVA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AANA;AAFA;AADA;AApBA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AA1BA;AADA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AA1BA;AADA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AA1BA;AADA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AA1BA;AADA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AALA;AA1BA;AADA;AAkCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAPA;AADA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAtBA;AA0BA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAZA;AA3BA;AAruIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AARA;AASA;AATA;AAUA;AACA;AACA;AAnJA;AA0JA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AALA;AACA;AAJA;AAWA;AACA;AADA;AACA;AAZA;AAeA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAhBA;AAmBA;AACA;AApBA;AAqBA;AACA;AAtBA;AAuBA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAxBA;AA2BA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AAHA;AAIA;AACA;AALA;AAAA;AACA;AA5BA;AAkCA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AAHA;AAIA;AACA;AALA;AAAA;AACA;AAnCA;AAyCA;AACA;AACA;AArMA;AAsMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAtNA;AAuNA;AAAA;AACA;AAAA;AACA;AACA;AA1NA;AA2NA;AAAA;AACA;AAAA;AACA;AACA;AA9NA;AA+NA;AAAA;AACA;AAAA;AACA;AACA;AAlOA;AAmOA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AACA;AAvOA;AAwOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AA7OA;AA8OA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAPA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAbA;AAAA;AAaA;AACA;AACA;AA3QA;AA4QA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AARA;AAcA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;AAjBA;AAAA;AAiBA;AACA;AACA;AAvSA;AAwSA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAJA;AASA;AACA;AACA;AACA;AAHA;AACA;AAVA;AAeA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AA3TA;AA4TA;AAAA;AACA;AAAA;AACA;AACA;AA/TA;AAgUA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AADA;AAGA;AACA;AAtUA;AAuUA;AAAA;AACA;AAAA;AACA;AACA;AA1UA;AA2UA;AAAA;AACA;AAAA;AACA;AACA;AA9UA;AA+UA;AAAA;AACA;AAAA;AACA;AACA;AAlVA;AAmVA;AACA;AAAA;AACA;AAGA;AAGA;AAPA;AACA;AAWA;AACA;AACA;AACA;AACA;AAjBA;AAkBA;AAMA;AACA;AA5WA;AA6WA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AASA;AACA;AA3XA;AA4XA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AAnYA;AAkiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAXA;AAVA;AA2BA;AAjCA;AAmCA;AACA;AACA;AAxkBA;AAilBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAgBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AA1BA;AA0CA;AACA;AACA;AACA;AAhoBA;AAmoBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAxBA;AAiCA;AACA;AACA;AAvqBA;AAIA;AACA;AALA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAPA;AAcA;AAdA;AAeA;AAfA;AAgBA;AACA;AAjBA;AAkBA;AACA;AAnBA;AAoBA;AApBA;AAqBA;AArBA;AAsBA;AACA;AAvBA;AAwBA;AACA;AAzBA;AA0BA;AACA;AA3BA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AA5BA;AA2CA;AACA;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;AANA;AAAA;AACA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;AAJA;AAAA;AAKA;;;;;AA+CA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AADA;AAGA;;;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;;;AA4OA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAHA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AA9DA;AAuEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AADA;AACA;AADA;AANA;AAWA;AAAA;AA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AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AADA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AADA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClLA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;AAKA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AAkEA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AApEA;AACA;AACA;AALA;AAMA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAHA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AAdA;AAeA;AACA;AACA;AAFA;AAfA;AAmBA;AACA;AACA;;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAIA;AACA;AACA;;;;;;;;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAVA;AAWA;AACA;AADA;AAGA;AAdA;AAAA;AAeA;;;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AASA;AAAA;AAAA;AACA;AADA;AATA;AAYA;AAdA;AAkBA;;;;AAjGA;AACA;AADA;AAEA;AADA;;;;AAmGA;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AADA;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;;AACA;;;AAEA;;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;;AAEA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;;AAIA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAEA;AACA;AAAA;AAAA;AAAA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;AAEA;;AACA;;AACA;AACA;;;AACA;;AAEA;AAAA;;AAEA;;AACA;AAAA;AAAA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AADA;AAGA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AATA;AADA;AAYA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAXA;AADA;AAcA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAXA;AADA;AAcA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAZA;AADA;AAeA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AARA;AADA;AAWA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AAVA;AADA;AAaA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AARA;AADA;AAWA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAIA;AATA;AADA;AAYA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AARA;AADA;AAWA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AARA;AADA;AAWA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAXA;AADA;AAcA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAXA;AADA;AAcA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AATA;AADA;AAYA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAhBA;AADA;AAmBA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAfA;AADA;AAkBA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AAAA;AADA;AAGA;AACA;AATA;AADA;AAYA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AARA;AADA;AAWA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AATA;AADA;AAYA;AACA;;AACA;AAEA;AAEA;;AAAA;AACA;AADA;AAGA;AACA;AACA;AAVA;AADA;AAaA;AACA;;AACA;AAEA;AAGA;AACA;AAEA;;AAAA;AACA;AADA;AAIA;AAbA;AADA;AA7PA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;;;;;;ACAA;;;;;;;ACCA;AAEA;AAIA;AAEA;AACA;AACA;;AACA;AAGA;AACA;AACA;AACA;AAPA;AADA;AADA;;;;;;;;;ACRA;AACA;AAGA;AAEA;AACA;;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;;;AAVA;;AAYA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAEA;AACA;AADA;AAEA;AACA;AADA;AALA;AASA;AACA;AACA;AADA;AAIA;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AATA;AAmBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAtBA;AA+BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAfA;AAwBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAtBA;AA+BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAfA;AAwBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAfA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAtBA;AA+BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AARA;AAiBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AANA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AAVA;AAXA;AA2BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AANA;AARA;AAoBA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AAVA;AAeA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AAVA;AAeA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AAVA;AAeA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AAdA;AAmBA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;;AAlBA;AAlEA;AA0FA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AAzCA;AA2CA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AA5BA;AA5ZA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;AACA;AACA;AACA;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AACA;AA1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AAIA;AACA;AAcA;AAKA;AACA;AACA;AACA;AACA;AAlDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA2BA;AAIA;AACA;AAcA;AAKA;AACA;AACA;AACA;AACA;AA1DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAIA;AACA;AAcA;AAKA;AACA;AACA;AACA;AACA;AAxCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AA/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAhCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAzDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAzDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAzDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAzDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAIA;AACA;AAqEA;AAMA;AACA;AACA;AACA;AACA;AAzGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAIA;AACA;AAqEA;AAMA;AACA;AACA;AACA;AACA;AAzGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAIA;AACA;AAqEA;AAMA;AACA;AACA;AACA;AACA;AAzGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AA1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AA7BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AA7BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAhCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAIA;AACA;AAkBA;AAMA;AACA;AACA;AACA;AACA;AA5CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AA5CA;;;A","sourceRoot":""}